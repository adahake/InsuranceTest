{"collection":{"info":{"_postman_id":"d4f65724-f381-4553-bfff-58b5f32db7fe","name":"Insurance","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"GET","item":[{"name":"IP_User","item":[{"name":"DnB","item":[{"name":"Get_ByDUNS","event":[{"listen":"prerequest","script":{"id":"3c9a335e-1121-4fda-99e0-faba24f37ba2","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var jsonData = res.json();\r","    //  console.log(\"duns:\"+jsonData[0].duns);\r","    pm.variables.set(\"duns\",jsonData[0].duns);\r","    pm.variables.set(\"Debtor\",jsonData[0]);\r","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"6cb5b49d-cea6-4628-97c0-94e4ddfd7947","exec":["\r","pm.variables.get(\"Debtor\")\r","pm.test(\"To check /api/{id} returns DUNS\", function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(pm.variables.get(\"Debtor\")).to.eql(jsonData.results[0]);\r","    //pm.expect(jsonData.duns).to.eql(expectedDUNS);\r","}); \r",""],"type":"text/javascript"}}],"_postman_id":"77071720-8c5f-4a5f-a75a-7b4f0b0e7b3c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/DnB?duns={{duns}}","host":["{{baseURI}}"],"path":["api","DnB"],"query":[{"key":"maxResultCount","value":"25","disabled":true},{"key":"country","value":"United State of America","disabled":true},{"key":"name","value":"Test Account Debtor 8","disabled":true},{"key":"duns","value":"{{duns}}"}]}},"response":[]},{"name":"Get_MaxResultCount","event":[{"listen":"test","script":{"id":"b93d5267-8276-4e82-b312-e6c8cd7d8918","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","pm.test(\"To check Debtor details is not null (sicCode,addressLine1,city,stateProvince,postalCode,countryCode,country,id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].addressLine1).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].city).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateProvince).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].postalCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].isActive).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","var responseJSONdata = JSON.parse(responseBody);\r","if(pm.response.code == 200 & responseBody !== '')\r","pm.test(\"Verify Max Result Count for dnb should be equal or below \" + pm.variables.get(\"maxResultCount\"), function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(jsonData.results.length).to.be.below(11);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"41708851-e7ac-4211-9eb6-9844fbfa04fb","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/Debtors\");","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","      ","}, function (err, res) {","    ","    var jsonData = res.json();","    //  console.log(\"duns:\"+jsonData[0].duns);","    pm.variables.set(\"name\",jsonData[0].name);","    pm.variables.set(\"Debtor\",jsonData[0]);","    pm.variables.set(\"country\",jsonData[0].countryCode);","    pm.variables.set(\"Debtor\",jsonData[0]);","    pm.variables.set(\"maxResultCount\",5);","});","","","//pm.variables.set(\"name\", \"Test Account Debtor 8\");","//pm.variables.set(\"country\", \"US\");",""],"type":"text/javascript"}}],"_postman_id":"306176dd-4d6c-47ba-9c7c-bc7c7b8ed6c8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/dnb?name={{name}}&country={{country}}&maxResultCount={{maxResultCount}}","host":["{{baseURI}}"],"path":["api","dnb"],"query":[{"key":"name","value":"{{name}}"},{"key":"country","value":"{{country}}"},{"key":"maxResultCount","value":"{{maxResultCount}}"}]}},"response":[]}],"_postman_id":"ebd4c716-e99a-48eb-85ea-579db3cdcf4d","_postman_isSubFolder":true},{"name":"Broker","item":[{"name":"Get_Broker","event":[{"listen":"prerequest","script":{"id":"b7d72bf1-3684-4ad9-8917-6cd89ec1cc25","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"7a9038a6-5128-45d6-b017-c7c2a847aa72","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","}); \r","\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"33c9d424-85aa-4320-87b5-5cb86942637e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers","host":["{{baseURI}}"],"path":["api","Brokers"]}},"response":[]},{"name":"Get_CoBroker","event":[{"listen":"prerequest","script":{"id":"bb4ad7c5-65ae-413e-bebf-f882c497328d","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"7893e6f6-ddba-4a9e-87cc-654aeb0d0bef","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","}); \r","\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"f029927d-5ca2-464b-81b9-907bcf78c66c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/cobrokers","host":["{{baseURI}}"],"path":["api","cobrokers"]}},"response":[]},{"name":"Get_Broker Count=100","event":[{"listen":"test","script":{"id":"36907795-fb3b-40e6-9826-62f885a65fb7","exec":["var responseJSONdata = JSON.parse(responseBody);","","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}}],"_postman_id":"bfc5b5b0-cb09-4262-891e-4ce204230445","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?count=0","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"0"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Broker/MinimumSkip","event":[{"listen":"test","script":{"id":"bd5b1416-6ac8-49d7-a4dd-7f9f53297233","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"85e3d9e9-3a11-4553-a39b-624a3821ea2b","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"258867e0-7c4b-41b7-8df0-a77141c1319e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Broker/MaximumSkip","event":[{"listen":"test","script":{"id":"559c8206-4564-412c-96ee-28a3b08f56b2","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(105);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"afff5b2c-c121-4c3f-a8a0-62d8ad2caf2e","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"3896be3d-a9f5-4454-b2a4-e14fec8b46bc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"440f4adb-2d5e-4665-a715-d59f896d705c","_postman_isSubFolder":true},{"name":"Policy","item":[{"name":"Get_Policy Attachments","event":[{"listen":"test","script":{"id":"4401ac55-671a-4d4c-afa0-78663cf89500","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Date Financier Purchases Asset' || ","            responseJSONdata[i].name == 'Delivery Date' ||","            responseJSONdata[i].name == 'Invoice Date' ||","            responseJSONdata[i].name == 'Not Applicable' ||","            responseJSONdata[i].name == 'Shipment Date' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"9ba06c74-93a6-40b9-84aa-760d5bd8a8c0","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"a0397893-bbf8-4e0f-8540-871ac33b56a8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policyattachmenttypes","host":["{{baseURI}}"],"path":["api","policyattachmenttypes"]}},"response":[]},{"name":"Get_Policy Deductible Types","event":[{"listen":"test","script":{"id":"9b6adebc-df25-4c90-aa7b-3dc0efe9954d","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Yes - % of aggregate losses' || ","            responseJSONdata[i].name == 'Yes - % of each and every loss' ||","            responseJSONdata[i].name == 'Yes - Amount of aggregate losses' || ","            responseJSONdata[i].name == 'Yes - Amount of each and every loss' ||","            responseJSONdata[i].name == 'No'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"1a0e7f45-8a8f-4fdc-a529-307116c57552","exec":[""],"type":"text/javascript"}}],"_postman_id":"b79b25b6-0852-424a-9d31-c1a71b838bf2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policydeductibletypes","host":["{{baseURI}}"],"path":["api","policydeductibletypes"]}},"response":[]},{"name":"Get_Policy Liability Limit Types","event":[{"listen":"test","script":{"id":"528720e0-8a95-4786-8dfe-3a402b2bdc99","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Buyer' || ","            responseJSONdata[i].name == 'Country' ||","            responseJSONdata[i].name == 'Policy'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e8cd551b-5ad9-4a6d-8e9f-a67001216763","exec":[""],"type":"text/javascript"}}],"_postman_id":"d2fc2353-b052-4788-a982-b6fba40d79d2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policyliabilitylimittypes","host":["{{baseURI}}"],"path":["api","policyliabilitylimittypes"]}},"response":[]},{"name":"Get_Policy Premium Types","event":[{"listen":"test","script":{"id":"ac4ed66c-bd42-40b7-938a-a93799ef8878","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Blended Rate by Buyer' || ","            responseJSONdata[i].name == 'Blended Rate By Country' ||","            responseJSONdata[i].name == 'Fixed rate'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"34390198-694a-4d4d-843a-a13ee9cdd740","exec":[""],"type":"text/javascript"}}],"_postman_id":"dc643ea1-ad7c-42fc-b2b2-62a4dc89e8dc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policypremiumtypes","host":["{{baseURI}}"],"path":["api","policypremiumtypes"]}},"response":[]},{"name":"Get_Report Period Types","event":[{"listen":"test","script":{"id":"c024cba1-5e34-4f5e-bfe8-882ccd1c321a","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Annually' || ","            responseJSONdata[i].name == 'Custom' ||","            responseJSONdata[i].name == 'Monthly' ||","           responseJSONdata[i].name == 'Quarterly' ||","           responseJSONdata[i].name == 'Semi-Annually' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"33438a1a-2a0e-474a-85e1-596890f97c9d","exec":[""],"type":"text/javascript"}}],"_postman_id":"da450663-28a5-4456-8630-fd5bf0c4622d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/reportperiodtypes","host":["{{baseURI}}"],"path":["api","reportperiodtypes"]}},"response":[]},{"name":"Get_Scope of Coverage Types","event":[{"listen":"test","script":{"id":"da9dc59e-5d3c-4778-abc5-6c7ac70de6a2","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'All Domestic Sales' || ","            responseJSONdata[i].name == 'All Export Sales' ||","            responseJSONdata[i].name == 'Named Buyers' ||","           responseJSONdata[i].name == 'All Sales' ||","            responseJSONdata[i].name == 'Not Applicable' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"97744441-54fb-4db6-a7c4-9518696ca3d7","exec":[""],"type":"text/javascript"}}],"_postman_id":"430e4f7a-57b2-4f7d-9cf1-546b5d221d0f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/scopeofcoveragetypes","host":["{{baseURI}}"],"path":["api","scopeofcoveragetypes"]}},"response":[]},{"name":"Get_Policy Documents Types","event":[{"listen":"test","script":{"id":"24be5e82-2126-4586-b716-f37fd99504da","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Additional Named Insured Endorsement' || ","            responseJSONdata[i].name == 'Broker Endorsement' ||","            responseJSONdata[i].name == 'Country Schedule' ||","           responseJSONdata[i].name == 'DCL Endorsement'  ||","           responseJSONdata[i].name == 'Ledger DCL Endorsement' || ","            responseJSONdata[i].name == 'Loss Payee Endorsement' ||","            responseJSONdata[i].name == 'LQX Endorsement' ||","           responseJSONdata[i].name == 'Other'  ||","           responseJSONdata[i].name == 'Policy Declarations' ||","            responseJSONdata[i].name == 'Policy Terms and Conditions' ||","           responseJSONdata[i].name == 'Preference Claims Endorsement'  ||","           responseJSONdata[i].name == 'Premium Schedule' || ","            responseJSONdata[i].name == 'Sanctions Endorsement' ||","            responseJSONdata[i].name == 'Seller Schedule'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ecfafd63-5755-4709-8772-f8d9e9d88d53","exec":[""],"type":"text/javascript"}}],"_postman_id":"f1670104-b4a3-40c5-b8bd-7b4ee47a6573","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policydocumenttypes","host":["{{baseURI}}"],"path":["api","policydocumenttypes"]}},"response":[]},{"name":"Get_Currencies","event":[{"listen":"test","script":{"id":"e2b6da06-f7ca-44e1-b207-bcae3a25acb5","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"07fadc27-10a3-4595-b885-af70820ebee5","exec":[""],"type":"text/javascript"}}],"_postman_id":"29818003-94ba-41f4-ad80-48320dcb2a36","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/currencies","host":["{{baseURI}}"],"path":["api","currencies"]}},"response":[]},{"name":"Get_Governing Laws","event":[{"listen":"test","script":{"id":"065fd78a-7fb5-40a1-acf1-a5f8936d9d5d","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Governing Law is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].code).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].isIncludedInPolicy).to.not.eql(null);\r","  \r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a7fe6509-1267-4fa8-8a20-1b515ca08442","exec":[""],"type":"text/javascript"}}],"_postman_id":"9d812da3-8b02-442b-a70d-ae675985d66f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/governinglaws","host":["{{baseURI}}"],"path":["api","governinglaws"]}},"response":[]},{"name":"Get_Political Risk Type","event":[{"listen":"test","script":{"id":"464745fc-b530-4dc9-b645-9845b0226750","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'N/A'  ||","           responseJSONdata[i].name == 'No' || ","            responseJSONdata[i].name == 'By Country' ||","            responseJSONdata[i].name == 'Yes'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"135536b8-f275-4484-bd9b-a08874f4973c","exec":[""],"type":"text/javascript"}}],"_postman_id":"befd67c3-7840-4654-bf8c-a2cdc00938a2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/politicalrisktypes","host":["{{baseURI}}"],"path":["api","politicalrisktypes"]}},"response":[]},{"name":"Get_Peril Coverage Type","event":[{"listen":"test","script":{"id":"955fbb07-2df3-4f29-aa9b-95ab3020b467","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'All Risks'  ||","           responseJSONdata[i].name == 'Insolvency' || ","            responseJSONdata[i].name == 'Protracted Default' ||","            responseJSONdata[i].name == 'Political Risks'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ac38284e-c177-4da0-ae49-b93bad236734","exec":[""],"type":"text/javascript"}}],"_postman_id":"a02b2069-0ea0-461d-950a-87971430e83e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/perilcoveragetype","host":["{{baseURI}}"],"path":["api","perilcoveragetype"]}},"response":[]},{"name":"Get_Peril Coverage Period Type","event":[{"listen":"test","script":{"id":"95c34440-a4e3-488a-aa06-a790be4b4d0b","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Country'  ||","           responseJSONdata[i].name == 'Enter Value' || ","            responseJSONdata[i].name == 'N/A' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"dc66aa64-7075-49bb-8f92-45019416afcf","exec":[""],"type":"text/javascript"}}],"_postman_id":"6b269bc2-574e-437a-9fa9-e1db0cbc2187","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/perilcoverageperiodtype","host":["{{baseURI}}"],"path":["api","perilcoverageperiodtype"]}},"response":[]},{"name":"Get_Max Extension Period Type","event":[{"listen":"test","script":{"id":"3499bef1-56a3-47d1-aea0-cc3ac5634890","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Country'  ||","           responseJSONdata[i].name == 'Enter Value'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"81d35409-a70d-4b79-b267-90b99d14cf46","exec":[""],"type":"text/javascript"}}],"_postman_id":"a41f6c11-5273-429e-a929-bad0b34df177","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/maxextensionperiodtype","host":["{{baseURI}}"],"path":["api","maxextensionperiodtype"]}},"response":[]},{"name":"Get_ Buyer Value Option Types","event":[{"listen":"test","script":{"id":"102233ba-2f33-4249-921f-447000212d1c","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Buyer'  ||","           responseJSONdata[i].name == 'Enter Value'            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"efdf6b60-c502-42b0-8a58-54c61f2badef","exec":[""],"type":"text/javascript"}}],"_postman_id":"656918f5-b6f9-4c94-a57b-e88bd3620efe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/buyervalueoptiontypes","host":["{{baseURI}}"],"path":["api","buyervalueoptiontypes"]}},"response":[]}],"_postman_id":"5a2248fb-de68-401a-a91e-76a65d1db1e3","_postman_isSubFolder":true},{"name":"Carriers","item":[{"name":"Get_Carriers","event":[{"listen":"test","script":{"id":"e8713d87-7276-4664-bd4a-a6d4dac14268","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"26553fd5-2819-427a-ad42-27d696e0be28","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"6acc63a5-3e6a-41b3-b221-f2d88d9b8382","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"]}},"response":[]},{"name":"Get_CarrierPolicy","event":[{"listen":"test","script":{"id":"80d28ba6-4f95-448d-9fb5-b86c52359a2b","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200);","    ","});","","","var expectedCarrierId = JSON.parse(pm.variables.get(\"Carriers\"));","","pm.test(\"To check Policy details is not null (carrierId,carrierName,policies)\" , function(){","    for (var i=0; i < responseJSONdata.length; i++)","    {","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","      pm.expect(responseJSONdata[i].carrierId).to.not.eql(null);","      pm.expect(responseJSONdata[i].carrierName).to.not.eql(null);","      pm.expect(responseJSONdata[i].policies).to.not.eql(null);","     ","    }  ","});","","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","    pm.expect(responseJSONdata.length).to.be.above(0);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3ef1706c-9930-4520-b582-e130426dd549","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/InsuranceCarriers\");","console.log(url);","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","    var carriers=[];","    for (var i=0;i<jsonData.length;i++)","    {","        carriers.push(jsonData[i].id);","    }","    pm.variables.set(\"Carriers\", JSON.stringify(carriers));","    ","});"],"type":"text/javascript"}}],"_postman_id":"cf87d60f-aa85-4b89-a4f8-676b6dd43e3d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/carrierpolicies","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","carrierpolicies"]}},"response":[]},{"name":"Get_Carriers Count=100","event":[{"listen":"test","script":{"id":"4842460b-f180-456e-bc74-2851ebeb86a9","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"30629785-2888-403d-aa1d-d737d6969ac7","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"24ac5578-d31b-46c8-ba9e-0c0597f18150","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?count=100","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"count","value":"100"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Carriers/MinimumSkip","event":[{"listen":"test","script":{"id":"d8e8f72a-eaa7-4c94-8484-0cfc58bb2fae","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6a74d6a7-d692-483e-9765-f46d43c7eb4c","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"6ae750da-3e41-42c1-9732-256ca81a40c1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Carriers/MaximumSkip","event":[{"listen":"test","script":{"id":"a47b4f52-e699-4af3-aa56-defdca465b31","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6532a18d-0e11-440d-b1f6-ae61185528c5","exec":["pm.variables.set(\"skip\", 10);"],"type":"text/javascript"}}],"_postman_id":"761e2825-c39b-43fc-9f66-abce44772256","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"5366f046-e8f2-4567-9123-f7c6c2bd17c0","_postman_isSubFolder":true},{"name":"Debtor","item":[{"name":"Get_Debtors","event":[{"listen":"test","script":{"id":"f6a3f9ed-4ffe-472d-b1af-73eb2adf6c85","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"To check Debtor details is not null (sicCode,addressLine1,city,stateProvince,postalCode,countryCode,country,id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].addressLine1).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].city).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].postalCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].country).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","//pm.test(\"Validate response body: \", function(){\r","     //pm.expect(responseJSONdata).to.have.any.keys('sicCode','addressLine1','city','stateProvince','postalCode','countryCode','country','id','name','duns','countryName' );\r","    //});\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a930304e-6c2b-444d-98a2-10154aa151e7","exec":[""],"type":"text/javascript"}}],"_postman_id":"9d455c5f-d58c-4ceb-b70a-52bc832fd0d3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"Name","value":"Test Account Debtor 8","disabled":true}]}},"response":[]},{"name":"Get_Debtors/DeafultValue","event":[{"listen":"test","script":{"id":"76ced94a-f5ff-4fa9-9a84-a4751d932d11","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","\r","if(responseBody !== '')\r","{\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.above(1);\r","    });\r","}"],"type":"text/javascript"}}],"_postman_id":"15bf8c99-75c4-42a0-8f9f-1094bd2a6de7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Debtors?count=100","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Debtors/MinimumSkip","event":[{"listen":"test","script":{"id":"953e19f4-1fb0-4ba5-8df4-bfedf9159bd7","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(601);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"2caace83-dc2f-4520-9e7a-e950b81fcce5","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"35fb8d74-9950-40da-b65f-ae7dd946f03d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Debtors/MaximumSkip","event":[{"listen":"test","script":{"id":"c470178f-cc42-4f0b-a597-fd571f737c3c","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)","});","","if (responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.be.below(601);","    });","}","else {","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"9647f3c0-1156-4ccc-b44a-b56515e82d55","exec":["pm.variables.set(\"skip\", 50);"],"type":"text/javascript"}}],"_postman_id":"50244136-9dc3-40b6-b687-5b68b949cc88","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"30ab9482-79b4-4115-b4ac-a177cffca594","event":[{"listen":"prerequest","script":{"id":"8e70d06a-cc50-41f1-bedc-51c3cbe3f909","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"ec9330f3-29ca-4044-885c-c30293f702c5","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Lookups","item":[{"name":"Get_AttachmentPeriodTypes","event":[{"listen":"test","script":{"id":"3dcf73cc-1a82-4746-996f-68ae6752fc81","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Date Financial Purchase Asset' || ","            responseJSONdata[i].name == 'Date of Receipt by AD' ||","            responseJSONdata[i].name == 'Invoice Date' || ","            responseJSONdata[i].name == 'Supplier Shipment Date' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"2022a08a-9e44-4693-9af4-6247f86525f3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/attachmentperiodtypes","host":["{{baseURI}}"],"path":["api","attachmentperiodtypes"]}},"response":[]},{"name":"Get_PremiumBasisType","event":[{"listen":"test","script":{"id":"97b77e20-210d-411d-bc78-7a3f15fdd7e0","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'GROSS LIMIT' || ","            responseJSONdata[i].name == 'INSURABLE SALES' ||","            responseJSONdata[i].name == 'MONTH END A/R BALANCES' || ","            responseJSONdata[i].name == 'MONTH END GROSS EXPOSURE' || ","             responseJSONdata[i].name == 'MONTH END NET EXPOSURE' ||","            responseJSONdata[i].name == 'NET LIMIT' ||","            responseJSONdata[i].name == 'MONTHLY PEAK A/R'||","            responseJSONdata[i].name == 'UTILIZATION'","            ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Premium Basis Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"7eac8eac-3d3b-48d0-9ae8-a10826d30387","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/premiumbasistypes","host":["{{baseURI}}"],"path":["api","premiumbasistypes"]}},"response":[]},{"name":"Get_Countries","event":[{"listen":"test","script":{"id":"45c32f2c-6fe0-4e83-98bd-f7249185f73b","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","pm.test(\"To check Country details is not null (id,iso2,iso3,name)\" , function(){","    for (var i=0; i < responseJSONdata.length; i++)","    {","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","      pm.expect(responseJSONdata[i].id).to.not.eql(null);","      pm.expect(responseJSONdata[i].iso2).to.not.eql(null);","      pm.expect(responseJSONdata[i].iso3).to.not.eql(null);","      pm.expect(responseJSONdata[i].name).to.not.eql(null);","      ","    }         ","    ","}); ","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","    pm.expect(responseJSONdata.length).to.be.above(0);","});"],"type":"text/javascript"}}],"_postman_id":"689a6e12-4449-4f99-8b15-ac0d15155a55","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/countries","host":["{{baseURI}}"],"path":["api","countries"]}},"response":[]},{"name":"Get_Products","event":[{"listen":"test","script":{"id":"e1fad6b3-d0ec-485a-a5ad-7bc4ed6eaea1","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'A/R' || ","            responseJSONdata[i].name == 'SCF' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"da686c11-0a8d-400d-9d08-c7839546975a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/products","host":["{{baseURI}}"],"path":["api","products"]}},"response":[]}],"_postman_id":"7e0853d0-e8fe-43da-b4de-16e4ea3adc27","_postman_isSubFolder":true},{"name":"Quotes","item":[{"name":"Quotes By Id","item":[{"name":"Get_PendingQuotes By Id","event":[{"listen":"test","script":{"id":"44448e27-72be-4785-a70b-881141853b0d","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","    \r","    \r","pm.test(\"To check Quote details is not null (status,debtorIds,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,quoteTypeId,premiumBasisTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].premiumBasisTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","    }         \r","    \r","});\r","    \r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","    pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","      "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"27412108-618d-4adc-8ea3-5c7c9d29201b","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"00e5e16d-4460-4625-86fb-a6938112f264","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}"]}},"response":[]},{"name":"Get_ApprovedLimits By Id","event":[{"listen":"test","script":{"id":"8e98b52a-3577-4371-9877-ecc0763f4021","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","    pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","      "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"20ab6b45-04f9-4ca0-8041-b677db2cdb26","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=approvedlimit\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"64393538-8d12-41d1-9995-79d66a731866","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}"]}},"response":[]},{"name":"Get_Quotes By ID with Original Quote","event":[{"listen":"prerequest","script":{"id":"dfb9919e-df82-4c1a-bfa6-21fb237c9e33","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"d2bb359d-cf4f-41a1-8cdd-0c4948be7ae3","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","\r","pm.test(\"To check Original Quote details is not null (status,debtorIds,insuranceCarrierId,insuranceCarrier,insurancePolicyId,insurancePolicy,initiatingParticipantId,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].initiatingParticipantId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"919c8664-e5d4-4d29-9f53-0132c93e1e70","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}/orig","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}","orig"]}},"response":[]},{"name":"Get_Quotes By ID with Last Updated Quote","event":[{"listen":"prerequest","script":{"id":"c8916d47-10ef-4aa9-b3f4-1de0f86c58d2","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c4dbc8a8-c5ec-4246-a3d7-7f6fe8342138","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","\r","pm.test(\"To check Original Quote details is not null (status,debtorIds,insuranceCarrierId,insuranceCarrier,insurancePolicyId,insurancePolicy,initiatingParticipantId,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].initiatingParticipantId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"dfe6f08a-f5a8-44af-a40b-0ed114a0e25d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}/last","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}","last"]}},"response":[]}],"_postman_id":"f1a6672a-a51e-48b6-b3fd-de0db1d76bea","_postman_isSubFolder":true},{"name":"Quotes By ScreenName","item":[{"name":"PendingQuotes","item":[{"name":"Get_PendingQuotes","event":[{"listen":"test","script":{"id":"561dd98e-f12b-4741-8ba0-1d8c0a093a8f","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a99c5c81-4a5c-47e9-b2c9-c8c38b18b3d9","exec":[""],"type":"text/javascript"}}],"_postman_id":"02cf18a4-278c-4497-9283-50b9cf200e98","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumCount","event":[{"listen":"test","script":{"id":"064d1fa6-8c44-4ab5-b52c-df6cdc1bdfe0","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"2bad0b81-8ce8-4547-a07a-9ea0ed6c03a8","exec":[""],"type":"text/javascript"}}],"_postman_id":"ef065b88-02d1-4b55-b000-9e41a6308257","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumCount","event":[{"listen":"test","script":{"id":"44f3ff84-ab53-49f6-b74f-59d7b74d032c","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"7aa4b7c5-09e3-4f98-be78-d9c469826f9e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=10","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"10"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumSkip","event":[{"listen":"test","script":{"id":"42950661-4096-48f5-a0ac-3ab3b161d90a","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d6043d35-9f97-4524-9b4f-b672df422d12","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"6ff0d15c-a48d-4140-84af-c98d104929c2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumSkip","event":[{"listen":"test","script":{"id":"0782bb7d-c534-4549-a143-ce88f322e7fb","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"dcdd0db6-1dab-4828-a809-d5955f2bdf49","exec":["pm.variables.set(\"skip\", 0);"],"type":"text/javascript"}}],"_postman_id":"95d0466c-6752-4cc7-b3c1-ed68d9c23e90","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"5a46168f-bf7d-456d-bcf5-6aeec2ba7b94","_postman_isSubFolder":true},{"name":"ApprovedLimits","item":[{"name":"Get_ApprovedLimits","event":[{"listen":"test","script":{"id":"43a4451a-ca89-44a1-8f1e-e9b0ccad4882","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"de25212a-1a30-4d55-ab4b-81e083872655","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumCount","event":[{"listen":"test","script":{"id":"39c1bf4a-a3cc-4a88-bea1-a59591b75b8e","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"ac32a4bb-414a-45f7-9905-74752540978b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumCount","event":[{"listen":"test","script":{"id":"e54f8b10-d042-4058-86ce-094a20d67434","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"2279c70e-bf65-4651-902c-ad93173dee0c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=100","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumSkip","event":[{"listen":"test","script":{"id":"479795a0-6916-4ff6-a2e1-cc475dae68a0","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6f2b647a-f90b-47de-8289-2da49bead5f3","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"286e1b89-0b34-4356-898e-b06aa7c45595","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumSkip","event":[{"listen":"test","script":{"id":"3df02b41-953d-4d0c-9015-9d8283006555","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"303f0fc8-f3af-485c-9da3-1fe9de5360f4","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"7fd0c74a-d299-4abe-b0c2-01560b831fbd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"2f01493f-1755-487b-a6aa-2e5b57d8b979","_postman_isSubFolder":true}],"_postman_id":"8b08ff96-8db1-4b00-bb90-4b4de3989514","_postman_isSubFolder":true}],"_postman_id":"08335f24-5c85-4fc1-b0ee-769c0e9ac19a","_postman_isSubFolder":true},{"name":"Activity Monitor","item":[{"name":"Get_ActivityMonitor","event":[{"listen":"test","script":{"id":"2656a017-d54c-4ebe-ac0f-988bfd05e71a","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"1227959b-736e-4dc5-b22a-92de1392df38","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor","host":["{{baseURI}}"],"path":["api","ActivityMonitor"]}},"response":[]},{"name":"Get_ActivityMonitor By Id","event":[{"listen":"test","script":{"id":"af034e1f-7d8b-40e3-a69e-2cff86932da7","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"178eb67f-9bba-43c9-8bc7-95c525f788ff","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/ActivityMonitor\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var responseJSONdata = res.json();\r","    var i=Math.floor((Math.random() * responseJSONdata.length) + 1);\r","    pm.variables.set(\"transId\",responseJSONdata[i].transactionId);\r","\r"," \r","});"],"type":"text/javascript"}}],"_postman_id":"b4a1c932-7dc8-4467-8cf4-99ca2076facb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor/{{transId}}","host":["{{baseURI}}"],"path":["api","ActivityMonitor","{{transId}}"]}},"response":[]},{"name":"Get_Transactions","event":[{"listen":"test","script":{"id":"aa19fbae-2759-4075-8690-b00abc29ccbd","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","pm.test(\"To check Transaction details is not null (transactionId,insuredPartyId,brokerId,coBrokerId,productId,maxCreditLimitRfq,indemnityRfq,currencyCodeRfq,requestCancellableByIpRfq,updatedOn,attachmentPeriodRfq)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].brokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].coBrokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnityRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].currencyCodeRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIpRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].attachmentPeriodRfq).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"df975caa-a4c1-42f2-90d8-d582b0b56708","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions","host":["{{baseURI}}"],"path":["api","Transactions"]}},"response":[]}],"_postman_id":"b23779b0-6fe5-4bb1-bce5-a3d3b9114b96","_postman_isSubFolder":true},{"name":"Transactions","item":[{"name":"Get_Transactions By ID","event":[{"listen":"test","script":{"id":"aa0f7fee-9e70-4ee2-9cf7-d866b585c42a","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Transaction details are not null (id,insuredPartyId,brokerId,product,maxCreditLimitRfq,indemnityRfq,insuredParty,transactionAccountDebtors)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].brokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].product).to.not.eql(null);\r","       pm.expect(responseJSONdata[i].maxCreditLimitRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnityRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredParty).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].transactionAccountDebtors).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6ef43ba7-e8ac-4185-abfc-62a7b6d72a33","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    pm.variables.set(\"TRANSID\",jsonData[0].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"7db87f25-4d32-46cf-8ac7-59fbbe734ce7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}"]}},"response":[]},{"name":"Get_Transactions logs By ID","event":[{"listen":"test","script":{"id":"2a6d5e53-07c0-492a-9dc5-4e7b2055544f","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Transaction details are not null (transactionId,quoteId,status,participantId,participantName,timestamp)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].participantId).to.not.eql(null);\r","       pm.expect(responseJSONdata[i].participantName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].timestamp).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"cde89c57-a13f-4a22-ae19-8fcd38dcb318","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    pm.variables.set(\"TRANSID\",jsonData[0].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"0410c362-ae3e-49ed-8023-83ef34d7be23","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}/logs","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}","logs"]}},"response":[]}],"_postman_id":"5f637c09-03a8-48db-bebc-93b1c30271e3","_postman_isSubFolder":true},{"name":"Notifications","item":[{"name":"Flow: Create and Delete","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"c818cf21-7221-445b-a84a-cd247701e7df","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"23d41ef4-bdbc-44f3-a5cf-36bb8c04eaa1","exec":[""],"type":"text/javascript"}}],"_postman_id":"687554f2-decf-4ba8-a03e-bab9a19708b5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\r\n{\r\n    \"email\": \"ALiquidx2020@gmail.com\",\r\n    \"subscriptions\": [\r\n      {\r\n        \"subscriptionTypeId\":1,\r\n        \"subscriptionType\": \"When a transaction/RFQ is generated\"\r\n      }\r\n    ]\r\n}\r\n ]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"e6b60b71-01ca-4b99-a1c0-d675d2de270d","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a2e1851e-1e91-4d70-9976-215f6520fdd2","exec":[""],"type":"text/javascript"}}],"_postman_id":"f432980f-17b3-464a-aa40-8ced25a7196f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"ALiquidx2020@gmail.com\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"2fb6bde4-432d-4261-866b-90d95a0b6383","_postman_isSubFolder":true},{"name":"Flow: Create and Delete By EmailId","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"ebe3fd04-9304-45c6-b32d-7392ccf1b9ea","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"726d38e6-2764-4ce9-9eec-c70007729a4a","exec":[""],"type":"text/javascript"}}],"_postman_id":"3dfedca8-2859-4465-9d5a-c1aee4c3611b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\r\n{\r\n    \"email\": \"ALiquidx2020@gmail.com\",\r\n    \"subscriptions\": [\r\n      {\r\n        \"subscriptionTypeId\":1,\r\n        \"subscriptionType\": \"When a transaction/RFQ is generated\"\r\n      }\r\n    ]\r\n}\r\n ]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Delete_Notifications By Email","event":[{"listen":"test","script":{"id":"de44a51e-6041-40dd-909f-35e34a9f4efa","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"566e1bb4-3efe-41b3-bc39-2fd78f124e81","exec":[""],"type":"text/javascript"}}],"_postman_id":"f449d74e-a878-4c2d-b9a0-2a85a223144a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/Notifications/ALiquidx2020@gmail.com","host":["{{baseURI}}"],"path":["api","Notifications","ALiquidx2020@gmail.com"],"query":[{"key":"email","value":"","disabled":true}]}},"response":[]}],"_postman_id":"def2075f-b575-423e-83c6-4a06d47b7307","_postman_isSubFolder":true},{"name":"Flow: Create, Edit and Delete","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"df004932-95a2-40f1-b5b4-eb8e9e8b2cbf","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d51e4cf0-67c8-46a3-9e4d-52b7d1f0f9c5","exec":[""],"type":"text/javascript"}}],"_postman_id":"abf9753b-23aa-4dfa-8af2-ba6277ac1937","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\r\n{\r\n    \"email\": \"ALiquidx2020@gmail.com\",\r\n    \"subscriptions\": [\r\n      {\r\n        \"subscriptionTypeId\":1,\r\n        \"subscriptionType\": \"When a transaction/RFQ is generated\"\r\n      }\r\n    ]\r\n}\r\n ]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"eb2a99db-121f-4652-9bf8-86309f317bab","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3fd8b29c-eb26-4f1b-853c-129a4edb38e2","exec":[""],"type":"text/javascript"}}],"_postman_id":"0c27613c-8ad4-412b-bf26-4d5e517999c3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"ALiquidx2020@gmail.com\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"f52035ff-213a-490b-ad1f-66aea714dd28","_postman_isSubFolder":true},{"name":"Get_Notifications","event":[{"listen":"test","script":{"id":"859a3ed4-cde5-4fc7-b006-d07656654b85","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"19d40ce5-466f-4a5d-9a6d-95b07d934997","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Get_Notifications By Email","event":[{"listen":"test","script":{"id":"e2ef1100-7165-4b9a-b00e-649eeb9b2885","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"fcbc8006-038e-4aed-a714-9de5f0117e28","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Notifications\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    \r","    var jsonData = res.json();\r","    var x = Math.floor((Math.random() * 2) + 1);\r","    pm.variables.set(\"email\", jsonData[x].email);\r","  \r","     \r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"e9eb1c6a-0b0d-439f-bc73-6cd3aafac688","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications/{{email}}","host":["{{baseURI}}"],"path":["api","Notifications","{{email}}"]}},"response":[]}],"_postman_id":"2e8773f3-2d42-405a-ae4d-51d8d730db95","_postman_isSubFolder":true}],"_postman_id":"1541fabd-80b7-4284-9c1a-1f24f23b9340","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"fbecadeb-2add-424d-bc37-549454c22589","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"352c2acc-f262-46db-beee-f4f3c1a41479","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"IC_User","item":[{"name":"Notifications","item":[{"name":"Get_Notifications","event":[{"listen":"test","script":{"id":"d8286498-5b54-43bb-9bd9-502ecde5cc72","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4ac6dce2-8584-4f19-a9fa-370bf3b2d7a4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"569ba9d8-b51c-4b5c-9e1b-9e6bf29f6855","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"394219b8-ec96-457a-9031-2d32fc30c5d3","_postman_isSubFolder":true},{"name":"Lookups","item":[{"name":"Get_AttachmentPeriodType","event":[{"listen":"prerequest","script":{"id":"d147f302-baa0-4271-9ad0-e2fabcea6cdf","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a061a1db-537e-4df0-ba89-0492123178ec","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();"," for (var i=0;   i<jsonData.length;  i++)"," { ","    var expectedAttachmentPeriodType = ['Date of Receipt by AD', 'Invoice Date','Date Financial Purchase Asset','Supplier Shipment Date'];","    pm.test(\"To Check whether attachment period type \"+ jsonData[i].name +\" is present\", function () {","      pm.expect(expectedAttachmentPeriodType).to.include( jsonData[i].name); ","    });"," }"],"type":"text/javascript"}}],"_postman_id":"ad005fcf-1c2a-43f0-a8b7-de21f0ce6d78","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/attachmentperiodtypes","host":["{{baseURI}}"],"path":["api","attachmentperiodtypes"]}},"response":[]},{"name":"Get_PremiumBasisTypes","event":[{"listen":"prerequest","script":{"id":"124610ac-46e8-4111-9510-f0635aeaedb4","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"0a3b9c19-c282-4624-a19d-d9b63ba0e5a3","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'GROSS LIMIT' || ","            responseJSONdata[i].name == 'INSURABLE SALES' ||","            responseJSONdata[i].name == 'MONTH END A/R BALANCES' || ","            responseJSONdata[i].name == 'MONTH END GROSS EXPOSURE' || ","             responseJSONdata[i].name == 'MONTH END NET EXPOSURE' ||","            responseJSONdata[i].name == 'NET LIMIT' ||","            responseJSONdata[i].name == 'MONTHLY PEAK A/R'||","            responseJSONdata[i].name == 'UTILIZATION'","            ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Premium Basis Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"fb12d424-d94b-4786-aa29-69ecc474d91d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/premiumbasistypes","host":["{{baseURI}}"],"path":["api","premiumbasistypes"]}},"response":[]},{"name":"Get_QuoteType","event":[{"listen":"prerequest","script":{"id":"928bb61d-310a-446e-9ee8-6dc716202bc0","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a93693a7-5ba4-49d5-ba45-fa741808b763","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmName = false;","            if (responseJSONdata[i].name == 'Firm' || ","            responseJSONdata[i].name == 'Last Look')","            {","                confirmName = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Name value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmName).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"092a7fa8-336c-42d3-b5e7-7db7081eb1d1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotetypes","host":["{{baseURI}}"],"path":["api","quotetypes"]}},"response":[]},{"name":"Get_SPCarrierRatings","event":[{"listen":"prerequest","script":{"id":"caa1074c-0ffe-40e0-9a9f-e85b8ae22f2b","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"0daad1b9-256a-4fc3-a0c8-c6be1f4e2e8e","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'AAA' || ","            responseJSONdata[i].name == 'AA+' ||","            responseJSONdata[i].name == 'AA' || ","            responseJSONdata[i].name == 'AA-' ||","            responseJSONdata[i].name == 'A+' || ","          responseJSONdata[i].name == 'A' ||","           responseJSONdata[i].name == 'A-' || ","            responseJSONdata[i].name == 'BBB+' ||","            responseJSONdata[i].name == 'BBB' || ","           responseJSONdata[i].name == 'BBB-' ||","            responseJSONdata[i].name == 'BB+' ||","             responseJSONdata[i].name == 'BB' ||","            responseJSONdata[i].name == 'BB-' ||","            responseJSONdata[i].name == 'B+'||","            responseJSONdata[i].name == 'B'||","            responseJSONdata[i].name == 'B-'||","            responseJSONdata[i].name == 'CCC+'||","            responseJSONdata[i].name == 'CCC'||","            responseJSONdata[i].name == 'CCC-'||","            responseJSONdata[i].name == 'CC'||","            responseJSONdata[i].name == 'C'||","            responseJSONdata[i].name == 'D'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"state value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"69dd29e9-8652-412d-aa0b-98f1ff93e5dc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/spcarrierrating","host":["{{baseURI}}"],"path":["api","spcarrierrating"]}},"response":[]},{"name":"Get_AmbestCarrierRating","event":[{"listen":"test","script":{"id":"f1f3013c-5a8c-4824-80c9-6ef4ec6695a1","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'A++' || ","            responseJSONdata[i].name == 'A+' ||","            responseJSONdata[i].name == 'A' || ","            responseJSONdata[i].name == 'A-' ||","            responseJSONdata[i].name == 'B++' || ","          responseJSONdata[i].name == 'B+' ||","           responseJSONdata[i].name == 'B' || ","            responseJSONdata[i].name == 'B-' ||","            responseJSONdata[i].name == 'C++' || ","           responseJSONdata[i].name == 'C+' ||","            responseJSONdata[i].name == 'C' ||","             responseJSONdata[i].name == 'C-' ||","            responseJSONdata[i].name == 'D' ||","            responseJSONdata[i].name == 'E'||","            responseJSONdata[i].name == 'F'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"state value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"e662ef95-600f-4f4b-b9d6-2146f238f8d8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ambestcarrierrating","host":["{{baseURI}}"],"path":["api","ambestcarrierrating"]}},"response":[]},{"name":"Get_QuoteDeclineType","event":[{"listen":"test","script":{"id":"41d08605-4af6-4831-ad23-ab2ac5a7a2f6","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Buyer Risk' || ","            responseJSONdata[i].name == 'Capacity Constraints'|| ","            responseJSONdata[i].name == 'Country Risk'|| ","            responseJSONdata[i].name == 'Geography'|| ","            responseJSONdata[i].name == 'Insufficient credit procedures'|| ","            responseJSONdata[i].name == 'Insufficient information to quote'|| ","            responseJSONdata[i].name == 'Loss history'|| ","            responseJSONdata[i].name == 'Other'|| ","            responseJSONdata[i].name == 'Payment Terms'|| ","            responseJSONdata[i].name == 'Pricing'|| ","            responseJSONdata[i].name == 'Sector Risk'|| ","            responseJSONdata[i].name == 'Size'|| ","            responseJSONdata[i].name == 'Structure'|| ","            responseJSONdata[i].name == 'Unable to cover key buyers'|| ","            responseJSONdata[i].name == 'Unable to provide requested structure'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Quote Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"f6caec60-daf4-4c44-b6cc-0fc7fc18c401","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotedeclinetypes","host":["{{baseURI}}"],"path":["api","quotedeclinetypes"]}},"response":[]}],"_postman_id":"13ee5746-75d8-4258-87d0-5de218df2755","_postman_isSubFolder":true},{"name":"Quotes","item":[{"name":"Quotes By Id","item":[{"name":"Get_Pendingquotes","event":[{"listen":"test","script":{"id":"79e835c0-1381-4d14-8ebf-ec1f73b729ac","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review' ||","            responseJSONdata[i].status == 'Transaction Ended'","            )","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"30b59749-40cc-4338-8f9a-ea5120c2602b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_Approvedlimit","event":[{"listen":"test","script":{"id":"f5a6b8ea-51ad-44e1-acbe-bbbfbfc37084","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"8f7baa2a-04a3-4658-9c58-054127e9f2ba","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]}],"_postman_id":"026be645-d545-49f5-975c-96f05fa3ac96","_postman_isSubFolder":true},{"name":"Quotes By ScreenName","item":[{"name":"PendingQuotes","item":[{"name":"Get_PendingQuotes","event":[{"listen":"test","script":{"id":"40df89c6-b937-4fe9-b87d-a133ce1200bf","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b185732f-bb45-4108-a3a0-3d6c033428bd","exec":[""],"type":"text/javascript"}}],"_postman_id":"b2ecb4d0-0f72-471d-bbce-bab7136cc657","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumCount","event":[{"listen":"test","script":{"id":"a3fd6ca5-fa45-4ce2-8385-ecfaad74c294","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a5e361b1-a0be-43f6-b7c9-41c439074815","exec":[""],"type":"text/javascript"}}],"_postman_id":"a0a74e2c-60b7-47b9-a5b2-fdf821b7daff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumCount","event":[{"listen":"test","script":{"id":"98b06938-b2d5-4c60-9227-34d990022ba3","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"680cb1e9-d4bf-45f2-83f8-0038435e2898","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=10","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"10"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumSkip","event":[{"listen":"test","script":{"id":"a8fb467a-8e3a-4f27-bfdb-2540bb075ca7","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"17c09253-2657-44a8-9f99-da1e6521206c","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"d4da34ef-3fb2-4714-acdb-6b7cf4ce21ea","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumSkip","event":[{"listen":"test","script":{"id":"c7cade36-1714-4405-b031-265d66490875","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","  //  pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","  //      pm.expect(responseJSONdata.length).to.be();","   // });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a0723628-c1df-4d5e-b69a-8131abba9b3e","exec":["pm.variables.set(\"skip\", 10);"],"type":"text/javascript"}}],"_postman_id":"2d772ff2-67d5-4c7c-8a08-a7acdf2cc5f7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"4826066f-3fc0-4460-8212-38554c95c39c","_postman_isSubFolder":true},{"name":"ApprovedLimits","item":[{"name":"Get_ApprovedLimits","event":[{"listen":"test","script":{"id":"61a85f13-e73e-4a64-b7b5-4b2b9be6c73c","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"f320a5c2-99e8-48d7-91aa-25b4e6bd4af6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumCount","event":[{"listen":"test","script":{"id":"87748b14-e48b-40f7-8327-3b48a5fa8676","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"b9995dfd-b4a3-4181-a44b-e9595445cb72","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumCount","event":[{"listen":"test","script":{"id":"efb68fd2-2bcb-4ee1-a94c-b38c6cfd2f1e","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"696abb62-649f-49a5-b435-cf1901e8b48f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=100","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumSkip","event":[{"listen":"test","script":{"id":"42f9623d-cd61-47cc-b37e-bc5fc1f73401","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"569b7365-4771-4514-95ee-17cbcd30399e","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"a86832ce-d805-4e06-80b7-4724f42c11d6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumSkip","event":[{"listen":"test","script":{"id":"7f0364e0-4f1c-4403-b564-8cb56f313eb6","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"," "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8c661242-7297-4989-bebb-3c0f50bbdf3e","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"287bc7a4-a131-43f3-92ad-0bd7c849821f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"dd4096d2-b03a-4b6e-977a-21c73aa1f760","_postman_isSubFolder":true}],"_postman_id":"64b68d1a-a60b-49aa-8717-4ac96d494f0b","_postman_isSubFolder":true}],"_postman_id":"95797f32-7933-4f0f-8ca4-569006b929f7","_postman_isSubFolder":true}],"_postman_id":"ca9ccf28-dc95-413d-82e7-2ca83aab8a28","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"58317faa-03cb-4e8a-a1de-3644995b0e09","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"8c6c3e9f-58ec-4597-b182-1e708690cbeb","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true}],"_postman_id":"2b00ab4d-edb1-438d-a452-ac25b294fe3e","event":[{"listen":"prerequest","script":{"id":"5264ceac-02bf-4790-8ee0-59e46d5e7194","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"922f5774-2f63-4efb-9632-bc901861938d","type":"text/javascript","exec":["if(pm.response.code == 200)","{","    console.log(\"responseBody\", responseBody);","    if (responseBody != null)","    {","        if (responseBody =='[]' || responseBody == '{}')","        {","             tests[\"Body is empty \" + responseBody]= false;","        }","        else {","          tests[\"Body is not empty\"]= true;","        }","    }","    else","    {","          tests[\"Body is empty\" + responseBody]= false;","    }","}","","pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"]}}]},{"name":"Version","item":[{"name":"Get_Verison","_postman_id":"b2ba93f5-0b7d-4755-8cee-6aeec181e531","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Versions","host":["{{baseURI}}"],"path":["api","Versions"]}},"response":[]}],"_postman_id":"29b17e73-87c6-468f-ae6b-ed4561fbbfd4"},{"name":"POST","item":[{"name":"IP_User","item":[{"name":"Download","_postman_id":"f4542c85-868b-49ae-a5d8-fead177fe22c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"body":{"mode":"formdata","formdata":[],"options":{"formdata":{}}},"url":{"raw":"https://lqx-insurance-qa-fn.azurewebsites.net/api/Download?assetid=0&fileid=1349b9c8-bc68-4de1-9069-dbca7bd44b72&productCode=INS","protocol":"https","host":["lqx-insurance-qa-fn","azurewebsites","net"],"path":["api","Download"],"query":[{"key":"assetid","value":"0"},{"key":"fileid","value":"1349b9c8-bc68-4de1-9069-dbca7bd44b72"},{"key":"productCode","value":"INS"}]}},"response":[]}],"_postman_id":"7ff081b3-9609-4266-b87d-07eb6c3a47e0","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"d057b964-ff2d-4750-9f29-30392213a776","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"1f52cbb8-2fe4-4bb1-915b-2938a689e9fb","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"IC_User","item":[{"name":"Quotes","item":[{"name":"Withdrawn","_postman_id":"78eab248-539f-43c5-816a-a956ea54b642","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": 154\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/withdrawn","host":["{{baseURI}}"],"path":["api","Quotes","withdrawn"]}},"response":[]}],"_postman_id":"b72b2421-f84c-4fb7-95d6-d3a84eb16639","_postman_isSubFolder":true},{"name":"Upload","_postman_id":"d66874ab-817d-4dde-8b7a-01bb119a0029","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[{"key":"","type":"file","src":"/C:/Users/dahakea/Downloads/image.png"},{"key":"","type":"file","value":null},{"key":"","type":"file","value":null}],"options":{"formdata":{}}},"url":{"raw":"https://lqx-insurance-qa-fn.azurewebsites.net/api/Upload?assetid=485&assettype=quote&stateid=2&state=Quote&description=Test2&productcode=INS&assetDetailId=983","protocol":"https","host":["lqx-insurance-qa-fn","azurewebsites","net"],"path":["api","Upload"],"query":[{"key":"assetid","value":"485"},{"key":"assettype","value":"quote"},{"key":"stateid","value":"2"},{"key":"state","value":"Quote"},{"key":"description","value":"Test2"},{"key":"productcode","value":"INS"},{"key":"assetDetailId","value":"983"}]}},"response":[]}],"_postman_id":"6c8489d4-593c-431e-989e-a7b90b8f4832","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"6e3649a8-3195-4b83-b263-4e577c41304a","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"dc521e29-e791-4aa1-bf4c-08f608dd5a0d","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Flow","item":[{"name":"Flow: Pass Quotes","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"b71580f1-37a9-41c2-a58b-0d372af98b68","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"79149eb6-abbf-46be-aef0-aece81d3b19f","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"ce8feb72-8dd8-4a51-a446-3d3bee55ed0f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"7c383f20-1946-40a7-9e32-1b250e58e76d","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"e9939fc9-803e-4013-974a-8ebabb10406a","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"f2497e20-6d26-449b-ad82-5225afb3bcbd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Passed_By_IP","event":[{"listen":"test","script":{"id":"d934d3a2-066c-46e3-89a3-b0baf0634867","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ed0d5430-7515-4717-a755-7e124d24b3b0","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"8c852672-5265-45d3-bf5f-eab0e17c135d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/passedbyip","host":["{{baseURI}}"],"path":["api","Quotes","passedbyip"]}},"response":[]}],"_postman_id":"ce75cd90-8dd3-4a57-b84a-ff12df39c839","event":[{"listen":"prerequest","script":{"id":"13036daf-c5d4-4848-bb44-118b29d1aae6","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"0fae6097-b48f-49b8-89df-cdafe4474904","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Flow: Request Additional Information","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"aa31c118-ee5e-40ff-9be7-9a0b3e3883e5","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"092eda17-0f7a-4f09-8a1a-03260e7a72b5","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"6564f40c-566b-4c80-8df0-eedc1f360d0a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Information Requested","event":[{"listen":"prerequest","script":{"id":"785e0c64-fb4c-4652-8a08-f0f7aa458cdf","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"4eeabfaa-fbb3-4b2e-96a2-6934e9786b5e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"5407911f-379d-447f-829e-5e5e7ebf0733","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Information Provided","event":[{"listen":"test","script":{"id":"3e0bd0dc-6b7b-44a9-b409-e72daad23358","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7d1a6d3c-3d31-41e2-a7ba-1c247e4877b8","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"2c533a40-e406-4aa3-8809-b560ccb45cc8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/passedbyip","host":["{{baseURI}}"],"path":["api","Quotes","passedbyip"]}},"response":[]}],"_postman_id":"e2643e0a-ec03-42c9-bb69-4cc2cbe13e86","event":[{"listen":"prerequest","script":{"id":"7f34ee89-cfe9-4ef9-b580-c6e5ed9b0c63","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"2ed733ba-cb7f-4db2-a76c-788d8d9e9d12","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Flow: Flag As Pending Review","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"0cb09fcd-ea91-4b63-8744-375896ac70f5","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"88818cd2-f9b2-47ca-82cd-a144b2a64450","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"a209a0a9-4eb9-4fe7-b812-7b18d3cb4a4b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": {{brokerId}},\n    \"coBrokerId\": {{coBrokerId}},\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Flag as Pending Review","event":[{"listen":"prerequest","script":{"id":"16a28283-fa66-47b7-ae37-2ec3974cf6c0","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"fdf56d93-f420-4607-990a-6cbbaa97b220","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"d5619857-1274-4f9f-826b-cc2f40773840","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"quoteId\": {{QUOTE}},\n    \"quoteTypeId\": {{quoteTypeId}} ,\n\t\"premiumBasisTypeId\": {{premiumBasisTypeId}},\n\t\"maxCreditLimit\": {{maxCreditLimit}},\n\t\"indemnity\": {{indemnity}},\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\t\"attachmentPeriod\": {{attachmentPeriod}},\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n    \"premiumRateByIc\": {{premiumRateByIc}},\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\n\n    \"isCancellableByIc\": true,\n    \"minPremiumAmount\": 1000,\n    \"minDepositAmount\": null,\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\n    \"icPaper\": \"insurance paper\",\n    \"icQuoteId\": null,\n    \"commissionRate\":{{commission}},\n    \"daysToQuoteExpiration\": 30,\n    \"deductibleByIc\": {{deductibleByIp}},\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\n    \"carrierRatingByAmBestId\": null,\n    \"carrierRatingBySpId\": null,\n    \"carrierRatingByOther\": null,\n    \"havingSubjectivity\": true,\n    \"estimatedPremium\": {{estimatedPremium}},\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n    \"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/pendingreview","host":["{{baseURI}}"],"path":["api","Quotes","pendingreview"]}},"response":[]}],"_postman_id":"d24915cb-4743-4494-bfe7-014e265a3820","_postman_isSubFolder":true},{"name":"Flow: Modify RFQ","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"a96c350c-4ad8-4a27-822f-697fc71dc28a","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"0ce6243f-1ebf-4d2c-ae73-4daf5555f66e","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"1bbbf2f1-b16d-4114-8dd2-7fd7af43d591","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Flag as Pending Review","event":[{"listen":"prerequest","script":{"id":"db3319c5-fbf2-4a32-9790-12eaac2f70c3","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"7b440daf-71e6-4e68-8b8c-483f50f80b4c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"bb635b8d-d2c5-41e2-9c2c-c094ac602406","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"quoteId\": {{QUOTE}},\n    \"quoteTypeId\": {{quoteTypeId}},\n\t\"premiumBasisTypeId\": {{premiumBasisTypeId}},\n\t\"maxCreditLimit\": {{maxCreditLimit}},\n\t\"indemnity\": {{indemnity}},\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\t\"attachmentPeriod\": {{attachmentPeriod}},\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n    \"premiumRateByIc\": {{premiumRateByIc}},\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\n\n    \"isCancellableByIc\": true,\n    \"minPremiumAmount\": 1000,\n    \"minDepositAmount\": null,\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\n    \"icPaper\": \"insurance paper\",\n    \"icQuoteId\": null,\n    \"commissionRate\":{{commission}},\n    \"daysToQuoteExpiration\": 30,\n    \"deductibleByIc\": {{deductibleByIp}},\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\n    \"carrierRatingByAmBestId\": null,\n    \"carrierRatingBySpId\": null,\n    \"carrierRatingByOther\": null,\n    \"havingSubjectivity\": true,\n    \"estimatedPremium\": {{estimatedPremium}},\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n    \"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/pendingreview","host":["{{baseURI}}"],"path":["api","Quotes","pendingreview"]}},"response":[]},{"name":"Modify RFQ","event":[{"listen":"test","script":{"id":"f07c8229-af86-4bcd-9ff0-57183e6aa353","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"77745d10-458c-4c83-8517-b4ff864a7b76","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));","   pm.variables.set(\"deductibleByIc\", _.random(100,100000));"],"type":"text/javascript"}}],"_postman_id":"2653ea77-4221-4729-a38a-e117b1fc636c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\"quoteId\": {{QUOTE}},\n\"premiumBasisTypeId\":{{premiumBasisTypeId}}, \n\"maxCreditLimit\": {{maxCreditLimit}}, \n\"attachmentPeriod\": {{attachmentPeriod}},\n\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n\"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n\"carrierRatingByOther\": null,\n\"commissionRate\": {{commission}},\n\"deductibleByIc\": {{deductibleByIc}},\n\n\"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n\"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}},\n\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\"estimatedPremium\": {{estimatedPremium}},\n\"havingSubjectivity\": true,\n\"icQuoteId\": null,\n\"indemnity\": {{indemnity}},\n\"isCancellableByIc\": true,\n\n\"minDepositAmount\": null,\n\"minPremiumAmount\": null,\n\n\"premiumFundingDeadline\": null,\n\n\n\"quoteTypeId\": 2,\n\"unutilizedRateAnnum\": null,\n\"utilizedRateAnnum\": null,\n\"currencyCode\":\"USD\",\n\"estimatedWeightedPaymentTerm\":1\n\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/modifyrfq","host":["{{baseURI}}"],"path":["api","Quotes","modifyrfq"]}},"response":[]}],"_postman_id":"3742d728-d8b5-4696-a174-02ef0a4ce7b7","_postman_isSubFolder":true},{"name":"Flow: Decline Quote (Last Look)","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"5fd80cc9-18b7-4054-aa64-f4ffc07de55c","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r"," //  pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"ec8545a9-8535-4df2-a191-e0a59f557626","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"061e84ee-1f27-4dd1-b337-66a69f71c57a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"21c4755f-b05c-4f09-8c05-fcad741540ce","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(2,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c94f9e0a-0f37-4e84-9add-3d2dda053539","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"b9ba158f-bba2-469d-a7c6-3314f248d3e6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"223993a7-b930-4901-8650-d51de908f105","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"fa0b1354-33ac-4b9f-9eed-62252e3f069a","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"94dbfd6f-619e-44e9-b84f-3a65dc4cf91f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]},{"name":"Decline_Quotes","event":[{"listen":"prerequest","script":{"id":"ef4659e0-17b8-492c-942a-c5a3c6e342a7","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"d04d6c7d-17df-4838-ade1-62a8651f7282","exec":[" pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"fccd75da-9cd5-4073-9f1f-fadf427e593a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteDeclineTypeId\": 1,\r\n  \"decliningReason\": \"Sector Risk\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/decline","host":["{{baseURI}}"],"path":["api","Quotes","decline"]}},"response":[]}],"_postman_id":"5e11cbed-293f-4bca-b6a4-05f067c90e44","_postman_isSubFolder":true},{"name":"Flow: Withdraw Quote","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"67044135-5b65-427b-bf03-3947a3c4d869","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"78fca07e-cdf6-4ac9-8423-c33315b783a5","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"66f72623-a6e9-4d2e-b5a4-f128ab1700b8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"3440e832-1501-4d09-ad4d-a9d402a29109","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(2,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8b869977-b1ba-4143-aa45-7ab118734b06","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"4ce30f3e-bf4d-42be-8053-f142d2a80afb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"dcfa48de-ecb5-4dbe-bcec-1eb596ec3766","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"249b3548-6b63-44a7-bea5-6119a60e3614","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"665a883d-2f5c-4086-89f4-648dc572fb11","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n  }\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]},{"name":"Withdrawn","event":[{"listen":"test","script":{"id":"2770cfa3-d980-4d75-9b53-1b48ac82613c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"120ba1c7-472b-4876-accf-4579f7de6c7f","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"8da0c617-97c0-40ac-9fc2-57e2a1ee0237","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/withdrawn","host":["{{baseURI}}"],"path":["api","Quotes","withdrawn"]}},"response":[]}],"_postman_id":"10a9d47a-2bcd-4afe-90d7-340168df0e83","_postman_isSubFolder":true},{"name":"Flow: Accepted By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"6c9c5fd9-06f5-4300-870f-3fef87a75176","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"538a60c3-c365-4bc2-819a-b1d782c01fb4","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"b1ed28e5-185c-4f31-88d4-b74085579d0a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"eb4d91cf-d03d-465e-8c21-f24ae35837be","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"42c1d68e-19d3-48ba-b306-a1a85250ec5e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"6f8fd2b1-4a6e-4d12-b9e5-726796e5f9a0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"f0be0008-db16-4466-9560-855a5edeacd5","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8bfe5dff-4610-422f-8195-d43706dec8ca","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"3f78637c-68a7-493b-9cab-2d99ae6b0dec","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]}],"_postman_id":"3f023356-3647-4d5f-8e23-185b40150e25","_postman_isSubFolder":true},{"name":"Flow: Accepted By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"6e95c738-63d7-46a3-8370-f318fbe55825","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"af1a610d-05ac-4fb6-ae6c-0643a5f8b2f2","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.environment.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"37b36fe3-4111-41a8-96a2-aaedc82aec7b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"94b8215f-9920-4bcd-9412-71fa72775df1","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.environment.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(2,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"e5296a72-631b-408d-8691-efd3e2562eb4","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"1867f179-7dab-4ce0-b286-83d369240110","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"4853572b-4f4c-4172-98e3-65224f2cf21a","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b97e2f76-1ee5-421a-9c53-8db1adec5502","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"2b076205-3e94-4d5b-b78b-b34d2e3d5317","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"2f9e11a6-0759-47a0-9118-229200dae454","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"28fbc949-9671-4d81-9e87-608b5158588e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"b410f471-c6e0-4ec9-8169-a79f98e0fbbe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","quoteacceptedbyic"]}},"response":[]}],"_postman_id":"c1511ecf-e038-4a27-83d9-5dc64689195b","_postman_isSubFolder":true},{"name":"Flow:End Transaction","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"154abedf-2d64-4082-9af5-51bf5bbb41cd","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"ffddc2e4-4a9a-4a08-9f39-6971d9c6ff49","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"a6774e33-61be-45cf-9e40-746002f70f87","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"End Transaction","event":[{"listen":"test","script":{"id":"158403df-852d-493d-b8d9-20430f9a8c22","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"fe93bde4-777f-489e-841a-de2fbb88c346","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","    var url = pm.variables.get(\"baseURI\");","    url = url.concat(\"/api/quotes?screenname=pendingquotes\");","    ","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","          }","    }, function (err, res) {","        var responseJSONdata = res.json();","       ","        if (res !== '') {","            for (var i = 0; i < responseJSONdata.length; i++) {","                 if (responseJSONdata[i].transId === pm.environment.get('TRANSID')){","                    let quote =  responseJSONdata[i].quoteId;","                     pm.environment.set(\"QUOTE\", quote);","                     console.log(quote);","                     break;","                 }","            }","        }","    });",""],"type":"text/javascript"}}],"_postman_id":"06fad2ff-9510-4579-a4e3-cd61398dba9e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"transactionId\": {{TRANSID}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/endtransaction","host":["{{baseURI}}"],"path":["api","Quotes","endtransaction"]}},"response":[]}],"_postman_id":"b20829aa-a0e1-4e6f-8e61-a3a6d57b43de","_postman_isSubFolder":true},{"name":"Flow: Ammend Request By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"92a1e543-c094-49aa-a08c-c6b432dcbb07","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"cd38f0af-8237-4bad-a20d-2dd0587eedd5","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"9336dd76-43bc-465f-868c-ac552e642dea","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"3dae918b-f4ac-4e00-a055-5d9a517a42cb","exec":["setTimeout(function() {}, pm.variables.get(\"stateChangeDelay\"));\r","\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","function round(value, decimals) {\r","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r","}\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")\r","    }\r","}, function(err, res) {\r","    var responseJSONdata = res.json();\r","\r","    if (res !== '') {\r","        for (var i = 0; i < responseJSONdata.length; i++) {\r","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {\r","                let quote = responseJSONdata[i].quoteId;\r","                pm.variables.set(\"QUOTE\", quote);\r","                console.log(quote);\r","\r","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);\r","                pm.variables.set(\"quoteTypeId\", _.random(2, 2));\r","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);\r","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);\r","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);\r","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);\r","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);\r","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);\r","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);\r","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);\r","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);\r","\r","                let utilizedRatePA = pm.variables.get(\"utilizedRatePA\") // 2.5;\r","\r","                let unUtilizedRatePA = pm.variables.get(\"unUtilizedRatePA\"); //3.5;\r","                let commission = pm.variables.get(\"commission\"); // 17.5;\r","\r","\r","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod); //\t485\r","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;\r","                let ratePA = responseJSONdata[i].premiumRateByIp;\r","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;\r","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;\r","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;\r","\r","                if (premiumBasis === 1) //Gross Limit\r","                {\r","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A\r","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;\r","                    estimatedPremium = round(premium, 2);\r","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"\r","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);\r","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)\r","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);\r","                }\r","\r","                if (premiumBasis === 2) //Net Limit\r","                {\r","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360\r","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;\r","                    estimatedPremium = round(premium, 2);\r","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"\r","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);\r","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)\r","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);\r","                }\r","\r","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) { //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"\r","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)\r","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);\r","                    estimatedPremium = round(premium, 2);\r","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t\r","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                }\r","\r","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"\r","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)\r","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);\r","                    estimatedPremium = round(premium, 2);\r","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t\r","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                }\r","\r","                pm.variables.set(\"estimatedPremium\", estimatedPremium);\r","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);\r","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);\r","                console.log(\"commission - \", commission);\r","                console.log(\"utilizedRatePA - \", utilizedRatePA);\r","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);\r","                console.log(\"estimatedPremium - \", estimatedPremium);\r","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);\r","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);\r","\r","                let moment = require('moment');\r","                let fundingDate = moment().add(10, 'days');\r","                console.log(\"Funding Date\", fundingDate);\r","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);\r","                break;\r","\r","\r","            }\r","        }\r","\r","    }\r","\r","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"ac0fb74d-9417-41fc-82d5-e810801f2040","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"1607e6b8-0351-4ffe-8c72-107cfad8e0ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"b9328ff8-b64e-4c4c-9c94-745bec3829b1","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"6797da60-4c3a-4502-8a3a-4bf6f64ae2cd","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"3cd4b71f-82b5-4f9b-916e-83d9dd110a09","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"9b021819-f0f6-4d0e-83be-318ed1576ad4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"eca14b38-3e79-4641-8917-7f9843984626","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"5b0076ae-192e-4001-a6ae-30106466aba0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IP","event":[{"listen":"prerequest","script":{"id":"7dc413a6-12aa-4783-b6c5-ac7e7a0682f7","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"quoteTypeId\",_.random(1,2));","    pm.variables.set(\"premiumRateByIc\",_.random(200,4000));    ","    pm.variables.set(\"minPremiumAmount\",_.random(1000,5000));       ","    pm.variables.set(\"minDepositAmount\",_.random(1000,5000));        ","    pm.variables.set(\"daysToQuoteExpiration\",_.random(1,30));       ","    pm.variables.set(\"deductableByIc\",_.random(500,1000));        ","    pm.variables.set(\"estimatedPremium\",_.random(1000,30000));","","   ","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"1cceae6f-589a-48eb-bdd4-25832e3f14da","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"c1a9ed4a-aa7a-4b1f-93b4-e3759ca10379","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"maxCreditLimit\": {{maxCreditLimit}},\r\n  \"premiumRateByIc\": {{premiumRateByIc}},\r\n  \"utilizedRateAnnum\": 0,\r\n  \"unutilizedRateAnnum\": 0,\r\n  \"isCancellableByIc\": {{isCancellable}},\r\n  \"minPremiumAmount\": {{minPremiumAmount}},\r\n  \"minDepositAmount\": {{minDepositAmount}},\r\n  \"premiumFundingDeadline\": \"2019-11-12T23:14:44.099Z\",\r\n  \"icPaper\": \"IcPaper\",\r\n  \"icQuoteId\": \"IcQuoteId\",\r\n  \"commissionRate\": 2.45,\r\n  \"daysToQuoteExpiration\": {{daysToQuoteExpiration}},\r\n  \"estimatedMaxPaymentTerm\":{{estimatedMaxPaymentTerm}},\r\n  \"deductableByIc\": {{deductableByIc}},\r\n  \"decuctablePercentageByIc\": 3,\r\n  \"currencyCode\":\"USD\",\r\n  \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\r\n  \"carrierRatingByAmBestId\": 25,\r\n  \"carrierRatingBySpId\": 7,\r\n  \"carrierRatingByOther\": \"carrierRatingByOther\",\r\n  \"havingSubjectivity\": true,\r\n  \"subjectivity\": \"reason subjectivity\",\r\n  \"estimatedPremium\": {{estimatedPremium}},\r\n  \"estimatedBrokerCommission\": 1332.13,\r\n  \"estimatedCoBrokerCommission\": 1332.13,\r\n  \"attachmentPeriod\":1,\r\n  \"premiumBasisTypeId\":1,\r\n  \"attachmentPeriodTypeId\":3,\r\n  \"attachmentPeriodStartDate\":\"2019-11-12\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/amendmentrequestbyip","host":["{{baseURI}}"],"path":["api","Quotes","amendmentrequestbyip"]}},"response":[]}],"_postman_id":"2ead2332-261f-456f-a590-0e7ae2b18a66","_postman_isSubFolder":true},{"name":"Flow: Ammend Request By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"bfbb6ff3-acbd-4e77-aa05-db1a993b20b3","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"f1709896-3511-4b5a-9861-b29b5e14976c","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"63d26f9d-a357-4ae1-aa44-cf274cf4379b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"16ec35af-5909-487d-9e9d-770f25e86e8d","exec":["setTimeout(function() {}, pm.variables.get(\"stateChangeDelay\"));\r","\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","function round(value, decimals) {\r","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r","}\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")\r","    }\r","}, function(err, res) {\r","    var responseJSONdata = res.json();\r","\r","    if (res !== '') {\r","        for (var i = 0; i < responseJSONdata.length; i++) {\r","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {\r","                let quote = responseJSONdata[i].quoteId;\r","                pm.variables.set(\"QUOTE\", quote);\r","                console.log(quote);\r","\r","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);\r","                pm.variables.set(\"quoteTypeId\", _.random(2, 2));\r","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);\r","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);\r","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);\r","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);\r","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);\r","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);\r","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);\r","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);\r","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);\r","\r","                let utilizedRatePA = pm.variables.get(\"utilizedRatePA\") // 2.5;\r","\r","                let unUtilizedRatePA = pm.variables.get(\"unUtilizedRatePA\"); //3.5;\r","                let commission = pm.variables.get(\"commission\"); // 17.5;\r","\r","\r","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod); //\t485\r","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;\r","                let ratePA = responseJSONdata[i].premiumRateByIp;\r","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;\r","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;\r","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;\r","\r","                if (premiumBasis === 1) //Gross Limit\r","                {\r","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A\r","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;\r","                    estimatedPremium = round(premium, 2);\r","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"\r","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);\r","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)\r","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);\r","                }\r","\r","                if (premiumBasis === 2) //Net Limit\r","                {\r","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360\r","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;\r","                    estimatedPremium = round(premium, 2);\r","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"\r","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);\r","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)\r","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);\r","                }\r","\r","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) { //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"\r","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)\r","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);\r","                    estimatedPremium = round(premium, 2);\r","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t\r","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                }\r","\r","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"\r","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)\r","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);\r","                    estimatedPremium = round(premium, 2);\r","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t\r","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                }\r","\r","                pm.variables.set(\"estimatedPremium\", estimatedPremium);\r","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);\r","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);\r","                console.log(\"commission - \", commission);\r","                console.log(\"utilizedRatePA - \", utilizedRatePA);\r","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);\r","                console.log(\"estimatedPremium - \", estimatedPremium);\r","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);\r","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);\r","\r","                let moment = require('moment');\r","                let fundingDate = moment().add(10, 'days');\r","                console.log(\"Funding Date\", fundingDate);\r","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);\r","                break;\r","\r","\r","            }\r","        }\r","\r","    }\r","\r","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"c50e697b-edda-45dd-8877-254d2473bff9","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"22d21840-c175-4d15-a6fc-29e28bc834de","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"50337a97-ac3b-4df7-b504-4b9044ea6a6f","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"9b6426c2-3cf5-427b-96c2-fec0bd239460","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"e915cef7-de11-414e-b870-5cff5b9ac729","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"6cc3ad83-0c34-4a34-8e2c-90074ecf368e","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"d6bffdfd-5f3d-40e3-8095-29f12468abd3","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"3b48fcc6-3751-434a-be23-7bff00ceb5d8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IP","event":[{"listen":"prerequest","script":{"id":"3c857b7f-9408-4e93-8dd8-c4fab88d45fb","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"quoteTypeId\",_.random(1,2));","    pm.variables.set(\"premiumRateByIc\",_.random(200,4000));    ","    pm.variables.set(\"minPremiumAmount\",_.random(1000,5000));       ","    pm.variables.set(\"minDepositAmount\",_.random(1000,5000));        ","    pm.variables.set(\"daysToQuoteExpiration\",_.random(1,30));       ","    pm.variables.set(\"deductableByIc\",_.random(500,1000));        ","    pm.variables.set(\"estimatedPremium\",_.random(1000,30000));","","   ","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"39a23fe2-4a27-4992-9671-61e98b29e739","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"4ae6110b-9f1b-4144-8d8b-12f1b76e1fe7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"maxCreditLimit\": {{maxCreditLimit}},\r\n  \"premiumRateByIc\": {{premiumRateByIc}},\r\n  \"utilizedRateAnnum\": 0,\r\n  \"unutilizedRateAnnum\": 0,\r\n  \"isCancellableByIc\": {{isCancellable}},\r\n  \"minPremiumAmount\": {{minPremiumAmount}},\r\n  \"minDepositAmount\": {{minDepositAmount}},\r\n  \"premiumFundingDeadline\": \"2019-11-12T23:14:44.099Z\",\r\n  \"icPaper\": \"IcPaper\",\r\n  \"icQuoteId\": \"IcQuoteId\",\r\n  \"commissionRate\": 2.45,\r\n  \"daysToQuoteExpiration\": {{daysToQuoteExpiration}},\r\n  \"estimatedMaxPaymentTerm\":{{estimatedMaxPaymentTerm}},\r\n  \"deductableByIc\": {{deductableByIc}},\r\n  \"decuctablePercentageByIc\": 3,\r\n  \"currencyCode\":\"USD\",\r\n  \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\r\n  \"carrierRatingByAmBestId\": 25,\r\n  \"carrierRatingBySpId\": 7,\r\n  \"carrierRatingByOther\": \"carrierRatingByOther\",\r\n  \"havingSubjectivity\": true,\r\n  \"subjectivity\": \"reason subjectivity\",\r\n  \"estimatedPremium\": {{estimatedPremium}},\r\n  \"estimatedBrokerCommission\": 1332.13,\r\n  \"estimatedCoBrokerCommission\": 1332.13,\r\n  \"attachmentPeriod\":1,\r\n  \"premiumBasisTypeId\":1,\r\n  \"attachmentPeriodTypeId\":3,\r\n  \"attachmentPeriodStartDate\":\"2019-11-12\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/amendmentrequestbyip","host":["{{baseURI}}"],"path":["api","Quotes","amendmentrequestbyip"]}},"response":[]}],"_postman_id":"62e07054-6cee-41f9-b3cd-9ef2d15016c8","_postman_isSubFolder":true},{"name":"Flow: Coverage Cancel By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"7e3544ea-d867-4008-8541-556401c98b5a","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"4c924767-3077-4c23-9558-0bc1eae5ac30","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"f1aaf098-cb46-4980-8ad6-2d910f6baeb4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"e259d6d0-9b78-45fb-8ccc-93fe41b43338","exec":["setTimeout(function() {}, pm.variables.get(\"stateChangeDelay\"));\r","\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","function round(value, decimals) {\r","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r","}\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")\r","    }\r","}, function(err, res) {\r","    var responseJSONdata = res.json();\r","\r","    if (res !== '') {\r","        for (var i = 0; i < responseJSONdata.length; i++) {\r","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {\r","                let quote = responseJSONdata[i].quoteId;\r","                pm.variables.set(\"QUOTE\", quote);\r","                console.log(quote);\r","\r","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);\r","                pm.variables.set(\"quoteTypeId\", 2);\r","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);\r","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);\r","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);\r","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);\r","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);\r","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);\r","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);\r","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);\r","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);\r","\r","                let utilizedRatePA = pm.variables.get(\"utilizedRatePA\") // 2.5;\r","                let unUtilizedRatePA = pm.variables.get(\"unUtilizedRatePA\"); //3.5;\r","                let commission = pm.variables.get(\"commission\"); // 17.5;\r","\r","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod); //\t485\r","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;\r","                let ratePA = responseJSONdata[i].premiumRateByIp;\r","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;\r","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;\r","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;\r","\r","                if (premiumBasis === 1) //Gross Limit\r","                {\r","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A\r","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;\r","                    estimatedPremium = round(premium, 2);\r","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"\r","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);\r","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)\r","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);\r","                }\r","\r","                if (premiumBasis === 2) //Net Limit\r","                {\r","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360\r","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;\r","                    estimatedPremium = round(premium, 2);\r","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"\r","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);\r","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)\r","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);\r","                }\r","\r","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) { //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"\r","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)\r","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);\r","                    estimatedPremium = round(premium, 2);\r","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t\r","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                }\r","\r","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"\r","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)\r","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);\r","                    estimatedPremium = round(premium, 2);\r","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t\r","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);\r","                }\r","\r","                pm.variables.set(\"estimatedPremium\", estimatedPremium);\r","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);\r","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);\r","                console.log(\"inflow 2 commission - \", commission);\r","                console.log(\"utilizedRatePA - \", utilizedRatePA);\r","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);\r","                console.log(\"estimatedPremium - \", estimatedPremium);\r","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);\r","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);\r","\r","                let moment = require('moment');\r","                let fundingDate = moment().add(10, 'days');\r","                console.log(\"Funding Date\", fundingDate);\r","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);\r","                break;\r","\r","\r","            }\r","        }\r","\r","    }\r","\r","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"21d5af69-40d5-45e5-aeb4-7ece3eaffdd1","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"74b57539-ad7f-417c-a351-6d55f2860630","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"93c4f964-48bd-4f93-b09c-4affe3307057","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"863c9eaf-a25c-41cd-9f46-3eb7c4418e96","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"37ad33d3-602b-4435-b3b6-816effbf1e55","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"774f5ce1-6512-4c24-b260-2ebc81a229f4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"dd793ac9-290b-4784-9c83-dae6a47b707a","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"6d029b97-89dc-4435-9970-b95c67b6a82b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","quoteacceptedbyic"]}},"response":[]},{"name":"Coverage Cancel By IP","event":[{"listen":"prerequest","script":{"id":"da921f7f-d598-439a-8d35-e4ac98450bb3","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"f2638d6b-078f-45df-a667-8da47550bdbc","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"c0e36652-92a8-465a-bab2-f2cddad213c3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}}\r\n }","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/coveragecancelledbyip","host":["{{baseURI}}"],"path":["api","Quotes","coveragecancelledbyip"]}},"response":[]}],"_postman_id":"18f8ec12-2c7b-4a20-a7a2-5d193b4cf3df","_postman_isSubFolder":true},{"name":"Flow: Coverage Cancel By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"5fd0c746-1f40-48a4-b84e-59697d063090","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"401391b1-c725-409f-930f-2e08c34feb1f","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"75c7e201-5935-4a1f-88bd-152995a07522","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{carrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"maxCreditLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": 1,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null,\n    \"supplementalFileIds\": [],\n    \"seller\": null\n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/requestforquote","host":["{{baseURI}}"],"path":["api","Quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"a62f9508-9000-4d9f-ab8b-8678203a20d1","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                  // pm.variables.set(\"quoteTypeId\", 2);","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"ac7c0f1a-552c-462d-9ba5-4c2bc85a5a47","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"57b39508-6e2a-48ce-b81d-224dc548346d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n  \"quoteId\": {{QUOTE}},\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"maxCreditLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"28c679dd-73f3-4dbf-a4e6-6391f6212379","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"d054ce4f-714b-46ce-a54f-13751f00a67c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"ec2ac961-967e-49b8-a2b8-c4cbba27a34f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteaccepted","host":["{{baseURI}}"],"path":["api","Quotes","quoteaccepted"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"8a394d59-2113-4e7a-b8a4-84289d280cf2","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"8e760dfc-ecee-48b9-97b4-6f63dab12fa8","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"599facca-ef4c-424e-8aa6-2e5a8ebf9e0a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"quoteId\": {{QUOTE}}\n}\n","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","quoteacceptedbyic"]}},"response":[]},{"name":"Coverage Cancel By IC","event":[{"listen":"prerequest","script":{"id":"73d989f6-1794-481a-8425-a03510511ea6","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","     pm.variables.set(\"cancellableActionTypeId\", _.random(1,6));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"ec4f6dcf-4214-4d56-b321-892cf00fc684","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"b8c75359-3372-41f9-bab0-9983226e5ae7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": {{QUOTE}},\r\n  \"cancellableActionTypeId\": {{cancellableActionTypeId}},\r\n  \"reasonOfCancellableAction\": \"string\"\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/coveragecancelledbyip","host":["{{baseURI}}"],"path":["api","Quotes","coveragecancelledbyip"]}},"response":[]}],"_postman_id":"037f66d4-00ff-4bfb-b6ad-db74a6de41aa","_postman_isSubFolder":true}],"_postman_id":"97b670a1-8869-4a7a-8023-e540d4e76564","event":[{"listen":"prerequest","script":{"id":"f9ce49cf-bfec-40ba-8dfc-5aa54374d82a","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"a7bc32a7-3d46-43b8-a561-048ab147dec8","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"ADMIN_user","item":[{"name":"Post Save Policy As Draft","_postman_id":"8077841d-9478-4d08-8d86-6eb064307f10","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"insuredPartyId\": 1453,\n    \"insuranceCarrierId\": 1009,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"policyId\": null,\n    \"name\": \"API TEST\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": \"2020-4-29T00:00:00.000Z\",\n    \"expiryDate\": null,\n    \"lossPayee\": \"\",\n    \"additionalNamedInsured\": \"\",\n    \"documentFileIds\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/saveasdraft","host":["{{baseURI}}"],"path":["api","Policies","saveasdraft"]}},"response":[]},{"name":"Post Save Policy As Incomplete","_postman_id":"e6262392-49f8-4cbf-abfa-27ab1997edac","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"insuredPartyId\": 1453,\n    \"insuranceCarrierId\": 1009,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"policyId\": null,\n    \"name\": \"API TEST\",\n    \"carrierPolicyNumber\": \"\",\n    \n    \"expiryDate\": null,\n    \"lossPayee\": \"\",\n    \"additionalNamedInsured\": \"\",\n    \"documentFileIds\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/saveasincomplete","host":["{{baseURI}}"],"path":["api","Policies","saveasincomplete"]}},"response":[]},{"name":"Get_Policy","event":[{"listen":"test","script":{"id":"5fa80e52-c76a-4ede-ace6-6d7b8a21cc26","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredParty).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"44fbf84d-b525-449a-9f8d-c7531c9f0505","exec":[""],"type":"text/javascript"}}],"_postman_id":"e20dbf0c-03c3-4398-83b6-1c985180f083","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies?count=100","host":["{{baseURI}}"],"path":["api","Policies"],"query":[{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_Policy By ID","event":[{"listen":"prerequest","script":{"id":"1c483569-63cc-4abe-b3a1-8a2c3574d2cc","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","  var jsonData = res.json();\r","  console.log(jsonData.length);\r","\r","  //var i=Math.floor((Math.random() * jsonData.length) + 1);\r","\r","  //pm.variables.set(\"policyId\",jsonData[i].id );\r","  pm.variables.set(\"policyId\", _.random(181,189));\r","}\r",");"],"type":"text/javascript"}},{"listen":"test","script":{"id":"d922d834-b3a5-49f8-8e23-8965d799bd2c","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}}],"_postman_id":"93d64560-af58-4385-999d-cb163af41983","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}"]}},"response":[]},{"name":"Get_Policy By ID PolicyDocuments","event":[{"listen":"test","script":{"id":"d1a1e7e6-13e3-43d8-a7d2-cfa8ecc57a4b","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"029b2b62-e4f4-40d3-a6a7-b672850965e8","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","\r","   \r"," var jsonData = res.json();\r"," console.log(jsonData.length);\r"," \r","        //var i=Math.floor((Math.random() * jsonData.length) + 1);\r","           \r","         //pm.variables.set(\"policyId\",jsonData[i].id );\r","         pm.variables.set(\"policyId\",_.random(58,60));\r","}\r",");"],"type":"text/javascript"}}],"_postman_id":"853439b6-78e6-4045-85dc-96b01245212a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}/policydocuments","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}","policydocuments"]}},"response":[]}],"_postman_id":"da395759-3418-40ea-afe7-50908ff78da1","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"_postman_isSubFolder":true}],"_postman_id":"d6b99ebc-d677-47f1-a8d1-f94d6e851581","event":[{"listen":"prerequest","script":{"id":"c025caf4-89b0-4e68-8499-21d025ff55be","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"a5d24817-6075-4611-812d-18e69d42bc5f","type":"text/javascript","exec":[""]}}]}],"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"ba86cde8-2f53-49b9-91a6-41467f7279b7","type":"text/javascript","exec":["//IP_User access token","let userIP = pm.environment.get(\"User_IP\");","let userIC = pm.environment.get(\"User_IC\");","let userADMIN = pm.environment.get(\"User_ADMIN\");","","","","let jwt = pm.environment.get('accessTokenIP');","let jwt_decode=null;","if (jwt.length > 0) {"," let jwt_payload_base64 = jwt.split('.')[1];"," jwt_decode = JSON.parse(atob(jwt_payload_base64));","}","if ((jwt.length === 0) || (Date.now()/1000 >= jwt_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIP },","             { key: 'password', value: 'Liquidx123' },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIP', accessToken);"," });","}","","let jwt1 = pm.environment.get('accessTokenIC');","let jwt1_decode=null;","if (jwt1.length > 0) {","  let jwt1_payload_base64 = jwt1.split('.')[1];","  jwt1_decode = JSON.parse(atob(jwt1_payload_base64));","}","","if ((jwt1.length === 0) || (Date.now()/1000 >= jwt1_decode['exp'])) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userIC },","              { key: 'password', value: 'Liquidx123' },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenIC', accessToken);","  });","}","","","","","let jwt2 = pm.environment.get('accessTokenADMIN');","let jwt2_decode=null;","if (jwt2.length > 0) {","  let jwt2_payload_base64 = jwt2.split('.')[1];","  jwt2_decode = JSON.parse(atob(jwt2_payload_base64));","}","","if ((jwt2.length === 0) || (Date.now()/1000 >= jwt2_decode['exp']) || !jwt2) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userADMIN },","              { key: 'password', value: 'Liquidx123' },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenADMIN', accessToken);","  });","}"]}},{"listen":"test","script":{"id":"2942be77-c4ca-43ea-8199-5b70f33a12fa","type":"text/javascript","exec":[""]}}],"variable":[{"id":"e26e7fbd-1ced-4c44-9554-d0e5a904b860","key":"id","value":"8","type":"string"},{"id":"0eb7d456-9e88-4143-87ba-bd3a23d01355","key":"duns","value":"000000001","type":"string"},{"id":"0512c085-5472-4954-b2ba-f302e81286cb","key":"QuoteId","value":"","type":"string"},{"id":"31a44157-c4af-4788-9ade-66023e1471fa","key":"transId","value":"","type":"string"},{"id":"8fdde6d9-2d22-4d42-ad18-32b80654727b","key":"tId","value":"","type":"string"}]}}