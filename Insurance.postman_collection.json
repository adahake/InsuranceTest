{"collection":{"info":{"_postman_id":"97ee5752-904e-4149-8d24-7e987be15031","name":"Insurance","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"GET","item":[{"name":"IP_User","item":[{"name":"DnB","item":[{"name":"Get_ByDUNS","event":[{"listen":"prerequest","script":{"id":"8fb9c8d2-f57e-4868-9222-67e5b6ee19c4","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var jsonData = res.json();\r","    //  console.log(\"duns:\"+jsonData[0].duns);\r","    pm.variables.set(\"duns\",jsonData[0].duns);\r","    pm.variables.set(\"Debtor\",jsonData[0]);\r","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"9527c568-3371-41fb-b17a-d82046940674","exec":["\r","pm.variables.get(\"Debtor\")\r","pm.test(\"To check /api/{id} returns DUNS\", function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(pm.variables.get(\"Debtor\")).to.eql(jsonData.results[0]);\r","    //pm.expect(jsonData.duns).to.eql(expectedDUNS);\r","}); \r",""],"type":"text/javascript"}}],"_postman_id":"94222934-6b97-428a-aecc-44021f983619","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/DnB?duns={{duns}}","host":["{{baseURI}}"],"path":["api","DnB"],"query":[{"key":"maxResultCount","value":"25","disabled":true},{"key":"country","value":"United State of America","disabled":true},{"key":"name","value":"Test Account Debtor 8","disabled":true},{"key":"duns","value":"{{duns}}"}]}},"response":[]},{"name":"Get_MaxResultCount","event":[{"listen":"test","script":{"id":"3f49e337-8076-45c5-9130-695bc2850c4c","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","pm.test(\"To check Debtor details is not null (sicCode,addressLine1,city,stateProvince,postalCode,countryCode,country,id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].addressLine1).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].city).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateProvince).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].postalCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].isActive).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","var responseJSONdata = JSON.parse(responseBody);\r","if(pm.response.code == 200 & responseBody !== '')\r","pm.test(\"Verify Max Result Count for dnb should be equal or below \" + pm.variables.get(\"maxResultCount\"), function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(jsonData.results.length).to.be.below(11);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"850940b9-63a7-42d3-8ef5-761eefbf650a","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/Debtors\");","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","      ","}, function (err, res) {","    ","    var jsonData = res.json();","    //  console.log(\"duns:\"+jsonData[0].duns);","    pm.variables.set(\"name\",jsonData[0].name);","    pm.variables.set(\"Debtor\",jsonData[0]);","    pm.variables.set(\"country\",jsonData[0].countryCode);","    pm.variables.set(\"Debtor\",jsonData[0]);","    pm.variables.set(\"maxResultCount\",5);","});","","","//pm.variables.set(\"name\", \"Test Account Debtor 8\");","//pm.variables.set(\"country\", \"US\");",""],"type":"text/javascript"}}],"_postman_id":"713d4bd4-50e1-4314-9e27-07673600ca4d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/dnb?name={{name}}&country={{country}}&maxResultCount={{maxResultCount}}","host":["{{baseURI}}"],"path":["api","dnb"],"query":[{"key":"name","value":"{{name}}"},{"key":"country","value":"{{country}}"},{"key":"maxResultCount","value":"{{maxResultCount}}"}]}},"response":[]}],"_postman_id":"f2a4253c-d723-40cb-9e41-f0e403c89b22","_postman_isSubFolder":true},{"name":"Broker","item":[{"name":"Get_Broker","event":[{"listen":"prerequest","script":{"id":"982b172c-eef7-47de-a075-d53924234ee8","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8a47057e-da5e-459b-945e-378583f6aca0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","}); \r","\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"e1daba99-7ffb-498b-8697-5edf28513628","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers","host":["{{baseURI}}"],"path":["api","Brokers"]}},"response":[]},{"name":"Get_CoBroker","event":[{"listen":"prerequest","script":{"id":"914d321c-bd14-4002-8994-67f5ef376fe3","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3ddd252a-ffb4-4515-a468-6fd8533ac48d","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","}); \r","\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"4cbbe9bd-d986-40ef-a83a-510955a11167","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/cobrokers","host":["{{baseURI}}"],"path":["api","cobrokers"]}},"response":[]},{"name":"Get_Broker Count=100","event":[{"listen":"test","script":{"id":"1f03f084-58f8-4a84-9065-9efa70b9a37c","exec":["var responseJSONdata = JSON.parse(responseBody);","","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}}],"_postman_id":"b4fed579-c103-46d5-90a3-081f49aafe85","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?count=0","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"0"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Broker/MinimumSkip","event":[{"listen":"test","script":{"id":"b1f314fc-973a-4c97-9696-01b3303ca5a1","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"57a03435-47ba-49f2-b657-f94e06abd9e7","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"d8e77fd4-f38c-4f68-95cd-ee87417e0d59","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Broker/MaximumSkip","event":[{"listen":"test","script":{"id":"7a379e4d-660f-45f6-a6b5-a304c9273e3c","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(105);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"52259705-80b4-4094-9f54-582fa921568b","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"8e5fe0b0-e0e4-4026-b642-4d5fc45548f1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Post_UpdatesBroker","event":[{"listen":"prerequest","script":{"id":"32a6d01c-0f91-4829-b575-c6b072e8f1d6","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"50b25466-e553-4511-9add-6ea76af74423","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","}); \r","\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}}],"_postman_id":"2899547e-013a-4c2d-b398-d7c37be9aaf1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"url":{"raw":"{{baseURI}}/api/updateascoBroker?brokerID=1015","host":["{{baseURI}}"],"path":["api","updateascoBroker"],"query":[{"key":"brokerID","value":"1015"}]}},"response":[]}],"_postman_id":"a06b15c8-ab09-4276-9eef-77de0e6a17d8","_postman_isSubFolder":true},{"name":"Policy","item":[{"name":"Get_Policy Attachments Types","event":[{"listen":"test","script":{"id":"066bdd42-32d7-4218-ae53-059e6943814e","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Date Financier Purchases Asset' || ","            responseJSONdata[i].name == 'Delivery Date' ||","            responseJSONdata[i].name == 'Invoice Date' ||","            responseJSONdata[i].name == 'Not Applicable' ||","            responseJSONdata[i].name == 'Shipment Date' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4db5e814-02ec-49d7-9f7b-ad532ff65ba5","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"35a67157-30bb-4d06-862e-14dc0e1288a0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policyattachmenttypes","host":["{{baseURI}}"],"path":["api","policyattachmenttypes"]}},"response":[]},{"name":"Get_Policy Attachments Types Copy","event":[{"listen":"test","script":{"id":"a297df67-6208-4765-a5a7-ec4605c9df8e","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Date Financier Purchases Asset' || ","            responseJSONdata[i].name == 'Delivery Date' ||","            responseJSONdata[i].name == 'Invoice Date' ||","            responseJSONdata[i].name == 'Not Applicable' ||","            responseJSONdata[i].name == 'Shipment Date' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"859b2373-a318-46a7-be17-5c35c5d54522","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"2b9d3a6a-1644-41db-b284-dd2bb6dba179","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policyattachmenttypes","host":["{{baseURI}}"],"path":["api","policyattachmenttypes"]}},"response":[]},{"name":"Get_Policy Deductible Types","event":[{"listen":"test","script":{"id":"fa81c470-fdd5-4449-8711-29fee4022f45","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Yes - % of aggregate losses' || ","            responseJSONdata[i].name == 'Yes - % of each and every loss' ||","            responseJSONdata[i].name == 'Yes - Amount of aggregate losses' || ","            responseJSONdata[i].name == 'Yes - Amount of each and every loss' ||","            responseJSONdata[i].name == 'No'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4a404ecb-55bb-4689-b92e-4ad2a29f7b2a","exec":[""],"type":"text/javascript"}}],"_postman_id":"65ce01e0-0a02-474a-bff7-5763744f7c13","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policydeductibletypes","host":["{{baseURI}}"],"path":["api","policydeductibletypes"]}},"response":[]},{"name":"Get_Policy Liability Limit Types","event":[{"listen":"test","script":{"id":"d409799c-13ca-4aa1-b0b8-0d0a9e239b85","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Buyer' || ","            responseJSONdata[i].name == 'Country' ||","            responseJSONdata[i].name == 'Policy'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7453552c-eba4-4609-ab14-7f5f004dfebb","exec":[""],"type":"text/javascript"}}],"_postman_id":"dcccbc6b-8462-4fde-b405-42e81aa52986","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policyliabilitylimittypes","host":["{{baseURI}}"],"path":["api","policyliabilitylimittypes"]}},"response":[]},{"name":"Get_Policy Premium Types","event":[{"listen":"test","script":{"id":"ec5c1af5-5834-46dc-ac79-08cc0b687042","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Blended Rate by Buyer' || ","            responseJSONdata[i].name == 'Blended Rate By Country' ||","            responseJSONdata[i].name == 'Fixed rate'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"64a4d0d4-bb59-4f76-bac4-1917cc9189f5","exec":[""],"type":"text/javascript"}}],"_postman_id":"04ce0e24-1df1-4339-8e74-b1248bfa5dad","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policypremiumtypes","host":["{{baseURI}}"],"path":["api","policypremiumtypes"]}},"response":[]},{"name":"Get_Report Period Types","event":[{"listen":"test","script":{"id":"49ac0833-b15a-4800-8be4-9c534e707af6","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Annually' || ","            responseJSONdata[i].name == 'Custom' ||","            responseJSONdata[i].name == 'Monthly' ||","           responseJSONdata[i].name == 'Quarterly' ||","           responseJSONdata[i].name == 'Semi-Annually' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7db3b77e-1f33-4142-9446-96084df44696","exec":[""],"type":"text/javascript"}}],"_postman_id":"9d4ea59f-a837-4b78-bc3d-37f32680a6b7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/reportperiodtypes","host":["{{baseURI}}"],"path":["api","reportperiodtypes"]}},"response":[]},{"name":"Get_Scope of Coverage Types","event":[{"listen":"test","script":{"id":"87811710-15c8-45ee-8fce-726233620cf0","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","            responseJSONdata[i].name == 'Domestic (US)' ||","           responseJSONdata[i].name == 'Multicountry' ||","            responseJSONdata[i].name == 'Not Applicable' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8a2962e5-0f78-48db-b6ea-7293ccff51d4","exec":[""],"type":"text/javascript"}}],"_postman_id":"911affde-70aa-4180-82a0-f0995027755c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/scopeofcoveragetypes","host":["{{baseURI}}"],"path":["api","scopeofcoveragetypes"]}},"response":[]},{"name":"Get_Policy Documents Types","event":[{"listen":"test","script":{"id":"a7f70279-0fd8-48b5-8e03-1bf7a1af50c3","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Additional Named Insured Endorsement' || ","            responseJSONdata[i].name == 'Broker Endorsement' ||","            responseJSONdata[i].name == 'Country Schedule' ||","           responseJSONdata[i].name == 'DCL Endorsement'  ||","           responseJSONdata[i].name == 'Ledger DCL Endorsement' || ","            responseJSONdata[i].name == 'Loss Payee Endorsement' ||","            responseJSONdata[i].name == 'LQX Endorsement' ||","           responseJSONdata[i].name == 'Other'  ||","           responseJSONdata[i].name == 'Policy Declarations' ||","            responseJSONdata[i].name == 'Policy Terms and Conditions' ||","           responseJSONdata[i].name == 'Preference Claims Endorsement'  ||","           responseJSONdata[i].name == 'Premium Schedule' || ","            responseJSONdata[i].name == 'Sanctions Endorsement' ||","            responseJSONdata[i].name == 'Seller Schedule'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"03731c3c-e33e-4ff3-ab8e-ddf3a7a5ceee","exec":[""],"type":"text/javascript"}}],"_postman_id":"64f8900c-9c8c-4f9a-9f69-fcaf45d6ae8c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policydocumenttypes","host":["{{baseURI}}"],"path":["api","policydocumenttypes"]}},"response":[]},{"name":"Get_Currencies","event":[{"listen":"test","script":{"id":"b2a2e10f-1d33-4241-89a0-95965686e4ea","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a75ed3a5-0e34-47b6-a490-17ddad739b9b","exec":[""],"type":"text/javascript"}}],"_postman_id":"4f61b582-e0e2-43b2-8bc7-6945aa727e2f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/currencies","host":["{{baseURI}}"],"path":["api","currencies"]}},"response":[]},{"name":"Get_Governing Laws","event":[{"listen":"test","script":{"id":"8faaf83d-313a-4487-b8b5-1b237a0eabd0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Governing Law is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].code).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].isIncludedInPolicy).to.not.eql(null);\r","  \r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"783368e3-51d6-48d7-a7ce-33f1479afb46","exec":[""],"type":"text/javascript"}}],"_postman_id":"00e24ea3-d0c7-4707-808f-e120c271522a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/governinglaws","host":["{{baseURI}}"],"path":["api","governinglaws"]}},"response":[]},{"name":"Get_Political Risk Type","event":[{"listen":"test","script":{"id":"4b1be42b-1b11-481b-808a-30f6914b18c3","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'N/A'  ||","           responseJSONdata[i].name == 'No' || ","            responseJSONdata[i].name == 'By Country' ||","            responseJSONdata[i].name == 'Yes'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c4507c0f-937b-4112-abea-5f5be80d8fa3","exec":[""],"type":"text/javascript"}}],"_postman_id":"655a68d4-93f8-4b9f-99aa-8150bbfe4e58","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/politicalrisktypes","host":["{{baseURI}}"],"path":["api","politicalrisktypes"]}},"response":[]},{"name":"Get_Peril Coverage Type","event":[{"listen":"test","script":{"id":"5fef5cef-aab9-49e6-ae43-ca8a4fb963de","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'All Risks'  ||","           responseJSONdata[i].name == 'Insolvency' || ","            responseJSONdata[i].name == 'Protracted Default' ||","            responseJSONdata[i].name == 'Political Risks'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b701ac91-63b0-48f6-af2f-19974ace7e40","exec":[""],"type":"text/javascript"}}],"_postman_id":"43145e06-5bc0-4b53-b5fd-0e20e62b81e1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/perilcoveragetype","host":["{{baseURI}}"],"path":["api","perilcoveragetype"]}},"response":[]},{"name":"Get_Peril Coverage Period Type","event":[{"listen":"test","script":{"id":"fe9d4ea1-bcac-420a-80f1-826b179a80e0","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Country'  ||","           responseJSONdata[i].name == 'Enter Value' || ","            responseJSONdata[i].name == 'N/A' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"cb2b3e93-1fcc-451c-9279-0feff6102121","exec":[""],"type":"text/javascript"}}],"_postman_id":"14b565ca-ba6b-4ba2-85d0-b8eb537c3275","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/perilcoverageperiodtype","host":["{{baseURI}}"],"path":["api","perilcoverageperiodtype"]}},"response":[]},{"name":"Get_Max Extension Period Type","event":[{"listen":"test","script":{"id":"6a489c96-a845-4b1f-848a-00484cdaf697","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Country'  ||","           responseJSONdata[i].name == 'Enter Value'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"64f878c6-1b79-47e9-a6d5-fa5b5d11c131","exec":[""],"type":"text/javascript"}}],"_postman_id":"7205ec6d-021f-471d-92ed-a9be64d4cda8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/maxextensionperiodtype","host":["{{baseURI}}"],"path":["api","maxextensionperiodtype"]}},"response":[]},{"name":"Get_ Buyer Value Option Types","event":[{"listen":"test","script":{"id":"19a3f547-adf3-4954-800e-72bf454eb2fc","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Buyer'  ||","           responseJSONdata[i].name == 'Enter Value'            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"285c43c7-efd3-4964-ba9c-4b436b39d568","exec":[""],"type":"text/javascript"}}],"_postman_id":"0ac9a926-5dbb-4819-bd51-cf769ac5c89b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/buyervalueoptiontypes","host":["{{baseURI}}"],"path":["api","buyervalueoptiontypes"]}},"response":[]},{"name":"Get_ Buyer States","event":[{"listen":"test","script":{"id":"a26ed9e7-5524-49e3-9c1d-afb1ea0a0dbb","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'Bound'            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"1c70c202-a65a-4350-9dcb-ec9815cd5ae2","exec":[""],"type":"text/javascript"}}],"_postman_id":"5827b5e8-0965-45c0-9088-8f4fc6901f59","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/buyerstates","host":["{{baseURI}}"],"path":["api","buyerstates"]}},"response":[]},{"name":"Get_ Syndication Rule Types","event":[{"listen":"test","script":{"id":"02959f99-2423-4a6a-8fdd-fc8c16aab49d","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'Each Limit'            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"351821ab-233f-4edf-bf12-cec59e0fcae7","exec":[""],"type":"text/javascript"}}],"_postman_id":"59349c58-92d2-4605-bb32-4f242ed934b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/syndicationruletypes","host":["{{baseURI}}"],"path":["api","syndicationruletypes"]}},"response":[]},{"name":"Get_Policy Types","event":[{"listen":"test","script":{"id":"fb89f2e7-baf0-4fef-bf89-fd7cd6b3dec6","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'Named Multibuyer Portfolio'  ||","           responseJSONdata[i].name == 'Single Risks Framework' ||","           responseJSONdata[i].name == 'Whole Turnover'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6b9f19e5-9d41-4683-bcf2-d081e1a77b6d","exec":[""],"type":"text/javascript"}}],"_postman_id":"d07ebc43-f1b3-4171-bbc2-f33e8ee92337","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policytypes","host":["{{baseURI}}"],"path":["api","policytypes"]}},"response":[]}],"_postman_id":"699f540a-741c-452c-b711-21d826f351df","_postman_isSubFolder":true},{"name":"Carriers","item":[{"name":"Get_Insurance Carriers","event":[{"listen":"test","script":{"id":"bb0abadc-7621-4c7c-8090-2e600e93b40f","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"18272eda-7060-4c69-9c94-1f2ed563f2ee","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"6226bafc-3bb0-41c3-9b53-4d39f6b9d046","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"]}},"response":[]},{"name":"Get_Insurance Carrier/ Indicative Details","event":[{"listen":"test","script":{"id":"5426f0af-23ac-4a36-8b4a-0354521e3887","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].maxTenor).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].indicativeLimitsSum).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"5f5e2d32-3a26-4124-b036-9865c847e693","exec":[""],"type":"text/javascript"}}],"_postman_id":"1057ab2b-93e0-4933-9aa4-8d0881ffde99","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/indicativedetail","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","indicativedetail"]}},"response":[]},{"name":"Get_Insurance Carrier/ CarrierPolicy","event":[{"listen":"test","script":{"id":"b748ad6a-11fd-4509-8be9-c5ab680e89c3","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200);","    ","});","","","var expectedCarrierId = JSON.parse(pm.variables.get(\"Carriers\"));","","pm.test(\"To check Policy details is not null (carrierId,carrierName,policies)\" , function(){","    for (var i=0; i < responseJSONdata.length; i++)","    {","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","      pm.expect(responseJSONdata[i].carrierId).to.not.eql(null);","      pm.expect(responseJSONdata[i].carrierName).to.not.eql(null);","      pm.expect(responseJSONdata[i].policies).to.not.eql(null);","     ","    }  ","});","","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","    pm.expect(responseJSONdata.length).to.be.above(0);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"93a3cf38-715d-4510-bd31-49421534bed9","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/InsuranceCarriers\");","console.log(url);","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","    var carriers=[];","    for (var i=0;i<jsonData.length;i++)","    {","        carriers.push(jsonData[i].id);","    }","    pm.variables.set(\"Carriers\", JSON.stringify(carriers));","    ","});"],"type":"text/javascript"}}],"_postman_id":"f7aaae2f-30bd-49bd-b895-af6ffc59c80e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/carrierpolicies","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","carrierpolicies"]}},"response":[]},{"name":"Get_Carriers Count=100","event":[{"listen":"test","script":{"id":"554b3379-5367-44ec-b9f6-523806a6031a","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"43bb6aa8-a626-4fac-a6e9-7a27ed51a7ad","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"c058738a-26e6-4e24-9d43-5d4cbce4a8f2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?count=100","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"count","value":"100"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Carriers/MinimumSkip","event":[{"listen":"test","script":{"id":"b9c27523-eac8-4dee-a2a2-0c56396ee614","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"56dca72e-89f0-47b9-9be5-5a7b5cfe08d3","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"8b484697-78a2-4a82-8d0d-690adf1f8edc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Carriers/MaximumSkip","event":[{"listen":"test","script":{"id":"4f6c3571-729d-421b-8aee-aa12724a4534","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"26ad8005-6021-455e-8223-ad2a1187e7c2","exec":["pm.variables.set(\"skip\", 10);"],"type":"text/javascript"}}],"_postman_id":"d646a606-5f90-48d8-a869-11d2417ecab8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"9b353b9e-ce50-440b-b5cf-73d7bb7df8a8","_postman_isSubFolder":true},{"name":"Insured Party","item":[{"name":"Get_Insurance Parties","event":[{"listen":"test","script":{"id":"0bb8c464-c4f2-4cb7-acc8-f6f1742c7273","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b23f8c82-f87b-4971-a19c-27ea336f5f72","exec":[""],"type":"text/javascript"}}],"_postman_id":"25eda4b4-db50-4372-9791-69f70b89e7c7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/InsuredParties","host":["{{baseURI}}"],"path":["api","InsuredParties"]}},"response":[]},{"name":"Get_Insurance Party By Id","event":[{"listen":"test","script":{"id":"d0f8ac93-1293-44d3-91bd-3faeeec16d0f","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6e48a15c-3a9b-4b64-9919-c429a0f691ac","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","\r","    pm.variables.set(\"IPid\",jsonData[i].id);\r","    console.log(jsonData[i].id);\r","     });\r","\r",""],"type":"text/javascript"}}],"_postman_id":"6e6ba07c-f394-467a-a72d-c9917e4f7733","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties/{{ParticipantID}}","host":["{{baseURI}}"],"path":["api","InsuredParties","{{ParticipantID}}"]}},"response":[]},{"name":"Get_Insurance Party By Id Details","event":[{"listen":"test","script":{"id":"a1b44e5f-c92e-434c-a4c6-e161ce8f0089","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200);","","});","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","","    }","","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4afbb517-d6ce-42eb-81ce-48a2dacb913e","exec":["var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/InsuredParties\");","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","              }","      ","}, function (err, res) {","    ","","    var jsonData = res.json();","    var i=Math.floor((Math.random() * jsonData.length) + 1);","  // console.log(\"count \"+i);","  // console.log(\"Sic:\"+jsonData[i]);","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);"," var responseJSONdata = res.json();"," ","","     for (var i = 0; i < responseJSONdata.length; i++) {","     ","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){","                 pm.variables.set(\"ParticipantID\", responseJSONdata[i].id);","                 console.log(responseJSONdata[i].id);","                 ","             } ","         }","    });","",""],"type":"text/javascript"}}],"_postman_id":"14d109e6-a377-47b3-a915-e5131a392012","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties/{{ParticipantID}}/detail","host":["{{baseURI}}"],"path":["api","InsuredParties","{{ParticipantID}}","detail"]}},"response":[]}],"_postman_id":"01ef918b-77a1-4625-ae68-27c4ec77ee65","event":[{"listen":"prerequest","script":{"id":"ccde21dd-612f-4bc7-b518-8bc3a76b94c5","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"57d46cf1-7d65-45ee-b6f9-aee6ac97611b","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Debtor","item":[{"name":"Get_Debtors","event":[{"listen":"test","script":{"id":"0e7a7368-4d00-40cc-81ec-03b4709cf80b","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"To check Debtor details is not null (sicCode,addressLine1,city,stateProvince,postalCode,countryCode,country,id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].addressLine1).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].city).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].postalCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].country).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","//pm.test(\"Validate response body: \", function(){\r","     //pm.expect(responseJSONdata).to.have.any.keys('sicCode','addressLine1','city','stateProvince','postalCode','countryCode','country','id','name','duns','countryName' );\r","    //});\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"0334f547-e53d-4cbb-a7e8-1827aa3c458c","exec":[""],"type":"text/javascript"}}],"_postman_id":"fc202095-a8bb-4bbb-846e-9773603761be","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"Name","value":"Test Account Debtor 8","disabled":true}]}},"response":[]},{"name":"Get_Debtors/DeafultValue","event":[{"listen":"test","script":{"id":"b3d7e36a-944a-40a3-8527-70f7e67ddb79","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","\r","if(responseBody !== '')\r","{\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.above(1);\r","    });\r","}"],"type":"text/javascript"}}],"_postman_id":"672186ac-1cd9-413b-b6b6-076a4de3c749","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Debtors?count=100","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Debtors/MinimumSkip","event":[{"listen":"test","script":{"id":"23ac1a66-9525-4425-b0a2-d1aca4b50b0a","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)","});","","if (responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.be.below(1001);","    });","}","else {","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"32ab1d84-39ff-44f5-807b-b0a7e0c5e116","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"655e98c0-2c0d-4c67-8c03-c1cf09e26051","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Debtors/MaximumSkip","event":[{"listen":"test","script":{"id":"23fdf195-bdae-458b-9829-6925105609ce","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)","});","","if (responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.be.below(1001);","    });","}","else {","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"46293053-f848-4ade-a61a-45a0b1718a29","exec":["pm.variables.set(\"skip\", 50);"],"type":"text/javascript"}}],"_postman_id":"d15c5556-d674-4755-876b-4b9c9c51c8da","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"04c4b7b5-1b81-4da2-a3bc-719acb21a478","event":[{"listen":"prerequest","script":{"id":"b0436713-b2b2-487d-8e38-038673fb77be","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"e9ad0d5f-c05d-4756-b5a7-ff281fde42f5","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Lookups","item":[{"name":"Get_AttachmentPeriodTypes","event":[{"listen":"test","script":{"id":"54aa805d-1edf-4b1a-9b2f-37bdf5e606a6","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Date Financial Purchase Asset' || ","            responseJSONdata[i].name == 'Date of Receipt by AD' ||","            responseJSONdata[i].name == 'Invoice Date' || ","            responseJSONdata[i].name == 'Supplier Shipment Date' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"90dc3a85-9b26-46ea-b8f8-912aec9c106d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/attachmentperiodtypes","host":["{{baseURI}}"],"path":["api","attachmentperiodtypes"]}},"response":[]},{"name":"Get_PremiumBasisType","event":[{"listen":"test","script":{"id":"8bdfb60d-7c30-41bb-9fda-6f16a6ba0c4c","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'GROSS LIMIT' || ","            responseJSONdata[i].name == 'INSURABLE SALES' ||","            responseJSONdata[i].name == 'MONTH END A/R BALANCES' || ","            responseJSONdata[i].name == 'MONTH END GROSS EXPOSURE' || ","             responseJSONdata[i].name == 'MONTH END NET EXPOSURE' ||","            responseJSONdata[i].name == 'NET LIMIT' ||","            responseJSONdata[i].name == 'MONTHLY PEAK A/R'||","            responseJSONdata[i].name == 'UTILIZATION'","            ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Premium Basis Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"b0352cfe-062e-4336-9030-d139f3c520ee","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/premiumbasistypes","host":["{{baseURI}}"],"path":["api","premiumbasistypes"]}},"response":[]},{"name":"Get_Countries","event":[{"listen":"test","script":{"id":"8df55254-583b-42e7-acb3-232de0eeb172","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","pm.test(\"To check Country details is not null (id,iso2,iso3,name)\" , function(){","    for (var i=0; i < responseJSONdata.length; i++)","    {","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","      pm.expect(responseJSONdata[i].id).to.not.eql(null);","      pm.expect(responseJSONdata[i].iso2).to.not.eql(null);","      pm.expect(responseJSONdata[i].iso3).to.not.eql(null);","      pm.expect(responseJSONdata[i].name).to.not.eql(null);","      ","    }         ","    ","}); ","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","    pm.expect(responseJSONdata.length).to.be.above(0);","});"],"type":"text/javascript"}}],"_postman_id":"a8a92e9b-1142-43cd-82e2-357f48991604","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/countries","host":["{{baseURI}}"],"path":["api","countries"]}},"response":[]},{"name":"Get_QuoteTypes","event":[{"listen":"test","script":{"id":"fc76a950-ef97-4d37-8f67-db7a1dc9e016","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Firm' || ","            responseJSONdata[i].name == 'Last Look' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"3a16857a-8f4e-407e-8e3a-28c5c5e7e6a4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotetypes","host":["{{baseURI}}"],"path":["api","quotetypes"]}},"response":[]},{"name":"Get_Products","event":[{"listen":"test","script":{"id":"f597b585-886e-429f-8f90-169a0d2d2675","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'A/R' || ","            responseJSONdata[i].name == 'SCF'  || ","            responseJSONdata[i].name == 'Trade Loans' || ","            responseJSONdata[i].name == 'L/Cs' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"3d782f18-6211-4d29-926f-5aef61ebcbd1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/coveredassettypes","host":["{{baseURI}}"],"path":["api","coveredassettypes"]}},"response":[]},{"name":"Get_Products Copy","event":[{"listen":"test","script":{"id":"cc29ed31-28aa-486b-8020-17a7872ec819","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'A/R' || ","            responseJSONdata[i].name == 'SCF'  || ","            responseJSONdata[i].name == 'Trade Loans' || ","            responseJSONdata[i].name == 'L/Cs' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"807fbb11-2a75-4faa-923d-b3e3a7957a96","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/coveredassettypes","host":["{{baseURI}}"],"path":["api","coveredassettypes"]}},"response":[]}],"_postman_id":"baea7fa0-7c32-4dc5-983d-8595888d4b2b","_postman_isSubFolder":true},{"name":"Quotes","item":[{"name":"Quotes By Id","item":[{"name":"Get_PendingQuotes By Id","event":[{"listen":"test","script":{"id":"8e434923-8a78-4166-8983-be1206fa4ea6","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","    \r","    \r","pm.test(\"To check Quote details is not null (status,debtorIds,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,quoteTypeId,premiumBasisTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].premiumBasisTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","    }         \r","    \r","});\r","    \r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","    pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","      "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4d432a66-d0af-4f1b-b43b-be11dd3970c3","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"7558a23c-b056-4131-9b3b-7ad063856e69","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}"]}},"response":[]},{"name":"Get_ApprovedLimits By Id","event":[{"listen":"test","script":{"id":"2d0f7ab6-f374-4a9d-a7df-d5c8f71b7fdd","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","    pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","      "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d6c702c9-319b-4698-8971-1aba5abf426c","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=approvedlimit\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"79cb6493-080a-4ddc-9636-56093e4cad88","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}"]}},"response":[]},{"name":"Get_Quotes By ID with Original Quote","event":[{"listen":"prerequest","script":{"id":"43628e6d-a169-4132-8630-799637d2dbc3","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"671a6dec-9923-49da-9dc6-daf609b5f9aa","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","\r","pm.test(\"To check Original Quote details is not null (status,debtorIds,insuranceCarrierId,insuranceCarrier,insurancePolicyId,insurancePolicy,initiatingParticipantId,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].initiatingParticipantId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"3d820c82-b3d0-44ae-b446-34f3d263e5bf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}/orig","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}","orig"]}},"response":[]},{"name":"Get_Quotes By ID with Last Updated Quote","event":[{"listen":"prerequest","script":{"id":"521b9172-ff03-4994-ba8d-8ccdbec04236","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8eae64f0-dda7-47b6-b8c1-917e2db2a673","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","\r","pm.test(\"To check Original Quote details is not null (status,debtorIds,insuranceCarrierId,insuranceCarrier,insurancePolicyId,insurancePolicy,initiatingParticipantId,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].initiatingParticipantId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"2912b401-c013-4bcb-bc15-07759e4d4d0f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}/last","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}","last"]}},"response":[]}],"_postman_id":"e8eef8e1-3695-41d9-8b3e-937d23434305","_postman_isSubFolder":true},{"name":"Quotes By ScreenName","item":[{"name":"PendingQuotes","item":[{"name":"Get_PendingQuotes","event":[{"listen":"test","script":{"id":"8804434a-4600-46de-9481-2d521d2209dc","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"08d72db5-715c-4993-938e-07e94c455e7b","exec":[""],"type":"text/javascript"}}],"_postman_id":"ffa3642d-a998-4d6c-a799-0687216536f0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumCount","event":[{"listen":"test","script":{"id":"c8e4821a-3969-4e8a-b402-2fcd9ed112a4","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"840ecee1-c6b0-4098-9abe-cb1f2399ea08","exec":[""],"type":"text/javascript"}}],"_postman_id":"c13bad63-37cb-41bd-a422-e3b3264deb85","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumCount","event":[{"listen":"test","script":{"id":"21df1f86-ff73-4797-b599-405da86a4190","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"64cd2a8d-6669-4260-9424-a4fd1fdf01e6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=10","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"10"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumSkip","event":[{"listen":"test","script":{"id":"9b6b6d5b-a0e4-42d9-ba8a-e972413fc339","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"764684f3-16ab-48e2-80ed-f8e4eb09bf4b","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"7977b842-00f0-4330-b2d8-6de5a232417a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumSkip","event":[{"listen":"test","script":{"id":"e31a9fb9-f4e5-4034-a661-4a0624ebd91c","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d76dcd3a-5889-48d7-90d0-00982e059588","exec":["pm.variables.set(\"skip\", 0);"],"type":"text/javascript"}}],"_postman_id":"69bf9ce0-bda7-43d5-9120-b2b25e1f98fc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"4a69d89c-4281-4235-a641-884caa86a0f7","_postman_isSubFolder":true},{"name":"ApprovedLimits","item":[{"name":"Get_ApprovedLimits","event":[{"listen":"test","script":{"id":"31a345c9-bb2d-4dc5-acdb-8a067ed2db51","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"74440384-526f-4e59-a0ec-38e4db72b915","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumCount","event":[{"listen":"test","script":{"id":"3239ed27-0285-47a0-8003-fb0fbf4f55d1","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"bb1f17aa-b160-4865-91f3-f290bde3ed06","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumCount","event":[{"listen":"test","script":{"id":"0aa8c890-83b3-4270-8be7-249564f77241","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"acde44b0-5577-42b8-be88-f9862f55aac2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=100","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumSkip","event":[{"listen":"test","script":{"id":"20d0dd10-ae64-4ec8-9dfa-e2671219cbcc","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e3a62c1e-9d12-410d-ab0a-288b6ce5645b","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"d1e41d22-1441-4c7b-a071-4d500e9ff805","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumSkip","event":[{"listen":"test","script":{"id":"d846b613-9e75-44b7-b859-654536174679","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"64a84c60-563a-4d30-bdf0-40cb92c595b4","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"e527dad0-2cc4-416a-b75c-cf33b4dec50c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"8499c82b-2040-4c82-8e92-389336ac0871","_postman_isSubFolder":true}],"_postman_id":"00e490f3-1bac-4c76-9589-0fa01805529d","_postman_isSubFolder":true}],"_postman_id":"bb1201b4-ae37-415f-89b2-ce1ffd14fd11","_postman_isSubFolder":true},{"name":"Activity Monitor","item":[{"name":"Get_ActivityMonitor","event":[{"listen":"test","script":{"id":"542a37dd-fe0d-40da-b163-5f54b043a2e0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"3f5d5201-7a21-4b06-bb42-ce9cd1c081a9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor","host":["{{baseURI}}"],"path":["api","ActivityMonitor"]}},"response":[]},{"name":"Get_ActivityMonitor/ApprovedLimits","event":[{"listen":"test","script":{"id":"4e97dee3-6298-4bc6-860a-a01cceaeb583","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"d2da4a86-a207-4334-a7fe-4a3a2a12f5c6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor/approvedLimits","host":["{{baseURI}}"],"path":["api","ActivityMonitor","approvedLimits"]}},"response":[]},{"name":"Get_ActivityMonitor By Id","event":[{"listen":"test","script":{"id":"18c946b8-3ae1-4c78-8a0d-b9a10e91195c","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c94c33ca-5d04-4c0e-a24d-3ac1105a645e","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/ActivityMonitor\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var responseJSONdata = res.json();\r","    var i=Math.floor((Math.random() * responseJSONdata.length) + 1);\r","    pm.variables.set(\"transId\",responseJSONdata[i].transactionId);\r","\r"," \r","});"],"type":"text/javascript"}}],"_postman_id":"9f46f7f6-8e4f-4f68-9450-3d82298aaccb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor/{{transId}}","host":["{{baseURI}}"],"path":["api","ActivityMonitor","{{transId}}"]}},"response":[]}],"_postman_id":"dbb8963f-bbea-488b-8b6d-5de91492688d","_postman_isSubFolder":true},{"name":"Transactions","item":[{"name":"Get_Transactions By ID","event":[{"listen":"test","script":{"id":"c82b4da8-874a-4ca0-872c-bf2867d64e5a","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Transaction details are not null (id,insuredPartyId,brokerId,product,maxCreditLimitRfq,indemnityRfq,insuredParty,transactionAccountDebtors)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].brokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].product).to.not.eql(null);\r","       pm.expect(responseJSONdata[i].maxCreditLimitRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnityRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredParty).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].transactionAccountDebtors).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8a48a124-66a5-45ea-91d2-6095dd091bf2","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","     var i=Math.floor((Math.random() * jsonData.length) + 1);\r","    pm.variables.set(\"QuoteId\", jsonData[i].quoteId);\r","    pm.variables.set(\"TRANSID\",jsonData[i].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"fb336857-d384-4757-8a56-c0f8b2419902","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}"]}},"response":[]},{"name":"Get_Transactions`s Average Premium Rate","event":[{"listen":"test","script":{"id":"f6d6b987-93f8-47fd-96d8-15d4b28702f9","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Average Premium details are not null (count, averagePremiumRate)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].count).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].averagePremiumRate).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"867d9873-45b1-4077-81d9-f007b5d9949a","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=approvedlimit\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","\r","\r","     pm.variables.set(\"TRANSID\",jsonData[i].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"c4b336ee-ce47-4f70-9a04-88fc0432bb6a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}/averagepremiumrate","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}","averagepremiumrate"]}},"response":[]},{"name":"Get_Transactions logs By ID","event":[{"listen":"test","script":{"id":"4d6d848d-e562-4d5f-b161-ca4bb55de731","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Transaction details are not null (transactionId,quoteId,status,participantId,participantName,timestamp)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].participantId).to.not.eql(null);\r","       pm.expect(responseJSONdata[i].participantName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].timestamp).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b430558c-7e18-4505-a325-426571f445b9","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    pm.variables.set(\"TRANSID\",jsonData[0].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"f1e5e7f9-895a-4c46-a63e-f3c0f24ea5ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}/logs","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}","logs"]}},"response":[]},{"name":"Get_Transactions","event":[{"listen":"test","script":{"id":"af46b648-284d-4da5-ac97-b7f72821e5a4","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","pm.test(\"To check Transaction details is not null (transactionId,insuredPartyId,brokerId,coBrokerId,productId,maxCreditLimitRfq,indemnityRfq,currencyCodeRfq,requestCancellableByIpRfq,updatedOn,attachmentPeriodRfq)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].brokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].coBrokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnityRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].currencyCodeRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIpRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].attachmentPeriodRfq).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"1fe540ce-18a9-4edd-b55c-01c1e9c5da62","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions","host":["{{baseURI}}"],"path":["api","Transactions"]}},"response":[]},{"name":"Get_Quotes Responded By IC","event":[{"listen":"test","script":{"id":"c61efaf3-af7b-4d63-9494-085d512c799b","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","pm.test(\"To check Transaction details is not null (transactionId,insuredPartyId,brokerId,coBrokerId,productId,maxCreditLimitRfq,indemnityRfq,currencyCodeRfq,requestCancellableByIpRfq,updatedOn,attachmentPeriodRfq)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].brokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].coBrokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnityRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].currencyCodeRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIpRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].attachmentPeriodRfq).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3ab1aace-6c47-4e5a-af70-bf629adbabf9","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP1\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","     var i=Math.floor((Math.random() * jsonData.length) + 1);\r","    pm.variables.set(\"QuoteId\", jsonData[i].quoteId);\r","    pm.variables.set(\"trid\",jsonData[i].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"4945075d-7160-4ad0-8e41-004be1bffa35","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP1}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{trid}}/quotesrespondedbyic","host":["{{baseURI}}"],"path":["api","Transactions","{{trid}}","quotesrespondedbyic"]}},"response":[]}],"_postman_id":"6fd001f2-9717-4864-8d39-0beb5db9e0bd","_postman_isSubFolder":true},{"name":"Notifications","item":[{"name":"Flow: Create and Delete","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"349b3762-d8fc-4e94-87d7-0be9173e6d06","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c69d4755-333c-4a0a-8879-ba367cdededc","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     \r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","                 pm.environment.set(\"ParticipantID\", responseJSONdata[i].id);\r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000,10000)+ 'Test' + '@gmail.com';\r","         pm.environment.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"54aa7181-2aa7-477d-8042-a7599ae6de31","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"919297aa-777a-44d6-bfcd-51485dc1446c","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c99d271e-8967-4a7a-a732-1e9d3dfe4ffb","exec":[""],"type":"text/javascript"}}],"_postman_id":"bf78eeed-5699-4667-9d16-512fe43b7c47","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"ALiquidx2020@gmail.com\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"6d0f47ba-19c6-4d80-b395-0ec3bd2c07e8","_postman_isSubFolder":true},{"name":"Flow: Create and Delete By EmailId","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"f21136a0-5b81-4b59-99d8-afb902749609","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d23795ac-f9c6-42f0-b162-9add1245430b","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     \r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","                 pm.environment.set(\"ParticipantID\", responseJSONdata[i].id);\r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000)+ 'Test' + '@gmail.com';\r","         pm.environment.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"5c75c693-e578-4e6f-8438-52fe8711c96f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Delete_Notifications By Email","event":[{"listen":"test","script":{"id":"c622d2da-a910-4cab-99eb-f9fb31f8c39b","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"93b684e7-9028-46cc-a995-2133119ebd50","exec":[""],"type":"text/javascript"}}],"_postman_id":"cf533bd4-1524-434c-95fc-5fe0697c49d7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/Notifications/{{Email}}","host":["{{baseURI}}"],"path":["api","Notifications","{{Email}}"],"query":[{"key":"email","value":"","disabled":true}]}},"response":[]}],"_postman_id":"a3f12217-2885-44fd-8208-39ef48b47785","_postman_isSubFolder":true},{"name":"Flow: Create, Edit and Delete","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"af366244-5515-4b67-9f01-b6956ac24996","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"109f100e-b2c4-46a5-af5e-418b0ec1c98b","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     console.log(responseJSONdata[i].name);\r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","               console.log(responseJSONdata[i].id);\r","                pm.variables.set(\"ParticipantID\", responseJSONdata[i].id);\r","                \r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000)+ 'Test' + '@gmail.com';\r","         pm.variables.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"9ae17e66-f176-41df-be49-36e07dac1c8b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Put_Notifications","event":[{"listen":"test","script":{"id":"a91bfaf0-71ef-4aea-a176-e0d409a94c4b","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"36ac8c80-a738-4ad9-9ce3-b9c62c957985","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"916eda86-a069-49ed-a853-5d67415088db","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            },\n            {\n                \"subscriptionTypeId\": 2,\n                \"subscriptionType\": \"InfoRequested\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"b6aaa22b-d44c-4320-ad5f-7d94653f3b56","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"87765031-408a-4f9a-b480-369ad0ccf68d","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"92b6b08a-5b40-4e47-afd4-34a5c5ebd0c2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"{{Email}}\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"ce1e3180-bcc2-4815-ab83-d0bf4bf1f9cb","_postman_isSubFolder":true},{"name":"Get_Notifications","event":[{"listen":"test","script":{"id":"97c96d80-790f-459e-ad2d-0abb2fc4207a","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"f55a2b3e-e3ba-42c1-936d-30d7dd4bf0a8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Get_Notifications Types","event":[{"listen":"test","script":{"id":"6f1d1653-128f-4bfd-888e-1910defc498d","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","\r","if(responseBody !== '')\r","{\r","    if(responseJSONdata.length > 0)\r","    {\r","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);\r","        console.log(\"length ==\"+responseJSONdata.length)\r","        for (i = 0; i < responseJSONdata.length; i++)\r","        {\r","            var confirmname = false;\r","            if (responseJSONdata[i].name == 'NewTransactionCreated' || \r","            responseJSONdata[i].name == 'InfoRequested' ||\r","            responseJSONdata[i].name == 'InfoProvided' || \r","            responseJSONdata[i].name == 'PendingReview' ||\r","              responseJSONdata[i].name == 'Quote' ||\r","            responseJSONdata[i].name == 'AcceptedbyIP' || \r","            responseJSONdata[i].name == 'Declined' ||\r","              responseJSONdata[i].name == 'TransactionEnded' ||\r","            responseJSONdata[i].name == 'RFQPassed' || \r","            responseJSONdata[i].name == 'QuoteWithdrawn' ||\r","             responseJSONdata[i].name == 'QuoteExpired' ||\r","              responseJSONdata[i].name == 'AmendmentRequest' ||\r","            responseJSONdata[i].name == 'LastLookQuoteAccepted' || \r","            responseJSONdata[i].name == 'CancelledbyIP' ||\r","               responseJSONdata[i].name == 'CancelledbyIC' ||\r","            responseJSONdata[i].name == 'ICAmendment' ||\r","            responseJSONdata[i].name == 'CoverageExpired' ||\r","            responseJSONdata[i].name == 'IcAlert' ||\r","           responseJSONdata[i].name =='ApprovedLimitExpiration'\r","            )\r","            {\r","                confirmname = true;\r","            }\r","            var name=responseJSONdata[i].name;\r","            console.log(\"type value is :\"+responseJSONdata[i].name);\r","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {\r","                pm.expect(confirmname).to.be.true;\r","            });\r","        }\r","    }\r","}"],"type":"text/javascript"}}],"_postman_id":"f67dd6b8-eb79-4b49-97f5-220aef50daeb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/notifications/types","host":["{{baseURI}}"],"path":["api","notifications","types"]}},"response":[]},{"name":"Get_Notifications By Email","event":[{"listen":"test","script":{"id":"5e35f22e-ff81-45a8-9b16-cae0093dc8b3","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"24b5e47c-b270-412b-b1be-344778c29235","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Notifications\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    \r","    var jsonData = res.json();\r","    var x = Math.floor((Math.random() * 2) + 1);\r","    pm.variables.set(\"email\", jsonData[x].email);\r","  \r","     \r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"6f029b2c-a9ac-4740-a8b8-aac08a6c9d1b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications/{{email}}","host":["{{baseURI}}"],"path":["api","Notifications","{{email}}"]}},"response":[]}],"_postman_id":"8ab5a1d6-27ad-4841-bbf8-2a2615d59e52","_postman_isSubFolder":true}],"_postman_id":"1e2863bc-a8ef-4ca8-a8ee-46c17442b176","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"03e71ac2-e9c4-40a0-91a1-58b4297ae772","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"39259f3a-a72e-4d15-8af3-87f5300e06a6","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"IC_User","item":[{"name":"Lookups","item":[{"name":"Get_AttachmentPeriodType","event":[{"listen":"prerequest","script":{"id":"186f8a6d-2847-40e9-bb12-1aa02c71ae86","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"fc285661-f636-4808-af5e-287979b60ddf","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();"," for (var i=0;   i<jsonData.length;  i++)"," { ","    var expectedAttachmentPeriodType = ['Date of Receipt by AD', 'Invoice Date','Date Financial Purchase Asset','Supplier Shipment Date'];","    pm.test(\"To Check whether attachment period type \"+ jsonData[i].name +\" is present\", function () {","      pm.expect(expectedAttachmentPeriodType).to.include( jsonData[i].name); ","    });"," }"],"type":"text/javascript"}}],"_postman_id":"fa97e125-2b64-41fc-a782-0c9f39ba9517","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/attachmentperiodtypes","host":["{{baseURI}}"],"path":["api","attachmentperiodtypes"]}},"response":[]},{"name":"Get_PremiumBasisTypes","event":[{"listen":"prerequest","script":{"id":"f3d92864-f9d3-4ed8-b377-94ecdef1d2e4","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"f2a34d3d-629f-4932-84ba-bcff53558f4f","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'GROSS LIMIT' || ","            responseJSONdata[i].name == 'INSURABLE SALES' ||","            responseJSONdata[i].name == 'MONTH END A/R BALANCES' || ","            responseJSONdata[i].name == 'MONTH END GROSS EXPOSURE' || ","             responseJSONdata[i].name == 'MONTH END NET EXPOSURE' ||","            responseJSONdata[i].name == 'NET LIMIT' ||","            responseJSONdata[i].name == 'MONTHLY PEAK A/R'||","            responseJSONdata[i].name == 'UTILIZATION'","            ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Premium Basis Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"5c3a328f-6a9e-4df5-9826-405d43590e30","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/premiumbasistypes","host":["{{baseURI}}"],"path":["api","premiumbasistypes"]}},"response":[]},{"name":"Get_QuoteType","event":[{"listen":"prerequest","script":{"id":"3c89a9a5-a726-4545-8122-1030e799b330","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3b99f8d5-d6d3-4e06-8b15-369564b30e71","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmName = false;","            if (responseJSONdata[i].name == 'Firm' || ","            responseJSONdata[i].name == 'Last Look')","            {","                confirmName = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Name value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmName).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"90e6d6cd-a424-4498-ac8f-16dc2f3d2dbd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotetypes","host":["{{baseURI}}"],"path":["api","quotetypes"]}},"response":[]},{"name":"Get_SPCarrierRatings","event":[{"listen":"prerequest","script":{"id":"88777382-58cf-4fa2-8073-188103cb5997","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3122653f-afd6-4f99-acf6-64a07ad896a8","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'AAA' || ","            responseJSONdata[i].name == 'AA+' ||","            responseJSONdata[i].name == 'AA' || ","            responseJSONdata[i].name == 'AA-' ||","            responseJSONdata[i].name == 'A+' || ","          responseJSONdata[i].name == 'A' ||","           responseJSONdata[i].name == 'A-' || ","            responseJSONdata[i].name == 'BBB+' ||","            responseJSONdata[i].name == 'BBB' || ","           responseJSONdata[i].name == 'BBB-' ||","            responseJSONdata[i].name == 'BB+' ||","             responseJSONdata[i].name == 'BB' ||","            responseJSONdata[i].name == 'BB-' ||","            responseJSONdata[i].name == 'B+'||","            responseJSONdata[i].name == 'B'||","            responseJSONdata[i].name == 'B-'||","            responseJSONdata[i].name == 'CCC+'||","            responseJSONdata[i].name == 'CCC'||","            responseJSONdata[i].name == 'CCC-'||","            responseJSONdata[i].name == 'CC'||","            responseJSONdata[i].name == 'C'||","            responseJSONdata[i].name == 'D'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"state value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"47cf90c1-9c0c-4361-8622-cbb47969b014","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/spcarrierrating","host":["{{baseURI}}"],"path":["api","spcarrierrating"]}},"response":[]},{"name":"Get_AmbestCarrierRating","event":[{"listen":"test","script":{"id":"1f1a044e-ec7f-4521-ae0d-3c4de4b8b03d","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'A++' || ","            responseJSONdata[i].name == 'A+' ||","            responseJSONdata[i].name == 'A' || ","            responseJSONdata[i].name == 'A-' ||","            responseJSONdata[i].name == 'B++' || ","          responseJSONdata[i].name == 'B+' ||","           responseJSONdata[i].name == 'B' || ","            responseJSONdata[i].name == 'B-' ||","            responseJSONdata[i].name == 'C++' || ","           responseJSONdata[i].name == 'C+' ||","            responseJSONdata[i].name == 'C' ||","             responseJSONdata[i].name == 'C-' ||","            responseJSONdata[i].name == 'D' ||","            responseJSONdata[i].name == 'E'||","            responseJSONdata[i].name == 'F'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"state value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"bba11e9c-5fa7-4c19-8c94-c11eadb6be80","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ambestcarrierrating","host":["{{baseURI}}"],"path":["api","ambestcarrierrating"]}},"response":[]},{"name":"Get_QuoteDeclineType","event":[{"listen":"test","script":{"id":"9e49fee0-f131-4237-9cb3-8af9b42882cc","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Buyer Risk' || ","            responseJSONdata[i].name == 'Capacity Constraints'|| ","            responseJSONdata[i].name == 'Country Risk'|| ","            responseJSONdata[i].name == 'Geography'|| ","            responseJSONdata[i].name == 'Insufficient credit procedures'|| ","            responseJSONdata[i].name == 'Insufficient information to quote'|| ","            responseJSONdata[i].name == 'Loss history'|| ","            responseJSONdata[i].name == 'Other'|| ","            responseJSONdata[i].name == 'Payment Terms'|| ","            responseJSONdata[i].name == 'Pricing'|| ","            responseJSONdata[i].name == 'Sector Risk'|| ","            responseJSONdata[i].name == 'Size'|| ","            responseJSONdata[i].name == 'Structure'|| ","            responseJSONdata[i].name == 'Unable to cover key buyers'|| ","            responseJSONdata[i].name == 'Unable to provide requested structure'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Quote Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"e1a22ceb-6c52-4b13-a31a-24c6ba5a7388","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotedeclinetypes","host":["{{baseURI}}"],"path":["api","quotedeclinetypes"]}},"response":[]}],"_postman_id":"d2f43104-8fae-404c-b4fb-6364ba5c36ee","_postman_isSubFolder":true},{"name":"Notifications","item":[{"name":"Flow: Create and Delete Copy","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"fd5de6a6-6530-4315-b737-779407263b72","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b8fab2e0-3d56-41ce-96fe-8433f941a212","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     \r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","                 pm.environment.set(\"ParticipantID\", responseJSONdata[i].id);\r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000,10000)+ 'Test' + '@gmail.com';\r","         pm.environment.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"744578a8-bec3-42b3-937f-e3ef89fada08","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Get_Notifications","event":[{"listen":"test","script":{"id":"351680ab-3fb5-4c23-a1d9-c603f225a9eb","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6ab50351-e7fd-41f3-b064-21371c5cdfad","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"5edc6b41-8364-4988-af86-949e08afd6fe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"b6e7396d-df52-4360-bfdd-a86ef41f42ab","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e13775ba-d56a-4f76-bc05-4a1759b8ea97","exec":[""],"type":"text/javascript"}}],"_postman_id":"fb434a4e-7842-4715-b9ca-ac9fafc47550","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"ALiquidx2020@gmail.com\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"22ff5b38-ad07-4f0f-95da-8d68becc554d","_postman_isSubFolder":true}],"_postman_id":"d107936f-59cf-4b07-8819-7e5292e84feb","_postman_isSubFolder":true},{"name":"Quotes","item":[{"name":"Quotes By Id","item":[{"name":"Get_Pendingquotes","event":[{"listen":"test","script":{"id":"15c47fba-cd0f-4d42-9759-6e936731f650","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review' ||","            responseJSONdata[i].status == 'Transaction Ended'","            )","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"bb904bc7-09c4-4935-9e94-39602882f678","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_Approvedlimit","event":[{"listen":"test","script":{"id":"2031d133-c56e-45f9-be53-60278c2f03ab","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"a76a724e-40d8-4b2c-90aa-0616bc027b85","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]}],"_postman_id":"2735578e-62cd-4027-8efb-f65ac538d054","_postman_isSubFolder":true},{"name":"Quotes By ScreenName","item":[{"name":"PendingQuotes","item":[{"name":"Get_PendingQuotes","event":[{"listen":"test","script":{"id":"3b8672c4-3f4d-48ba-b8cd-250a1bce606a","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b8918923-7191-40fe-8268-876584c111b3","exec":[""],"type":"text/javascript"}}],"_postman_id":"6fe3bf7b-07a9-4d1f-be12-d6235db706b7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumCount","event":[{"listen":"test","script":{"id":"d4b5eec3-3cb7-40ad-b44d-6d1077310369","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"faef38ba-b62e-458f-9ae6-63e9dde15240","exec":[""],"type":"text/javascript"}}],"_postman_id":"a289dfb7-1d69-4ffb-8281-c7012362022d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumCount","event":[{"listen":"test","script":{"id":"4b18b20d-24c3-4f53-8c26-33e8450f10e3","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"ca8c62f1-162b-4548-a69c-a341cd35b3ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=10","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"10"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumSkip","event":[{"listen":"test","script":{"id":"cb669983-d848-487f-a70d-d613c248e76f","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"206236b9-489f-47f6-87ab-9ad6f0d3c144","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"a5cd11ef-cb77-41a7-9ab0-cd28ce6f9c2c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumSkip","event":[{"listen":"test","script":{"id":"ec455b91-5167-4962-8caf-16c0488815fb","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","  //  pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","  //      pm.expect(responseJSONdata.length).to.be();","   // });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4b16b657-6823-4474-8096-9e11206e14a7","exec":["pm.variables.set(\"skip\", 10);"],"type":"text/javascript"}}],"_postman_id":"19a26dff-d78c-4ef4-b2fe-191f7d46d6f5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"562325ec-f618-417c-bb69-e715515a3488","_postman_isSubFolder":true},{"name":"ApprovedLimits","item":[{"name":"Get_ApprovedLimits","event":[{"listen":"test","script":{"id":"0de2f82b-2123-49ea-b94e-f8b387d8622e","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"d0a21308-fdfd-49e2-958b-fbe72bf177a0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumCount","event":[{"listen":"test","script":{"id":"ada14b9e-6be2-4fd1-b818-ce24b8584d9b","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"11e8155c-25ad-4a7e-99d7-c77979cd49d8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumCount","event":[{"listen":"test","script":{"id":"8e60026f-6732-429f-b987-4253da67980f","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"107de867-e5bf-4bbd-9dbf-bc4adb270bc8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=100","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumSkip","event":[{"listen":"test","script":{"id":"f3c939f8-1eeb-495b-a501-a7ae3ed14a36","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"37d3649b-8198-46dc-8ead-08fb3fcef8e6","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"e68dc1a5-3c1a-4392-82fa-afb6853984f6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumSkip","event":[{"listen":"test","script":{"id":"ce210bae-ebc2-4efd-b142-52b3d0fe34da","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"," "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4221ad4f-01d7-4c44-9a5f-fdffc4d3d919","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"f16b34f9-4fcc-4884-a465-c77deccb8039","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"ff49695b-01c1-4400-850b-c9953996168a","_postman_isSubFolder":true}],"_postman_id":"b85912da-7895-485b-bca3-64f8502fd21c","_postman_isSubFolder":true}],"_postman_id":"7e59826d-2a55-4ae3-b295-c0f0485ff4e0","_postman_isSubFolder":true}],"_postman_id":"4743697c-6d67-4f6c-85c5-cf3b460fade4","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"2f46755e-431c-4207-a852-d43c2fb2f259","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"a8d6dcf8-7aa6-4027-8dd3-5e8540bcd140","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true}],"_postman_id":"f855e887-aa32-40f6-b048-591c9fa127d5","event":[{"listen":"prerequest","script":{"id":"b98956b7-5116-4f07-9ecc-add5bfe7be3b","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"45ea09f3-74f7-4dc1-9398-00403bb4f801","type":"text/javascript","exec":["if(pm.response.code == 200)","{","    console.log(\"responseBody\", responseBody);","    if (responseBody != null)","    {","        if (responseBody =='[]' || responseBody == '{}')","        {","             tests[\"Body is empty \" + responseBody]= false;","        }","        else {","          tests[\"Body is not empty\"]= true;","        }","    }","    else","    {","          tests[\"Body is empty\" + responseBody]= false;","    }","}","","pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"]}}]},{"name":"Version","item":[{"name":"Get_Verison","_postman_id":"5e1d7783-e842-4c05-9dd3-4adf0622f9ec","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Versions","host":["{{baseURI}}"],"path":["api","Versions"]}},"response":[]}],"_postman_id":"56e12b51-d713-4d40-8cb8-31e259a75739"},{"name":"POST","item":[{"name":"IP_User","item":[{"name":"Download","_postman_id":"97b86a6b-4213-4c4d-82e4-b41a92105b1c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"body":{"mode":"formdata","formdata":[],"options":{"formdata":{}}},"url":{"raw":"https://lqx-insurance-qa-fn.azurewebsites.net/api/Download?assetid=0&fileid=1349b9c8-bc68-4de1-9069-dbca7bd44b72&productCode=INS","protocol":"https","host":["lqx-insurance-qa-fn","azurewebsites","net"],"path":["api","Download"],"query":[{"key":"assetid","value":"0"},{"key":"fileid","value":"1349b9c8-bc68-4de1-9069-dbca7bd44b72"},{"key":"productCode","value":"INS"}]}},"response":[]}],"_postman_id":"2672edeb-51ca-4cdd-9b49-4e6e957a8f90","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"65a1e43c-eb7a-4140-a59e-4dd695a48052","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"86458884-02f3-4282-89e7-59dbae6de79f","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"IC_User","item":[{"name":"Quotes","item":[{"name":"Withdrawn","_postman_id":"3aa36b21-c998-48d0-ac25-4b61b4eaa7b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": 154\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/withdrawn","host":["{{baseURI}}"],"path":["api","Quotes","withdrawn"]}},"response":[]}],"_postman_id":"1ad1b25f-d1f4-4568-9437-c0273ed82b30","_postman_isSubFolder":true},{"name":"Upload","_postman_id":"5c0da27d-1c01-42f7-aedf-161291972be6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[{"key":"","type":"file","src":"/C:/Users/dahakea/Downloads/image.png"},{"key":"","type":"file","value":null},{"key":"","type":"file","value":null}],"options":{"formdata":{}}},"url":{"raw":"https://lqx-insurance-qa-fn.azurewebsites.net/api/Upload?assetid=485&assettype=quote&stateid=2&state=Quote&description=Test2&productcode=INS&assetDetailId=983","protocol":"https","host":["lqx-insurance-qa-fn","azurewebsites","net"],"path":["api","Upload"],"query":[{"key":"assetid","value":"485"},{"key":"assettype","value":"quote"},{"key":"stateid","value":"2"},{"key":"state","value":"Quote"},{"key":"description","value":"Test2"},{"key":"productcode","value":"INS"},{"key":"assetDetailId","value":"983"}]}},"response":[]},{"name":"GET_InsuranceCaarrier/ Subsidiaries","event":[{"listen":"test","script":{"id":"063e88e3-0c06-4f06-b5bd-9b16db54712f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"cf7da5c3-61e9-4d82-9afc-2351ff447a69","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/IcSubsidiaries","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","IcSubsidiaries"]}},"response":[]},{"name":"GET_InsuranceCaarrier/ ICSubsidiaries","event":[{"listen":"test","script":{"id":"86d7269b-8989-40bc-ae62-cac63dbf80b2","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"d39debad-eddc-4c1c-8735-4a36b41b298d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/IcSubsidiaries","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","IcSubsidiaries"]}},"response":[]}],"_postman_id":"44f5eaf7-bb54-4739-ad8a-0ac0c4e9dd22","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"97e11be9-35f4-4c66-a853-8d83c4b1acbe","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"058f90bc-3887-4b3e-af78-5a9ac3736f21","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"ADMIN_user","item":[{"name":"Policy","item":[{"name":"POST PUT as Draft and DELETE","item":[{"name":"Post Save Policy As Draft","event":[{"listen":"prerequest","script":{"id":"d7d8c15e-be9a-48cd-8401-d79b85c94d1c","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","   var jsonData = res.json();\r","    \r","    \r","     for (var i = 0; i < jsonData.length; i++) {\r","       \r","     \r","             if (jsonData[i].id == pm.environment.get('policy'))\r","             {\r","              \r","                pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","                console.log(jsonData[i].insuredParty.id);\r","                pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);                 \r","                pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","                break;\r","             } \r","         \r","}\r","\r"," });\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"51c8b339-0e2e-4bf8-94d8-08cffae243e6","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","pm.test(\"Status code is 201\", function () {\r","   pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Status code name has string\", function () {\r","    pm.response.to.have.status(\"Created\");\r","});\r","\r","pm.test(\"Body is correct\", function () {\r","  var jsonData= pm.response.json();\r","  pm.expect(jsonData).to.be.a('number');\r","});\r","\r","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var policyId= pm.response.json();\r","console.log(policyId);\r","pm.environment.set(\"POLICYID\",policyId);\r",""],"type":"text/javascript"}}],"_postman_id":"400ca364-ef02-4cf8-8fb9-dd48ba541f87","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"API_POST_DRAFT_TEST\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": null,\n    \"expiryDate\": null,\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/draft","host":["{{baseURI}}"],"path":["api","Policies","draft"]}},"response":[]},{"name":"Put_Policy as Draft","event":[{"listen":"test","script":{"id":"c6f401d1-a0a2-4dee-9fe8-64df1cbec13f","exec":["\r"," setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful PUT Request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","pm.test(\"Successful PUT Request\"), function(){\r","    pm.expect(pm.response.body).to.noteql(0);\r","};\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3437bdd1-4d9a-46df-ab4b-b9bc451370b4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenADMIN\")\r","      }\r","      \r","}, function (err, res) {\r","\r","  var jsonData = res.json();\r","    for (var i = 0; i < jsonData.length; i++) {\r","   \r","             if (jsonData[i].id === pm.environment.get('POLICYID')){\r","                console.log(jsonData[i].id);\r","              pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","              console.log(jsonData[i].insuredParty.id);\r","              pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","              pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","}\r","    }\r","});"],"type":"text/javascript"}}],"_postman_id":"3720221e-f2bf-458d-81d1-23a41b53fc28","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"insuredPartyId\":{{insuredPartyId}},\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"API_POST_DRAFT_TEST\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": null,\n    \"expiryDate\": null,\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}/draft","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}","draft"]}},"response":[]},{"name":"Delete_Policy By ID","event":[{"listen":"prerequest","script":{"id":"e116f4e1-caf6-4e9a-bc1b-c2a79b8e5161","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"433409ed-7ca5-4dac-9d2f-e216d534a7e1","exec":["\r"," setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r",""],"type":"text/javascript"}}],"_postman_id":"fef0e6b9-af0f-48c4-8c13-7d21bcda7ac0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}"]}},"response":[]}],"_postman_id":"749b9ec0-5c17-4095-8a3e-c37be04cf5ff","_postman_isSubFolder":true},{"name":"POST PUT as Incomplete","item":[{"name":"Post Save Policy As Incomplete","event":[{"listen":"prerequest","script":{"id":"2982d011-c832-4a30-b903-450609c8c54f","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","   var jsonData = res.json();\r","    \r","    \r","     for (var i = 0; i < jsonData.length; i++) {\r","       \r","     \r","             if (jsonData[i].id == pm.environment.get('policy'))\r","             {\r","              \r","                pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","                console.log(jsonData[i].insuredParty.id);\r","                pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);                 \r","                pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","                pm.variables.set(\"coveredAssetTypeId\",_.random(1,4));\r","                pm.variables.set(\"policyTypeId\",_.random(1,3));\r","                pm.variables.set(\"policyCommissionRate\",_.random(1,99));\r","                \r","                break;\r","             } \r","         \r","}\r","\r"," });\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"6f8c1322-0466-4e6a-b3b4-cac4f0577dd3","exec":["pm.test(\"Status code is 201\", function () {\r","   pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Status code name has string\", function () {\r","    pm.response.to.have.status(\"Created\");\r","});\r","\r","pm.test(\"Body is correct\", function () {\r","  var jsonData= pm.response.json();\r","  pm.expect(jsonData).to.be.a('number');\r","});\r","\r","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var policyId= pm.response.json();\r","console.log(policyId);\r","pm.environment.set(\"POLICYID\",policyId);\r",""],"type":"text/javascript"}}],"_postman_id":"b513ba4e-3cf3-4ad4-93ed-1e55b7606225","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"API_POST_DRAFT_TEST\",\n    \"carrierPolicyNumber\": \"\",\n \"inceptionDate\": \"2020-3-1T00:00:00.000Z\",\n    \"expiryDate\": \"2020-6-26T00:00:00.000Z\",\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"syndicationRuleTypeId\": null,\n    \"coveredAssetTypeId\": {{coveredAssetTypeId}},\n    \"policyTypeId\": {{policyTypeId}},\n    \"policyCommissionRate\": {{policyCommissionRate}},\n\t\"documentFileIds\": [],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}\n   \n   ","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/incomplete","host":["{{baseURI}}"],"path":["api","Policies","incomplete"]}},"response":[]},{"name":"Put_Policy as Incomplete","event":[{"listen":"test","script":{"id":"614b0397-2a6d-454a-b343-d27ae3588fc0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3a3a6f4d-7617-4640-8d29-79cbd0c050cd","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenADMIN\")\r","      }\r","      \r","}, function (err, res) {\r","\r","  var jsonData = res.json();\r","    for (var i = 0; i < jsonData.length; i++) {\r","   \r","             if (jsonData[i].id === pm.environment.get('POLICYID')){\r","                  pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","                console.log(jsonData[i].insuredParty.id);\r","                pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);                 \r","                pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","    }\r","    }\r","});"],"type":"text/javascript"}}],"_postman_id":"abf9a85d-1118-46d9-9675-8c32b4c57fea","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n   \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n\t\"policyTypeId\":1,\n    \"coveredAssetTypeId\":2,\n    \"policyCommissionRate\":17.5,\n\t\"claimFilingPeriodPerilCoverPeriodTypeId\": null,\n    \"waitPeriodPerilCoverPeriodTypeId\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"PUT POLICY as INCOMPLETE\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": \"2020-6-10T00:00:00.000Z\",\n    \"expiryDate\": \"2020-6-27T00:00:00.000Z\",\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [\n        {\n            \"policyDocumentTypeId\": 1,\n            \"fileName\": \"11.txt\",\n            \"fileGuid\": \"225e2a95-c61e-468f-9b4d-ad53dfaa7c5c\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        },\n        {\n            \"policyDocumentTypeId\": 2,\n            \"fileName\": \"Buyer Schedule CSV Template 2 (populated).txt\",\n            \"fileGuid\": \"226ea38f-0d1a-4389-a7e3-aa3e5e0f7a72\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        }\n    ],\n\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n     \"isPeriodAutoExtended\": false,\n    \"extensionMonths\": 0,\n    \"liabilityLimitTypeId\": 2,\n    \"liabilityLimit\": 0,\n    \"scopeOfCoverageTypeId\": 1,\n    \"currencyCode\": \"USD\",\n    \"invoiceTerms\": null,\n    \"premiumBasisTypeId\": 3,\n    \"policyAttachmentTypeId\": 1,\n    \"indemnityTypeId\": 2,\n    \"indemnity\": 0,\n    \"policyDeductibleTypeId\": 5,\n    \"deductibleAmount\": 0,\n    \"nonQualifyingLoss\": null,\n    \"havingDiscretionCreditLimit\": false,\n    \"discretionaryCreditLimit\": 0,\n    \"estMaxPayTermsLiabLimitTypeId\": 2,\n    \"estimatedMaxPayTerms\": 0,\n    \"maxExtensionPeriodTypeId\": 2,\n    \"maximumExtensionPeriod\": null,\n    \"cancellableLimitTypeId\": 2,\n    \"coveredAssetTypeId\": 3,\n    \"dealTeam\": \"\",\n    \"collateralAgent\": \"\",\n    \"policyPremiumTypeId\": 2,\n    \"premiumRate\": 0,\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [\n        \"USD\"\n    ],\n    \"havingInvoicingPeriod\": null,\n    \"havingNonQualifyingLoss\": null,\n    \"isSyndicated\": false,\n    \"policyTypeId\": 2,\n    \"policyCommissionRate\": 17.5,\n    \"policyPremiumSchedule\": {\n        \"id\": null,\n        \"policyId\": 694,\n        \"minBuyerValueOptTypeId\": 2,\n        \"minimumPremium\": 0,\n        \"depositBuyerValueOptTypeId\": 2,\n        \"depositPremium\": 0,\n        \"premiumPaymentTerms\": 45,\n        \"reportingDeadlineInDays\": 30,\n        \"amountPastDueRptThreshold\": null,\n        \"daysPastDueRptThreshold\": null,\n        \"reportPeriodTypeId\": 4,\n        \"numberOfPeriods\": 1,\n        \"premiumRptPeriodDetails\": [\n            {\n                \"dateStart\": null,\n                \"dateEnd\": null\n            }\n        ]\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}/incomplete","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}","incomplete"]}},"response":[]}],"_postman_id":"fd3240eb-479f-47cc-aa2f-ae28ae11e9e0","_postman_isSubFolder":true},{"name":"Get_Policy","event":[{"listen":"test","script":{"id":"c06f0bea-78f5-439c-95d4-1927a8895b8e","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredParty).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"44918ca8-884c-4a80-b60c-04f749832205","exec":[""],"type":"text/javascript"}}],"_postman_id":"f5aca94a-1ef6-47f5-8f43-a5439b36f9ab","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies?count=100","host":["{{baseURI}}"],"path":["api","Policies"],"query":[{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_PolicyTypes","event":[{"listen":"test","script":{"id":"4cac8df4-1ec9-411c-a0ce-35d85bb44b7e","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredParty).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8e5791f5-ec73-477b-951f-7934705cbfba","exec":[""],"type":"text/javascript"}}],"_postman_id":"264be427-098e-4ad9-961b-da66692d8965","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies?count=100","host":["{{baseURI}}"],"path":["api","Policies"],"query":[{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_Policy By ID","event":[{"listen":"prerequest","script":{"id":"10128a71-66da-48e7-88a9-b6a4822fed64","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","  var jsonData = res.json();\r","  \r","\r","  var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  pm.variables.set(\"policyId\", jsonData[i].id);\r","}\r",");"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b4206b36-0e4e-4a0b-a0b8-3d34df8820d9","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}}],"_postman_id":"ad450bb5-989d-4dbe-a02b-5a8cec6a46a5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}"]}},"response":[]},{"name":"Get_Policy By ID Copy","event":[{"listen":"prerequest","script":{"id":"513b034f-7c03-4027-a966-e614a14f02b5","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","  var jsonData = res.json();\r","  \r","\r","  var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  pm.variables.set(\"policyId\", jsonData[i].id);\r","}\r",");"],"type":"text/javascript"}},{"listen":"test","script":{"id":"72a00572-2b2f-4673-acd0-d0f7380766ae","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}}],"_postman_id":"0a1d9c65-a144-4146-a6e6-6abc4dd80b5e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}"]}},"response":[]},{"name":"Get_Policy By ID PolicyDocuments","event":[{"listen":"test","script":{"id":"8e2727e1-bf6b-42e1-aad2-ac089a8c2e5c","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a5c1f63a-dadd-4d94-aecc-ccfc3e1f004d","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","  var jsonData = res.json();\r","  \r","\r","  var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  pm.variables.set(\"policyId\", jsonData[i].id);\r","}\r",");"],"type":"text/javascript"}}],"_postman_id":"cffee374-1658-4d0f-9505-142ba17cd8cf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}/policydocuments","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}","policydocuments"]}},"response":[]},{"name":"Put_Policy as Bound","event":[{"listen":"test","script":{"id":"82038183-3ca9-429f-b9dd-473e48a647aa","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"431e3f5f-8d7b-4298-8312-f1315b61e75c","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenADMIN\")\r","      }\r","      \r","}, function (err, res) {\r","\r","  var jsonData = res.json();\r","    for (var i = 0; i < jsonData.length; i++) {\r","   \r","             if (jsonData[i].id === pm.environment.get('POLICYID')){\r","                console.log(jsonData[i].id);\r","              pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","              console.log(jsonData[i].insuredParty.id);\r","              pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","              pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","}\r","    }\r","});"],"type":"text/javascript"}}],"_postman_id":"3e1c9bf0-8416-45b6-a10f-8635ce26915d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n  \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \t\"policyTypeId\":1,\n    \"coveredAssetTypeId\":2,\n    \"policyCommissionRate\":17.5,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"PUT POLICY as INCOMPLETE\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": \"2020-6-17T00:00:00.000Z\",\n    \"expiryDate\": \"2020-6-27T00:00:00.000Z\",\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [\n        {\n            \"policyDocumentTypeId\": 1,\n            \"fileName\": \"11.txt\",\n            \"fileGuid\": \"225e2a95-c61e-468f-9b4d-ad53dfaa7c5c\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        },\n        {\n            \"policyDocumentTypeId\": 2,\n            \"fileName\": \"Buyer Schedule CSV Template 2 (populated).txt\",\n            \"fileGuid\": \"226ea38f-0d1a-4389-a7e3-aa3e5e0f7a72\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        }\n    ],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}/bound","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}","bound"]}},"response":[]},{"name":"Put_Policy Country Schedule","event":[{"listen":"test","script":{"id":"aad80aa6-0f67-466f-be5f-b7e8433c68b9","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8dea319f-5916-4e86-b64a-d65d4e9ca5bd","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenADMIN\")\r","      }\r","      \r","}, function (err, res) {\r","\r","  var jsonData = res.json();\r","  \r","  \r","  var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  pm.variables.set(\"policyId\", jsonData[i].id);\r","  pm.variables.set(\"id\", jsonData[i].id);\r","  pm.variables.set(\"limit\", _.random(100000,9999999));\r","  pm.variables.set(\"groupLimit\", _.random(100,999));\r","pm.variables.set(\"premiumRate\", _.random(10,99));\r","pm.variables.set(\"estLongestPaymentTerms\", _.random(1,15));\r","pm.variables.set(\"maxTensionPeriod\", _.random(1,15));\r","pm.variables.set(\"indemnity\", _.random(1,99));\r","\r","\r","\r","\r","\r","  \r","  \r","});"],"type":"text/javascript"}}],"_postman_id":"706243e7-63ce-4f21-8917-b8cbeffd8aa7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"[\n  {\n    \"id\": 0,\n    \"policyId\": {{policyId}},\n    \"countryId\": 4,\n    \"limit\": {{limit}},\n    \"countryGroup\": \"Test\",\n    \"groupLimit\": {{groupLimit}},\n    \"premiumRate\": {{premiumRate}},\n    \"estLongestPaymentTerms\": {{estLongestPaymentTerms}},\n    \"maxTensionPeriod\": {{maxTensionPeriod}},\n    \"indemnity\": {{indemnity}},\n    \"nonQualifyingLoss\": 0,\n    \"havingPoliticalRisk\": true,\n    \"havingDiscretionLimit\": true,\n    \"maxDiscretionCreditLimit\": 0,\n    \"discretionaryCreditLimit\": 0,\n    \"havingDeductible\": true,\n    \"deductibleAmount\": 0,\n    \"havingSpecialCondition\": true,\n    \"specialCondition\": \"string\",\n    \"claimFilingPeriodAllRisk\": 0,\n    \"claimFilingPeriodInsolvency\": 0,\n    \"claimFilingPeriodProtractedDefault\": 0,\n    \"claimFilingPoliticalRisk\": 0,\n    \"waitingPeriodAllRisk\": 0,\n    \"waitingPeriodInsolvency\": 0,\n    \"waitingPeriodProtractedDefault\": 0,\n    \"waitingPeriodPoliticalRisk\": 0\n  }]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}/countryschedule","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}","countryschedule"]}},"response":[]}],"_postman_id":"3bd5d5eb-92c8-4354-a8ca-726698b16390","_postman_isSubFolder":true},{"name":"Indicative Quotes","item":[{"name":"POST and DELETE Quotes","item":[{"name":"Post_Indicative Quotes","event":[{"listen":"test","script":{"id":"95f74cd0-5a55-440b-8fe7-3beec8c1130d","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitTotal).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorsCount).to.not.eql(null);\r","    }         \r","    var IndQuoteId= pm.response.json();\r","console.log(IndQuoteId);\r","pm.environment.set(\"IndQuoteId\",IndQuoteId);\r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"725007ed-73f7-42a1-9ffa-2cb415a50f96","exec":["var url = pm.variables.get(\"baseURI\");\r","   url = url.concat(\"/api/Indicative/quotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   \r","    var jsonData = res.json();\r","    console.log(jsonData);\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","\r"," \r","    pm.variables.set(\"duns\",jsonData[i].accountDebtor.duns);\r","    console.log(jsonData[i].accountDebtor.duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].accountDebtor.name);   \r","    console.log(jsonData[i].accountDebtor.name); \r","    pm.variables.set(\"countryCode\",jsonData[i].accountDebtor.countryCode);\r","    console.log(jsonData[i].accountDebtor.countryCode);\r","    pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","    pm.variables.set(\"indemnity\", _.random(1,99));\r","    pm.variables.set(\"premiumRate\", _.random(2,99));\r","   \r","    //console.log(jsonData[i].insuranceCarrierId);\r","  \r","    \r"," });\r","\r",""],"type":"text/javascript"}}],"_postman_id":"f474500e-d3b9-4dd6-bbb1-5fd1c33e1a4e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"[\n    {\n        \"insuranceCarrierId\": {{carrierId}},\n        \"maxCreditLimit\": {{maxCreditLimit}},\n        \"indemnity\": {{indemnity}},\n        \"premiumRate\": 40,\n        \"postedDaysToQuoteExpiration\": 2,\n        \"accountDebtor\": {\n            \"duns\": \"{{duns}}\",\n            \"name\": \"{{debtorName}}\",\n            \"countryCode\": \"{{countryCode}}\"\n        }\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Indicative/quotes","host":["{{baseURI}}"],"path":["api","Indicative","quotes"]}},"response":[]},{"name":"Delete_Indicative Quotes","event":[{"listen":"test","script":{"id":"ca2561be-07e7-4b66-aceb-8b93c7d7aacf","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitTotal).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorsCount).to.not.eql(null);\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ce12e2bf-d3c1-483e-8c9a-33a2a7a6e5a6","exec":[""],"type":"text/javascript"}}],"_postman_id":"6d9ffb94-97a0-4957-98bc-20b8ec08b2a5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Indicative/quotes/{{IndQuoteId}}","host":["{{baseURI}}"],"path":["api","Indicative","quotes","{{IndQuoteId}}"]}},"response":[]}],"_postman_id":"19e90703-ed67-46f0-9bb0-9d2a50886eee","_postman_isSubFolder":true},{"name":"Get_Indicative Quotes","event":[{"listen":"test","script":{"id":"3757f64d-d59d-4eb6-ae5f-4fc72eb7fdca","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].accountDebtorId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].premiumRate).to.not.eql(null);\r","\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"7538cfae-42b6-49a6-97ad-fe7ef83ad22d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Indicative/quotes","host":["{{baseURI}}"],"path":["api","Indicative","quotes"]}},"response":[]},{"name":"Get_Quote Summary","event":[{"listen":"test","script":{"id":"07989f5d-4a32-4c92-a7fd-cb801c931275","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitTotal).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorsCount).to.not.eql(null);\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"59f1b832-5ddc-4332-9754-668c98ed6ffd","exec":[""],"type":"text/javascript"}}],"_postman_id":"2551e5a7-f928-4615-b9ad-8beac767c9d6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Indicative/quotessummary","host":["{{baseURI}}"],"path":["api","Indicative","quotessummary"]}},"response":[]}],"_postman_id":"e3da4ffe-f61a-46c4-82c2-ae0d70ae0063","_postman_isSubFolder":true}],"_postman_id":"20b98c00-d94c-4495-b3e9-84f3883d7e50","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"_postman_isSubFolder":true},{"name":"MO user","item":[{"name":"POST and DELETE Subsidiary","item":[{"name":"POST Subsidiaries","event":[{"listen":"prerequest","script":{"id":"abe72b75-205c-4e51-8796-4a5270e6ed3d","exec":["var unique = getRandomAlphaNumeric(2,\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\");","pm.variables.set(\"val\", unique);","","function getRandomAlphaNumeric(len, chars) {","    var result = '';","    for (var i = len; i > 0; i--)","    { ","     result += chars[Math.floor(Math.random() * chars.length)];","    }","     return result;","}","","pm.variables.set(\"isActive\", true);",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"bd746fd4-c269-4536-947c-19c597428b01","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});","","","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  var responseJSONdata = pm.response.json();","  var subID= responseJSONdata.id;"," ","  pm.variables.set(\"SubID\",subID);","console.log(subID);"],"type":"text/javascript"}}],"_postman_id":"d8b94687-292c-4586-a5de-e3713c5c081a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"id\": 0,\r\n  \"legalName\": \"API_Subsidiary_{{val}}\",\r\n  \"displayName\": \"Subsidiary_{{val}}\",\r\n  \"insuranceCarrierId\": {{INS_IC}},\r\n  \"isActive\": {{isActive}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiary/{{INS_IC}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiary","{{INS_IC}}"]}},"response":[]},{"name":"Delete Subsidiary Copy","event":[{"listen":"prerequest","script":{"id":"0f1bdfba-fa12-4f55-8604-ea2d22ceb739","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c2df367e-b24b-4f4a-a889-79e64ad1d0b4","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"04325b74-1bc3-462c-80a9-eef45022e90f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiary/{{SubID}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiary","{{SubID}}"]}},"response":[]}],"_postman_id":"401a8724-5357-4fff-8578-5c2423027c22","_postman_isSubFolder":true},{"name":"GET InsuredParty PartCarriers","event":[{"listen":"test","script":{"id":"92a5f17e-9810-410f-b33a-79bf8177d4ce","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"3603bb54-e415-4f82-a761-24c2e47dafa5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties/partyCarriers/{{INS_IP}}","host":["{{baseURI}}"],"path":["api","InsuredParties","partyCarriers","{{INS_IP}}"]}},"response":[]},{"name":"GET InsuredParty","event":[{"listen":"test","script":{"id":"d77ea759-bbfc-4e86-8569-f72135f2dac1","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"a8756ea1-8218-4f16-9362-2d1a3eab5f00","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties","host":["{{baseURI}}"],"path":["api","InsuredParties"]}},"response":[]},{"name":"GET InsuredParty by ID","event":[{"listen":"test","script":{"id":"c3989d58-6656-492c-ad36-e27939afc3c2","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8478254f-9115-4237-b058-2118b4c3c052","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","   var jsonData = res.json();\r","    \r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  pm.variables.set(\"IPid\", jsonData[i].id);\r","   \r","     \r","         \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"cc3282a8-76d1-4b7d-ac2e-f728cefa7e00","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties/{{IPid}}","host":["{{baseURI}}"],"path":["api","InsuredParties","{{IPid}}"]}},"response":[]},{"name":"PUT InsuredParty","event":[{"listen":"test","script":{"id":"608286d1-e94b-4269-968c-91faf5fffd83","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"bb117388-e497-4fff-bfdf-1cda07df4765","exec":["//Test2\r","pm.variables.set(\"isSelected\", true);\r","pm.variables.set(\"id\", 1009);\r","pm.variables.set(\"name\", \"575_IC\");\r","pm.variables.set(\"isActive\", true);\r","\r","\r","//UATDemo\r","//pm.variables.set(\"isSelected\", true);\r","//pm.variables.set(\"id\", 99);\r","//pm.variables.set(\"name\", \"Great American Ins. / FCIA\");\r","//pm.variables.set(\"isActive\", true);\r",""],"type":"text/javascript"}}],"_postman_id":"7d424a7a-8e91-4248-b0b3-df3e9d937707","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"[\r\n  {\r\n    \"isSelected\": {{isSelected}},\r\n    \"id\": {{id}},\r\n    \"name\": \"{{name}}\",\r\n    \"duns\": \"1708\",\r\n    \"countryName\": \"United States of America\",\r\n    \"isActive\": {{isActive}},\r\n    \"createdBy\": null,\r\n    \"createdOn\": \"2020-02-17T13:09:08.363Z\",\r\n    \"updatedBy\": 0,\r\n    \"updatedOn\": \"2020-02-17T13:09:08.363Z\"\r\n  }\r\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/InsuredParties/partyCarriers/{{INS_IP}}","host":["{{baseURI}}"],"path":["api","InsuredParties","partyCarriers","{{INS_IP}}"]}},"response":[]},{"name":"GET_InsuranceCaarrier/ Subsidiaries By ID","event":[{"listen":"test","script":{"id":"769c72c4-eecb-456e-af52-ce7a7c909e32","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"e58a978a-67bc-4862-86c7-e9ccd3364101","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiaries/{{INS_IC}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiaries","{{INS_IC}}"]}},"response":[]},{"name":"Version","event":[{"listen":"test","script":{"id":"f5666e5b-b303-4254-bd29-b0d7f418cfef","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"40c61197-6b26-42e6-a0de-4d1a2ba3dfd7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiaries/{{INS_IC}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiaries","{{INS_IC}}"]}},"response":[]}],"_postman_id":"60c2cc14-34d4-4cd9-87b1-2321d263eb16","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenMO}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"c75f780a-8e04-4885-8535-b14a2c98e422","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"5597a830-6448-45a7-ad3b-6eeb12cdd220","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true}],"_postman_id":"3e1d328c-fce5-4fcf-a1c0-b93b0747c756","event":[{"listen":"prerequest","script":{"id":"098b5f91-3ed3-4a14-97b9-328044663e38","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"f70b0a4e-2a9f-42ec-a726-227532a6473f","type":"text/javascript","exec":[""]}}]},{"name":"Flow","item":[{"name":"Flow: Pass Quotes","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"08c3f243-2874-4a72-885d-de385e15205a","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3754fd4b-c7ed-4c7a-93b6-420c1d8861b9","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"2528350c-d1fd-4b88-ba24-6555d35ceb16","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"8e6c8a94-3fd3-429a-9797-f3f1a56c690a","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"66e4426a-53ce-4651-b30c-bfbeecf85fbc","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"a27e41dd-c5fc-482d-a4df-2241bb97b14f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Passed_By_IP","event":[{"listen":"test","script":{"id":"f9954cf6-bb5a-4a8e-8a94-407f4de02275","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ec5e357c-780e-4af1-8cc5-944e1afd1ebd","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"e57a9b37-ea1a-4efb-96d8-b880d58348d2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/passedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","passedbyip"]}},"response":[]}],"_postman_id":"89a1f75f-820a-4f21-a1eb-f5b7a380d5f6","event":[{"listen":"prerequest","script":{"id":"627d1256-92c5-46a2-8ac3-718241d6e45f","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"2cc6b200-6034-46c5-833a-1408d9b19b35","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Flow: Flag As Pending Review","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"06028325-1da0-4b84-abcf-394409fff2dd","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a35e7eee-53b7-4017-8c94-e6ae4ef717cc","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"a2cd19c2-84b1-4052-ae7a-eb7ca893c25b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Flag as Pending Review","event":[{"listen":"prerequest","script":{"id":"decb6f74-8c4b-4a74-966c-94285402bb50","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));"," ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}"," ","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;"," ","            }","        }","","    }","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"4e9ee781-117a-4952-8753-46b9d4348067","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"89ad01d8-b62f-4ce1-af44-54ef82a91bfb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \n    \"quoteTypeId\": {{quoteTypeId}} ,\n\t\"premiumBasisTypeId\": {{premiumBasisTypeId}},\n\t\"quotedLimit\": {{maxCreditLimit}},\n\t\"indemnity\": {{indemnity}},\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\t\"attachmentPeriod\": {{attachmentPeriod}},\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n    \"premiumRateByIc\": {{premiumRateByIc}},\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\n\n    \"isCancellableByIc\": true,\n    \"minPremiumAmount\": 1000,\n    \"minDepositAmount\": null,\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\n    \"icPaper\": \"insurance paper\",\n    \"icQuoteId\": null,\n    \"commissionRate\":{{commission}},\n    \"daysToQuoteExpiration\": 30,\n    \"deductibleByIc\": {{deductibleByIp}},\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\n    \"carrierRatingByAmBestId\": null,\n    \"carrierRatingBySpId\": null,\n    \"carrierRatingByOther\": null,\n    \"havingSubjectivity\": true,\n    \"estimatedPremium\": {{estimatedPremium}},\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n    \"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/pendingreview","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","pendingreview"]}},"response":[]}],"_postman_id":"a439003f-2634-4742-a195-97770e160847","_postman_isSubFolder":true},{"name":"Flow: Modify RFQ","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"857a11b7-48d1-4488-a71f-338d321182af","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"5bb5658e-7459-43d5-bc1d-3a450427be7d","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"8ee988c0-e394-4033-a1a9-a2b5c78ea1db","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Flag as Pending Review","event":[{"listen":"prerequest","script":{"id":"9632e0ee-c4d0-43fb-ad2f-f2ecb5de1c6b","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"c47519b6-3f60-43f3-9f3a-820435c17e76","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"5d197da4-70cf-449f-aadf-aed3dd351ebe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n   \n    \"quoteTypeId\": {{quoteTypeId}},\n\t\"premiumBasisTypeId\": {{premiumBasisTypeId}},\n\t\"quotedLimit\": {{maxCreditLimit}},\n\t\"indemnity\": {{indemnity}},\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\t\"attachmentPeriod\": {{attachmentPeriod}},\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n    \"premiumRateByIc\": {{premiumRateByIc}},\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\n\n    \"isCancellableByIc\": true,\n    \"minPremiumAmount\": 1000,\n    \"minDepositAmount\": null,\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\n    \"icPaper\": \"insurance paper\",\n    \"icQuoteId\": null,\n    \"commissionRate\":{{commission}},\n    \"daysToQuoteExpiration\": 30,\n    \"deductibleByIc\": {{deductibleByIp}},\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\n    \"carrierRatingByAmBestId\": null,\n    \"carrierRatingBySpId\": null,\n    \"carrierRatingByOther\": null,\n    \"havingSubjectivity\": true,\n    \"estimatedPremium\": {{estimatedPremium}},\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n    \"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/pendingreview","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","pendingreview"]}},"response":[]},{"name":"Modify RFQ","event":[{"listen":"test","script":{"id":"79710f68-6cb3-4cb2-9cef-e273ffae8572","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"5b4c6375-34f8-4db9-b794-f6ad43019ed4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));","   pm.variables.set(\"deductibleByIc\", _.random(100,100000));"],"type":"text/javascript"}}],"_postman_id":"415a48fb-7297-49fd-b91b-461c5f30ce6a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\n\"premiumBasisTypeId\":{{premiumBasisTypeId}}, \n\"quotedLimit\": {{maxCreditLimit}}, \n\"attachmentPeriod\": {{attachmentPeriod}},\n\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n\"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n\"carrierRatingByOther\": null,\n\"commissionRate\": {{commission}},\n\"deductibleByIc\": {{deductibleByIc}},\n\n\"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n\"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}},\n\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\"estimatedPremium\": {{estimatedPremium}},\n\"havingSubjectivity\": true,\n\"icQuoteId\": null,\n\"indemnity\": {{indemnity}},\n\"isCancellableByIc\": true,\n\n\"minDepositAmount\": null,\n\"minPremiumAmount\": null,\n\n\"premiumFundingDeadline\": null,\n\n\n\"quoteTypeId\": 2,\n\"unutilizedRateAnnum\": null,\n\"utilizedRateAnnum\": null,\n\"currencyCode\":\"USD\",\n\"estimatedWeightedPaymentTerm\":1\n\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/modifyrfq","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","modifyrfq"]}},"response":[]}],"_postman_id":"184ef0ab-c67f-4e68-a68c-648cca3ba69e","_postman_isSubFolder":true},{"name":"Flow: Decline Quote (Last Look)","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"38ee9248-057f-4717-95b1-83689da1ed61","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"ad9947e4-9080-4f24-8fe2-8cf9a98b7eb9","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"4b022460-025c-45d9-9bc4-a7ef8c4dcc7c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"ebf54e0c-7dda-4970-b8d4-a20c09d03838","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","            }","        }","","    }","","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"fce3bd09-ac01-4d8d-ae80-5f97c50a7c05","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"c7832da1-9e1c-4ea8-bb87-cdc79e905ab6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"60435442-2ac4-4565-901a-b5e175b3f677","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"7166b674-b9fd-41a7-bc0c-fefd0e4398d2","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"b9a34425-1f74-479b-9ab2-8c7caac530bd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:19:44.975Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Decline_Quotes","event":[{"listen":"prerequest","script":{"id":"fa5fa3cf-67bf-4537-b204-badcd6ca78aa","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a26655b6-c3a1-4c69-ac79-1c947e1bd4d6","exec":[" pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"facf7bcd-9276-4893-9e73-220aed30b322","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{  \r\n  \"quoteDeclineTypeId\": 2,\r\n  \"decliningReason\": \"Buyer Risk\",\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/decline","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","decline"]}},"response":[]}],"_postman_id":"6c7a5145-a583-41e7-9176-2f4a0a6dd472","_postman_isSubFolder":true},{"name":"Flow: Withdraw Quote","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"30d3c0b8-6e2b-4eca-9144-841d7646f22d","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c5b40f7f-1e69-47fd-bc8e-bb15ab9f6231","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"1a0f7200-a9b8-4521-a2df-2934ff2073ba","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"15f863ee-f617-4d50-a6b1-29d1ba708002","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"f849f422-ab86-4d30-bf15-a73b1a609a73","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"37ddcb5b-460a-4b52-90ad-b8f04078ea12","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"51c88732-af43-434c-a04a-20633dda9d07","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"2a72371f-5334-4dd3-b11d-cb24ce0614f9","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"4e8f89ea-fd49-41b9-9b09-6c885c2d7f1f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:24:18.775Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/ {{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes"," {{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Withdrawn","event":[{"listen":"test","script":{"id":"4cff8795-38bb-4093-b6cb-a64532bb6752","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"f7dffee7-790a-4aaa-98ed-1e00e7b5a961","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"fa76b5cd-dc69-40a7-9d33-20c830042c30","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/withdrawn","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","withdrawn"]}},"response":[]}],"_postman_id":"5da4e0e7-465a-4d05-812d-29b5291462d5","_postman_isSubFolder":true},{"name":"Flow: Accepted By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"d25679c7-9591-401c-961f-2d0412efe7f2","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"02e83290-558c-4e2d-ab70-4112f19172aa","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"a09b41d7-7985-47c6-9d6d-b9e06525d2ac","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"15d0915c-b1f9-40b8-a26d-daad267828c7","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);"," ","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","            }","        }","    }","","});","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"91e30b63-9837-4dff-a64e-71e7b7864d0c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"98d6b52d-5b3d-4fb1-8631-36b590dc7f88","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"8324ee81-a662-4675-86ed-6f39adf4b43f","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"7504b9a7-9c61-42c7-8705-e8b9c2b3f7ec","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"c6558568-039f-43a1-9f0a-eeaf006dc80b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:29:18.390Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]}],"_postman_id":"78a9cb5b-4258-4d90-9971-6c356c8738d1","_postman_isSubFolder":true},{"name":"Flow: Accepted By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"91aca238-f30c-46a8-9093-127757ebaa27","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"10df6b5d-d347-4368-9ce1-029256b2a3c8","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"160347e3-ce37-4370-b63b-9df0ebc9e3d9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"29409760-8aa5-45c0-8cea-674abd863385","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                ","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","            }","        }","    }","","});"," "],"type":"text/javascript"}},{"listen":"test","script":{"id":"024583dd-3166-4e99-a0d0-c7bd09efa540","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"887aeed1-783a-4edb-87c8-89758c4f67a8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"f4f547ca-9a3d-44d3-ab80-3ce4bc86aec6","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"15ffdfb4-d30a-49f3-8458-756e330d49e6","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"0752ee20-88a9-4197-9a58-0610fc6923fb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n\n{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:29:18.390Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"16676119-3c1a-4b69-a7d1-a9b22ccf59db","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"ef7735ac-3e3a-43ce-afe3-7d1bbdaf90f4","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"7007a2e4-caea-4fee-85af-8b8cb6b84dcd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]}],"_postman_id":"fd9086b0-1be4-4b9b-b0b8-263947dea78f","_postman_isSubFolder":true},{"name":"Flow:End Transaction","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"f98e4506-c6b6-4636-b619-55428fc42c50","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"6d7a0119-230b-4148-9c27-b7543bd0ab54","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"14a7f5b3-2901-4c9f-a33f-dcd6fe7a7d63","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"End Transaction","event":[{"listen":"test","script":{"id":"7aa5d143-20a7-41ad-ae7c-bbad8a5163b5","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"11817bd6-f129-4502-89ef-bc51514bee9b","exec":[""],"type":"text/javascript"}}],"_postman_id":"5d44b8a2-37b2-405a-bb37-2279d8f8f20b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{TRANSID}}/endtransaction","host":["{{baseURI}}"],"path":["api","Quotes","{{TRANSID}}","endtransaction"]}},"response":[]}],"_postman_id":"d59abb17-2746-4abe-afc5-f51c87985974","_postman_isSubFolder":true},{"name":"Flow: Ammend Request By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"70dbb6c6-9e03-4e18-84de-6433e365700f","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"cc529bba-ae2b-457e-8696-2badf0644b4f","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"ceee0436-5fef-4bfa-b445-dc21459744c4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"7d7b1902-060d-42d8-be5b-2a28693c404d","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","             //pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisTypeId;","","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"2fcf6c2d-0c33-4235-a991-ce2d638cc5c2","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"a631fad4-a916-469b-ad50-5c85ab27f9de","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"3ae3bf4b-4714-4ebf-a689-d02a6b3e53a2","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"3dadf098-71ca-4aa9-a5aa-99d5806da02e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"dade0a4a-98a9-4b89-a0af-a16382817704","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:40:37.830Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"4d39eeab-c24c-43d0-902a-49cb1c3981ae","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"58339ed9-2f4b-405d-8b92-77055eb301b7","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"e18c5719-a772-4694-af2e-fc2415db248f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IP","event":[{"listen":"prerequest","script":{"id":"d06d41c8-06b9-456d-a240-830ff146d960","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"quoteTypeId\",_.random(1,2));","    pm.variables.set(\"premiumRateByIc\",_.random(200,4000));    ","    pm.variables.set(\"minPremiumAmount\",_.random(1000,5000));       ","    pm.variables.set(\"minDepositAmount\",_.random(1000,5000));        ","    pm.variables.set(\"daysToQuoteExpiration\",_.random(1,30));       ","    pm.variables.set(\"deductableByIc\",_.random(500,1000));        ","    pm.variables.set(\"estimatedPremium\",_.random(1000,30000));","","   ","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"93ba0924-c6e0-458d-a3a0-0ffb76cd3b03","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"26498d65-ea2a-48aa-99de-8c2378efe70a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"quotedLimit\": {{maxCreditLimit}},\r\n  \"premiumRateByIc\": {{premiumRateByIc}},\r\n  \"utilizedRateAnnum\": 0,\r\n  \"unutilizedRateAnnum\": 0,\r\n  \"isCancellableByIc\": {{isCancellable}},\r\n  \"minPremiumAmount\": {{minPremiumAmount}},\r\n  \"minDepositAmount\": {{minDepositAmount}},\r\n  \"premiumFundingDeadline\": \"2019-11-12T23:14:44.099Z\",\r\n  \"icPaper\": \"IcPaper\",\r\n  \"icQuoteId\": \"IcQuoteId\",\r\n  \"commissionRate\": 2.45,\r\n  \"daysToQuoteExpiration\": {{daysToQuoteExpiration}},\r\n  \"estimatedMaxPaymentTerm\":{{estimatedMaxPaymentTerm}},\r\n  \"deductableByIc\": {{deductableByIc}},\r\n  \"decuctablePercentageByIc\": 3,\r\n  \"currencyCode\":\"USD\",\r\n  \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\r\n  \"carrierRatingByAmBestId\": 25,\r\n  \"carrierRatingBySpId\": 7,\r\n  \"carrierRatingByOther\": \"carrierRatingByOther\",\r\n  \"havingSubjectivity\": true,\r\n  \"subjectivity\": \"reason subjectivity\",\r\n  \"estimatedPremium\": {{estimatedPremium}},\r\n  \"estimatedBrokerCommission\": 1332.13,\r\n  \"estimatedCoBrokerCommission\": 1332.13,\r\n  \"attachmentPeriod\":1,\r\n  \"premiumBasisTypeId\":1,\r\n  \"attachmentPeriodTypeId\":3,\r\n  \"attachmentPeriodStartDate\":\"2019-11-12\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/amendmentrequestbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","amendmentrequestbyip"]}},"response":[]}],"_postman_id":"33660e5f-4658-407d-8b8b-7ffb5cde88a8","_postman_isSubFolder":true},{"name":"Flow: End Ammend Request By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"44032be5-8cfb-4d64-a920-5065cd51d3a4","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c2760e81-0366-40d0-9be5-504bb01f644d","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"6f053ff6-aea6-4b53-b149-dfeec42cac39","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"a87eb973-cd33-475a-95cd-5e8d77aed9ab","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","            }","        }","","    }","","});","","","","","","","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"0f0324dd-1bbb-42f3-a521-271b6e3ef57e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"94c1f732-2a7d-445c-8808-2d6a69bdabae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"150b4520-98d9-4900-8018-938543380d33","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"e528c6d7-11a1-4788-8967-2f7a793d0f3e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"7652aaf5-b1d4-4995-af45-13a903eb26e1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"3625a038-4173-4a0a-90a6-c0e9d695b54a","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"acad1573-8ae8-46de-a4da-91a642ce565c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"76dfa0e9-6973-4fe3-8013-a4d0e6d80996","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IP","event":[{"listen":"prerequest","script":{"id":"b687ff04-4d77-49d0-bc46-c4d28706003c","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"quoteTypeId\",_.random(1,2));","    pm.variables.set(\"premiumRateByIc\",_.random(200,4000));    ","    pm.variables.set(\"minPremiumAmount\",_.random(1000,5000));       ","    pm.variables.set(\"minDepositAmount\",_.random(1000,5000));        ","    pm.variables.set(\"daysToQuoteExpiration\",_.random(1,30));       ","    pm.variables.set(\"deductableByIc\",_.random(500,1000));        ","    pm.variables.set(\"estimatedPremium\",_.random(1000,30000));","","   ","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"c628255b-5104-484e-8c29-fa984929b744","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"1ee837ef-261a-4712-8753-f02f25d871e1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"quotedLimit\": {{maxCreditLimit}},\r\n  \"premiumRateByIc\": {{premiumRateByIc}},\r\n  \"utilizedRateAnnum\": 0,\r\n  \"unutilizedRateAnnum\": 0,\r\n  \"isCancellableByIc\": {{isCancellable}},\r\n  \"minPremiumAmount\": {{minPremiumAmount}},\r\n  \"minDepositAmount\": {{minDepositAmount}},\r\n  \"premiumFundingDeadline\": \"2019-11-12T23:14:44.099Z\",\r\n  \"icPaper\": \"IcPaper\",\r\n  \"icQuoteId\": \"IcQuoteId\",\r\n  \"commissionRate\": 2.45,\r\n  \"daysToQuoteExpiration\": {{daysToQuoteExpiration}},\r\n  \"estimatedMaxPaymentTerm\":{{estimatedMaxPaymentTerm}},\r\n  \"deductableByIc\": {{deductableByIc}},\r\n  \"decuctablePercentageByIc\": 3,\r\n  \"currencyCode\":\"USD\",\r\n  \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\r\n  \"carrierRatingByAmBestId\": 25,\r\n  \"carrierRatingBySpId\": 7,\r\n  \"carrierRatingByOther\": \"carrierRatingByOther\",\r\n  \"havingSubjectivity\": true,\r\n  \"subjectivity\": \"reason subjectivity\",\r\n  \"estimatedPremium\": {{estimatedPremium}},\r\n  \"estimatedBrokerCommission\": 1332.13,\r\n  \"estimatedCoBrokerCommission\": 1332.13,\r\n  \"attachmentPeriod\":1,\r\n  \"premiumBasisTypeId\":1,\r\n  \"attachmentPeriodTypeId\":3,\r\n  \"attachmentPeriodStartDate\":\"2019-11-12\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/amendmentrequestbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","amendmentrequestbyip"]}},"response":[]},{"name":"End Ammendment By IP","event":[{"listen":"prerequest","script":{"id":"9b3c9849-1a29-4c35-8478-2ea49295f1e0","exec":["setTimeout(function() {}, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function(err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                     }","        }","    }","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"dcc2ae22-0c37-46be-a8fd-f6126958dc21","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"76fccc1a-2ab3-4353-a360-1f45a323f5ce","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/{{QUOTE}}/endamendmentbyip","host":["{{baseURI}}"],"path":["api","quotes","{{QUOTE}}","endamendmentbyip"]}},"response":[]}],"_postman_id":"f78b2ec2-5579-47d1-92c0-e9f42a06d444","_postman_isSubFolder":true},{"name":"Flow: Coverage Cancel By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"dfaec498-99da-45c0-9c5f-306fb8bf2387","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"b16520c9-b2c1-4528-8575-f3116516769a","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"7235d459-881a-4764-bd7e-bfc82a9c9bfd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"badebe7f-2f81-4a58-a298-88ef3fb7803d","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});","","","","","","","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"cf1f99ef-a11b-47f3-8911-b52b320b3b6d","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"944fc32b-34c9-458d-9d44-a9dbd3ce11a6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"5d6fb076-4311-46d8-90db-5aaca15603a2","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"740e4b97-9c3a-4e85-9ebc-108107cca313","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"751389ef-3c25-4a74-9aa3-e994cac5b2bf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"a6385228-2205-4e99-a1cf-067bd147f105","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"403016e1-8aee-4691-9139-873203d20185","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"79817a7e-d37d-483a-b22f-2c65c645e021","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Coverage Cancel By IP","event":[{"listen":"prerequest","script":{"id":"a2d58eb4-1fdd-4b17-8b2d-bb2fbb7e60d5","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"f6f7ea0a-6310-4f44-8b90-4e03494e4161","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"b67a5f2a-26ef-46f5-b11c-3d6271ca0e3c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/coveragecancelledbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","coveragecancelledbyip"]}},"response":[]}],"_postman_id":"60f8d5aa-01d2-4195-a9fc-1690559f2c97","_postman_isSubFolder":true},{"name":"Flow: Coverage Cancel By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"dbfaf5b8-ce08-490b-9d49-ef0e11090854","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"786f5c47-766a-4d40-aecf-f7271c88f866","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"54702f12-cd46-49a5-9f87-dafcdeb86c33","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"6118c100-622b-438e-b743-ac6c35fd47f8","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","               // pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","            }","        }","    }","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"baf26de1-9d9d-4e59-8ca1-cae7f6f9d08f","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"233e1046-a555-4cff-87a6-e7923dfb1c19","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\":2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"b8544ba9-0488-4410-91e8-f4ec62a689af","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"31bfd947-9da2-465d-ab1f-a731f4f73492","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"feec21c9-fc45-40b3-90a5-c79f2a915eae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"449f0e2e-92bd-43ee-a43a-5f9c37a660cc","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"3406598e-efb6-4ba4-8d75-62abecb0c9ea","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"0c6f222b-32b9-489a-b7b4-1fbbde5f0ef4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Coverage Cancel By IC","event":[{"listen":"prerequest","script":{"id":"45b6f26f-05b6-46a0-9038-89916073f114","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","     pm.variables.set(\"cancellableActionTypeId\", _.random(1,6));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"a22016ab-9a45-4594-8765-b69202719c6a","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"73a2276b-4ce6-4bec-93de-454e7447e86d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/coveragecancelledbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","coveragecancelledbyip"]}},"response":[]}],"_postman_id":"ebd58e92-7da0-4232-85da-040054621398","_postman_isSubFolder":true},{"name":"Flow: Ammend Coverage By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"f5af4f54-2fdf-46fd-a00b-44d7ce054576","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"f4a8dbfc-ec55-4360-b7d2-d879332901b1","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"bddd6d2d-59d9-4aff-a866-57ba29bdbf98","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"08def23f-2f4d-413f-96ec-153be8da6d50","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"5a5a873b-816d-4768-b72b-244457d399b1","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"200002ea-51dd-463a-8675-7d8ac1daf626","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes Copy","event":[{"listen":"prerequest","script":{"id":"519c80b7-1d3b-470b-a345-91bd36d8629f","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"f75ea5c4-d70e-42e1-bd82-c1d8fd1405b4","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"97ab4988-c854-469c-a612-c258c6dde6de","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC Copy","event":[{"listen":"prerequest","script":{"id":"7161236d-9b04-4be8-bdc4-8445bcfb47a6","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"e3d30779-884e-478f-97f4-fe9dfce58117","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"f1a01fbc-d31e-4477-8448-ec43aeaba7cb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IC","event":[{"listen":"prerequest","script":{"id":"09e33129-a545-449f-8713-4b36f9ac8f35","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                               ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                  // pm.variables.set(\"quoteTypeId\", 2);","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            pm.variables.set(\"cancellableActionTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);////z","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"ed8a5d6f-daa0-465e-9bf2-47e38db8b4ee","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"e57214b7-7f38-48f3-94da-410aa0833a2d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}},\r\n\r\n      \"cancellableActionTypeId\": {{cancellableActionTypeId}}\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/amendcoveragebyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","amendcoveragebyic"]}},"response":[]}],"_postman_id":"1945756f-8fa1-4110-8b7a-89ddd8436fd6","_postman_isSubFolder":true},{"name":"Syndication","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"4c5693cd-e9df-47db-84a6-f918a2037288","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP1\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"1a18385f-bba1-4f81-bb04-e54af19a37e6","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"afe429bf-9561-49f6-95bd-f4eaa881ba4f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP1}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n      {\n        \"carrierId\": {{carrierId1}},\n        \"carrierName\": \"{{InsCarrierName1}}\",\n        \"policyId\": \"{{policyId1}}\"\n      },\n      {\n      \"carrierId\": {{carrierId2}},\n      \"carrierName\": \"{{InsCarrierName2}}\",\n\t    \"policyId\": \"{{policyId2}}\"\n      },\n      {\n\t     \"carrierId\": {{carrierId3}},\n        \"carrierName\": \"{{InsCarrierName3}}\",\n\t      \"policyId\": \"{{policyId3}}\"\n      },\n      {\n\t     \"carrierId\": {{carrierId4}},\n      \"carrierName\": \"{{InsCarrierName4}}\",\n\t  \"policyId\": \"{{policyId4}}\"\n      },\n      {\n\t  \"carrierId\": {{carrierId5}},\n      \"carrierName\": \"{{InsCarrierName5}}\",\n\t  \"policyId\": \"{{policyId5}}\"\n      }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"havingSyndicatedLimit\": true,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes By IC1","event":[{"listen":"prerequest","script":{"id":"276917fd-bb5d-4d49-825a-bad586aac7a0","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC1\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote1\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3bed5068-e050-4d0b-9559-defa62046139","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"fae0a950-f330-48c8-8044-f2626a872849","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC1}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC2","event":[{"listen":"prerequest","script":{"id":"13737007-fc55-4f94-9394-8bf5c6212600","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC2\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote2\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3c1ae651-2fb1-48c9-bb4c-60f910cddf04","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"f9e421c8-5962-49eb-ac79-30e5ebbb2fb0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC3","event":[{"listen":"prerequest","script":{"id":"0cbdb15a-e073-4069-9941-baa7f2231bed","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC3\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote3\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"5e2d9fb3-69a5-4712-8f46-743f5af1efbe","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"7f3aa7b8-28ae-47af-9b7e-e6199cea768b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC3}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC4","event":[{"listen":"prerequest","script":{"id":"e67ed8de-73d4-4b4e-a11d-164ef6e299a8","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC4\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote4\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"d79d143f-c5f0-4b59-b34a-aee176a70598","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"7cb350fa-b6da-4f64-82a4-f56718d8d2de","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC4}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC5","event":[{"listen":"prerequest","script":{"id":"3932be0e-1cd5-4119-b8da-6fb43bfc030e","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC5\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote5\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"319fa3da-16f6-4853-8cc9-e573cdbcccdf","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"72493108-1f73-4537-8b4c-415f02cd627e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC5}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Allocated Quotes Accepted By IP","event":[{"listen":"test","script":{"id":"00c24683-db25-404b-a351-1128f33d3a0b","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"5e21b353-0827-45e4-8b49-47c905d4ac90","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"1cf56451-e857-4297-8cb8-85a86999ba3c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP1}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n   \"quoteAllocation\": [\r\n      {\r\n         \"quoteId\": {{ICQuote1}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote2}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote3}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote4}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote5}},\r\n         \"allocationRatio\": 20\r\n      }\r\n   ],\r\n   \"aggregateLimit\": {{maxCreditLimit}},\r\n   \"attachmentPeriodStartDate\": \"{{attachmentPeriodStartDate}}z\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/allocatequotesacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","allocatequotesacceptedbyip"]}},"response":[]},{"name":"Accepted By IC1","event":[{"listen":"prerequest","script":{"id":"0e9d0e2b-080a-4f89-86af-9fbb6afd5ca6","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"664b1b61-b855-40dc-a77d-0030d31df2bc","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"7666ee25-3b6a-4e73-b377-d5015795306d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote1}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote1}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC2","event":[{"listen":"prerequest","script":{"id":"239fad28-c7fd-4019-bf8e-6b46875b1ba2","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"70791a85-481b-4665-ac44-cb33ca6a6acf","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"c826f7be-b2ab-42ee-881f-d2b5a6faa2dc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote2}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote2}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC3","event":[{"listen":"prerequest","script":{"id":"14636ca5-895e-4a58-b823-082c455469a2","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"34538176-1346-4f9c-a626-08d34505294c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"0247ef84-64d5-41a9-9e8e-4e37f17f4910","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote3}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote3}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC4","event":[{"listen":"prerequest","script":{"id":"842ffd13-cbb5-4645-8e5e-a3b357a16933","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"4490a9e9-b788-4c4b-8858-9e33dfff6892","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"3d6c7dbf-eca6-4ca8-82ef-0ba3f090cba1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote4}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote4}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC5","event":[{"listen":"prerequest","script":{"id":"8684e0eb-42c7-4e7d-9534-553d1b058b86","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"55b7bab2-d840-4e99-a352-83ed5d52979f","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"497482e9-ce4b-4da0-af3a-34f1eea10999","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote5}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote5}}","quoteacceptedbyic"]}},"response":[]}],"_postman_id":"34a00c54-1aeb-4597-972e-42376b28640c","event":[{"listen":"prerequest","script":{"id":"90d75286-2a2c-4ad3-bf9e-9012da387ede","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"e35b222c-bedd-4b04-ae5c-e6839da3776b","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Syndication Copy","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"38726fe8-0f8b-4895-8bda-6225b7c3f4ae","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP1\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8a554c33-7ec5-4dc1-8209-7309267d006f","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"a69dbbdf-1358-441d-9975-91e0f03e9054","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP1}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n      {\n        \"carrierId\": {{carrierId1}},\n        \"carrierName\": \"{{InsCarrierName1}}\",\n        \"policyId\": \"{{policyId1}}\"\n      },\n      {\n      \"carrierId\": {{carrierId2}},\n      \"carrierName\": \"{{InsCarrierName2}}\",\n\t    \"policyId\": \"{{policyId2}}\"\n      },\n      {\n\t     \"carrierId\": {{carrierId3}},\n        \"carrierName\": \"{{InsCarrierName3}}\",\n\t      \"policyId\": \"{{policyId3}}\"\n      },\n      {\n\t     \"carrierId\": {{carrierId4}},\n      \"carrierName\": \"{{InsCarrierName4}}\",\n\t  \"policyId\": \"{{policyId4}}\"\n      },\n      {\n\t  \"carrierId\": {{carrierId5}},\n      \"carrierName\": \"{{InsCarrierName5}}\",\n\t  \"policyId\": \"{{policyId5}}\"\n      }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"havingSyndicatedLimit\": true,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes By IC1","event":[{"listen":"prerequest","script":{"id":"3b0e46b0-0210-4ee3-98d4-57410960c539","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC1\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote1\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"5dd25eb9-eb0a-4431-a507-75e5d6db58f2","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"5b4e8495-e1d2-4067-bc7e-e8221356c8f9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC1}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC2","event":[{"listen":"prerequest","script":{"id":"3e6cb2b2-c9df-487c-902b-8cf274f3749f","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC2\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote2\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"232064fe-e2ad-4017-9529-30c89387bc11","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"2bd4b8db-13d0-45a9-993a-29b5d09f1830","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC3","event":[{"listen":"prerequest","script":{"id":"e2e26e14-8514-4593-b990-5679ff07ad06","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC3\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote3\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"f90b69b1-86ac-4b40-8064-711d1ba1ce99","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"534d5b83-48c4-4acb-bf72-d7671880a19c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC3}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC4","event":[{"listen":"prerequest","script":{"id":"c0c96fa0-cbbe-4424-be06-f3106b04e1d0","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC4\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote4\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"e6b3e39d-9fbf-4376-9788-c5d0394ce2d7","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"d8cb2eef-8e24-410c-a5fa-4fc5ddb9b96a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC4}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC5","event":[{"listen":"prerequest","script":{"id":"8780ed62-1937-4848-b712-80c99ea6eb2c","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC5\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote5\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"058d506a-876b-4f32-9ec0-2ccc40ca82eb","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"95829b2f-79fc-49c7-8b24-1c642df6a020","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC5}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]}],"_postman_id":"a5489173-9e57-4c65-a324-c6b1556dda2c","event":[{"listen":"prerequest","script":{"id":"cc3e491f-4cd6-49a9-8b39-f6a4f85f888d","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"853377c2-2627-443e-aed7-077de7057af9","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true}],"_postman_id":"cbb0a6b7-06cd-4ee3-a13a-de31580e888a","event":[{"listen":"prerequest","script":{"id":"b9e58e7c-28e8-45ec-aac9-0d81eada589d","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"ce7e3305-3d20-437b-8449-8b7b695895a4","type":"text/javascript","exec":[""]}}]},{"name":"Flow: Ammend Syndication","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"2a503289-b2f3-4630-b484-77818d624fb8","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP1\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"66e0253a-8d06-4615-b013-028a1afd3001","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"f2498989-319b-4520-aac1-e64a1821f191","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP1}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n      {\n        \"carrierId\": {{carrierId1}},\n        \"carrierName\": \"{{InsCarrierName1}}\",\n        \"policyId\": \"{{policyId1}}\"\n      },\n      {\n      \"carrierId\": {{carrierId2}},\n      \"carrierName\": \"{{InsCarrierName2}}\",\n\t    \"policyId\": \"{{policyId2}}\"\n      },\n      {\n\t     \"carrierId\": {{carrierId3}},\n        \"carrierName\": \"{{InsCarrierName3}}\",\n\t      \"policyId\": \"{{policyId3}}\"\n      },\n      {\n\t     \"carrierId\": {{carrierId4}},\n      \"carrierName\": \"{{InsCarrierName4}}\",\n\t  \"policyId\": \"{{policyId4}}\"\n      },\n      {\n\t  \"carrierId\": {{carrierId5}},\n      \"carrierName\": \"{{InsCarrierName5}}\",\n\t  \"policyId\": \"{{policyId5}}\"\n      }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"havingSyndicatedLimit\": true,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes By IC1","event":[{"listen":"prerequest","script":{"id":"3e056ade-fecd-42e0-83ad-24181f2b4bdf","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC1\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote1\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"54bddd71-63de-4da4-a997-d4d70a7d5cf3","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"d077eb93-1ddf-45db-be30-eb1b5e324d23","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC1}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC2","event":[{"listen":"prerequest","script":{"id":"fefde2e1-528a-4321-8f2f-315899519a7d","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC2\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote2\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"de0a765f-1d54-4fd8-af88-4e80c87bd085","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"81b0beb7-7253-4d3f-aa01-cc1ed09c8e7e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC3","event":[{"listen":"prerequest","script":{"id":"7d6244ee-f9c8-4147-8b73-d977f014dec4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC3\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote3\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"5ca6245d-3330-4cd1-9dd0-a8e244cfec67","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"fd1b8cca-27f3-4bec-8000-007dce898faa","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC3}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC4","event":[{"listen":"prerequest","script":{"id":"279b7cac-fd23-4712-8cfd-13ebe6799cec","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC4\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote4\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"ee251103-af99-485b-8286-30670f0481be","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"f748df44-dafa-48c1-850d-0ee7aa091eb2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC4}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Submit_Quotes By IC5","event":[{"listen":"prerequest","script":{"id":"03cde896-0ff5-405b-a276-13721a513b2b","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIC5\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 pm.variables.set(\"ICQuote5\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"09d7ff97-6254-4098-a5ac-61a9271abfda","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"8c67a8da-9e92-46b9-9489-a913ace98c7c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC5}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Allocated Quotes Accepted By IP","event":[{"listen":"test","script":{"id":"02827ebd-77ad-4024-9a23-7b496117da0b","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"2315a9d0-129e-4ce0-8495-7f04df279485","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"d2adb74f-fcc0-40c8-bc10-6b30b017da44","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP1}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n   \"quoteAllocation\": [\r\n      {\r\n         \"quoteId\": {{ICQuote1}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote2}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote3}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote4}},\r\n         \"allocationRatio\": 20\r\n      },\r\n      {\r\n         \"quoteId\": {{ICQuote5}},\r\n         \"allocationRatio\": 20\r\n      }\r\n   ],\r\n   \"aggregateLimit\": {{maxCreditLimit}},\r\n   \"attachmentPeriodStartDate\": \"{{attachmentPeriodStartDate}}z\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/allocatequotesacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","allocatequotesacceptedbyip"]}},"response":[]},{"name":"Accepted By IC1","event":[{"listen":"prerequest","script":{"id":"c13d5a9e-7e52-44b6-b24a-44e698b3538e","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"2ba08d38-d92b-4616-9fa1-47ac3f8dfadb","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"0d746e37-db80-471d-b664-6d4d6cb7428c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote1}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote1}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC2","event":[{"listen":"prerequest","script":{"id":"c51db35d-c286-4dea-966f-dea05b19a159","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b911583c-eda8-4b79-965a-963cbef07f2d","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"c42a16df-3878-4036-8766-2589c0069ccf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote2}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote2}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC3","event":[{"listen":"prerequest","script":{"id":"31f17781-39b9-413f-9b9b-3296b6c35a40","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"e364984a-4093-4f21-a789-243f2d04ed7f","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"3a1e7ec6-5b92-49d2-a9bf-cb575b4265c5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote3}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote3}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC4","event":[{"listen":"prerequest","script":{"id":"8ee68cd0-21ee-425f-aac0-8711cc9966b8","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"dc2e6c97-fa89-4ba1-9fef-368e421fcca3","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"2d4a8371-e221-4ba5-bd3e-aa69419aa8ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote4}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote4}}","quoteacceptedbyic"]}},"response":[]},{"name":"Accepted By IC5","event":[{"listen":"prerequest","script":{"id":"4dee7935-66a2-413d-89e7-c06a44f19a63","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"005376e1-0020-4f03-8f0f-9efdf881dd9d","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"797d0df5-a475-4c51-bf52-f3c2d9f3c9de","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{ICQuote5}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{ICQuote5}}","quoteacceptedbyic"]}},"response":[]},{"name":"Allocated Amendment Request By IP","event":[{"listen":"prerequest","script":{"id":"507b600a-803d-491f-9a3a-59d8f80dbeb9","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));\r","\r","pm.variables.set(\"aggregateLimit\", _.random(1000000, 10000000));\r","pm.variables.set(\"indemnity\", _.random(60, 95));\r","pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1, 15));\r","pm.variables.set(\"attachmentPeriod\", _.random(1, 15));\r","\r","pm.variables.set(\"CaseNo\", _.random(1, 5));\r","var statusCode = pm.variables.get(\"CaseNo\");\r","switch (statusCode) {\r","    case 1:\r","        pm.variables.set(\"allocationRatio1\", 10);\r","        pm.variables.set(\"allocationRatio2\", 20);\r","        pm.variables.set(\"allocationRatio3\", 30);\r","        pm.variables.set(\"allocationRatio4\", 20);\r","        pm.variables.set(\"allocationRatio5\", 20);\r","        break;\r","    case 2:\r","        pm.variables.set(\"allocationRatio1\", 15);\r","        pm.variables.set(\"allocationRatio2\", 25);\r","        pm.variables.set(\"allocationRatio3\", 10);\r","        pm.variables.set(\"allocationRatio4\", 23);\r","        pm.variables.set(\"allocationRatio5\", 27);\r","        break;\r","    case 3:\r","        pm.variables.set(\"allocationRatio1\", 12);\r","        pm.variables.set(\"allocationRatio2\", 18);\r","        pm.variables.set(\"allocationRatio3\", 22);\r","        pm.variables.set(\"allocationRatio4\", 28);\r","        pm.variables.set(\"allocationRatio5\", 20);\r","        break;\r","    case 4:\r","        pm.variables.set(\"allocationRatio1\", 55);\r","        pm.variables.set(\"allocationRatio2\", 5);\r","        pm.variables.set(\"allocationRatio3\", 11);\r","        pm.variables.set(\"allocationRatio4\", 14);\r","        pm.variables.set(\"allocationRatio5\", 15);\r","        break;\r","    case 5:\r","        pm.variables.set(\"allocationRatio1\", 34);\r","        pm.variables.set(\"allocationRatio2\", 17);\r","        pm.variables.set(\"allocationRatio3\", 26);\r","        pm.variables.set(\"allocationRatio4\", 7);\r","        pm.variables.set(\"allocationRatio5\", 16);\r","        break;\r","}\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"9b9694dd-34fd-44b6-a7d1-45ad80f26ca5","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"d296dd2b-ec5f-4958-8bbe-a5987e453b50","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP1}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"quoteAllocation\": [\n        {\n            \"quoteId\": {{ICQuote1}},\n            \"allocationRatio\": {{allocationRatio1}}\n        },\n        {\n            \"quoteId\": {{ICQuote2}},\n            \"allocationRatio\": {{allocationRatio2}}\n        },\n        {\n            \"quoteId\": {{ICQuote3}},\n            \"allocationRatio\": {{allocationRatio3}}\n        },\n        {\n            \"quoteId\": {{ICQuote4}},\n            \"allocationRatio\": {{allocationRatio4}}\n        },\n        {\n            \"quoteId\": {{ICQuote5}},\n            \"allocationRatio\": {{allocationRatio5}}\n        }\n    ],\n    \"aggregateLimit\": {{aggregateLimit}},\n    \"premiumBasisTypeId\": 1,\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": null,\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": 1,\n    \"attachmentPeriodStartDate\": null,\n    \"currencyCode\": \"USD\",\n    \"premiumRateByIp\": null,\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"additionalInfo\": null\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/allocateamendmentrequestbyip","host":["{{baseURI}}"],"path":["api","Quotes","allocateamendmentrequestbyip"]}},"response":[]}],"_postman_id":"709a22ff-4cbe-4cad-bcbd-ad9a31dd80d3","event":[{"listen":"prerequest","script":{"id":"8cafe0d2-062e-4040-807c-b3e32dbedcdd","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"5bba47c6-420a-4451-8c2e-213b13a1fedb","type":"text/javascript","exec":[""]}}]}],"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"5423d2e6-d202-451d-80b4-4962e89baa8f","type":"text/javascript","exec":["//IP_User access token","let userIP = pm.environment.get(\"User_IP\");","let userIC = pm.environment.get(\"User_IC\");","","let userIP1 = pm.environment.get(\"User_IP1\");","let userIC1 = pm.environment.get(\"User_IC1\");","let userIC2 = pm.environment.get(\"User_IC2\");","let userIC3 = pm.environment.get(\"User_IC3\");","let userIC4 = pm.environment.get(\"User_IC4\");","let userIC5 = pm.environment.get(\"User_IC5\");","","let userADMIN = pm.environment.get(\"User_ADMIN\");","let userMO = pm.environment.get(\"User_MO\");","let password1 = pm.environment.get(\"Password\")","","","","let jwt = pm.environment.get('accessTokenIP');","let jwt_decode=null;","if (jwt.length > 0) {"," let jwt_payload_base64 = jwt.split('.')[1];"," jwt_decode = JSON.parse(atob(jwt_payload_base64));","}","if ((jwt.length === 0) || (Date.now()/1000 >= jwt_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIP },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIP', accessToken);"," });","}","","let jwt1 = pm.environment.get('accessTokenIC');","let jwt1_decode=null;","if (jwt1.length > 0) {","  let jwt1_payload_base64 = jwt1.split('.')[1];","  jwt1_decode = JSON.parse(atob(jwt1_payload_base64));","}","if ((jwt1.length === 0) || (Date.now()/1000 >= jwt1_decode['exp'])) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userIC },","              { key: 'password', value: password1 },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenIC', accessToken);","  });","}","","","","","let jwt2 = pm.environment.get('accessTokenADMIN');","let jwt2_decode=null;","if (jwt2.length > 0) {","  let jwt2_payload_base64 = jwt2.split('.')[1];","  jwt2_decode = JSON.parse(atob(jwt2_payload_base64));","}","if ((jwt2.length === 0) || (Date.now()/1000 >= jwt2_decode['exp']) || !jwt2) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userADMIN },","              { key: 'password', value: password1 },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenADMIN', accessToken);","  });","}","","","let jwt3 = pm.environment.get('accessTokenMO');","let jwt3_decode=null;","if (jwt3.length > 0) {","  let jwt3_payload_base64 = jwt3.split('.')[1];","  jwt3_decode = JSON.parse(atob(jwt3_payload_base64));","}","if ((jwt3.length === 0) || (Date.now()/1000 >= jwt3_decode['exp']) || !jwt3) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userMO },","              { key: 'password', value: password1 },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenMO', accessToken);","  });","}","","let jwt4 = pm.environment.get('accessTokenIP1');","let jwt4_decode=null;","if (jwt4.length > 0) {"," let jwt4_payload_base64 = jwt4.split('.')[1];"," jwt4_decode = JSON.parse(atob(jwt4_payload_base64));","}","if ((jwt4.length === 0) || (Date.now()/1000 >= jwt4_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIP1 },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIP1', accessToken);"," });","}","","","let jwt5 = pm.environment.get('accessTokenIC1');","let jwt5_decode=null;","if (jwt5.length > 0) {"," let jwt5_payload_base64 = jwt5.split('.')[1];"," jwt5_decode = JSON.parse(atob(jwt5_payload_base64));","}","if ((jwt5.length === 0) || (Date.now()/1000 >= jwt5_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIC1 },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIC1', accessToken);"," });","}","","let jwt6 = pm.environment.get('accessTokenIC2');","let jwt6_decode=null;","if (jwt6.length > 0) {"," let jwt6_payload_base64 = jwt6.split('.')[1];"," jwt6_decode = JSON.parse(atob(jwt6_payload_base64));","}","if ((jwt6.length === 0) || (Date.now()/1000 >= jwt6_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIC2 },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIC2', accessToken);"," });","}","","","let jwt7 = pm.environment.get('accessTokenIC3');","let jwt7_decode=null;","if (jwt7.length > 0) {"," let jwt7_payload_base64 = jwt7.split('.')[1];"," jwt7_decode = JSON.parse(atob(jwt7_payload_base64));","}","if ((jwt7.length === 0) || (Date.now()/1000 >= jwt7_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIC3 },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIC3', accessToken);"," });","}","","","let jwt8 = pm.environment.get('accessTokenIC4');","let jwt8_decode=null;","if (jwt8.length > 0) {"," let jwt8_payload_base64 = jwt8.split('.')[1];"," jwt8_decode = JSON.parse(atob(jwt8_payload_base64));","}","if ((jwt8.length === 0) || (Date.now()/1000 >= jwt8_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIC4 },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIC4', accessToken);"," });","}","","","let jwt9 = pm.environment.get('accessTokenIC5');","let jwt9_decode=null;","if (jwt9.length > 0) {"," let jwt9_payload_base64 = jwt9.split('.')[1];"," jwt9_decode = JSON.parse(atob(jwt9_payload_base64));","}","if ((jwt9.length === 0) || (Date.now()/1000 >= jwt9_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIC5 },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIC5', accessToken);"," });","}"]}},{"listen":"test","script":{"id":"ecbef21a-4277-4069-a333-fa2640f69b81","type":"text/javascript","exec":[""]}}],"variable":[{"id":"334c8a16-72d6-4aa3-9239-0a23bb29d954","key":"id","value":"8","type":"string"},{"id":"b9cdda4d-7e48-418c-b70d-ef6ddb1f2e6c","key":"duns","value":"000000001","type":"string"},{"id":"d6740f1c-b138-4156-a9bb-1894e47b0911","key":"QuoteId","value":"","type":"string"},{"id":"8e47ff49-4ca4-4cf5-b571-9798d67c5a5c","key":"transId","value":"","type":"string"},{"id":"8fb2f4fd-dfd0-4e4a-9850-acc9fef13214","key":"tId","value":"","type":"string"},{"id":"6ec0795d-07fb-47a1-a71d-d7ee955887a5","key":"IPid","value":"","type":"string"},{"id":"52f861e9-4443-446c-aff7-ac2aae64ae25","key":"duns","value":"","type":"string"},{"id":"59ae2ba1-543b-40f7-8fea-181539feab91","key":"debtorName","value":"","type":"string"},{"id":"c52c44b2-a40d-478c-a5b1-dae7ec1c0da2","key":"countryCode","value":"","type":"string"},{"id":"ebd7b73e-d5cd-4da7-90bd-f5a79069fdb5","key":"maxCreditLimit","value":"","type":"string"},{"id":"40b1def2-7003-41fe-8ed9-4e6331922047","key":"indemnity","value":"","type":"string"},{"id":"6f34476b-aac0-4355-b1bb-268d8237773f","key":"insuranceCarrierId","value":"","type":"string"},{"id":"b38303fb-d523-4ad7-a3d8-1664f13e9b35","key":"ParticipantID","value":"","type":"string"},{"id":"87188569-a533-49bf-afd5-b3f3e66f8a68","key":"val","value":"","type":"string"},{"id":"b9cd92df-ad84-449a-8abc-2b22d63ede7c","key":"QUOTE","value":"","type":"string"}]}}