{"collection":{"info":{"_postman_id":"97ee5752-904e-4149-8d24-7e987be15031","name":"Insurance","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"GET","item":[{"name":"IP_User","item":[{"name":"DnB","item":[{"name":"Get_ByDUNS","event":[{"listen":"prerequest","script":{"id":"8fb9c8d2-f57e-4868-9222-67e5b6ee19c4","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var jsonData = res.json();\r","    //  console.log(\"duns:\"+jsonData[0].duns);\r","    pm.variables.set(\"duns\",jsonData[0].duns);\r","    pm.variables.set(\"Debtor\",jsonData[0]);\r","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"9527c568-3371-41fb-b17a-d82046940674","exec":["\r","pm.variables.get(\"Debtor\")\r","pm.test(\"To check /api/{id} returns DUNS\", function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(pm.variables.get(\"Debtor\")).to.eql(jsonData.results[0]);\r","    //pm.expect(jsonData.duns).to.eql(expectedDUNS);\r","}); \r",""],"type":"text/javascript"}}],"_postman_id":"94222934-6b97-428a-aecc-44021f983619","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/DnB?duns={{duns}}","host":["{{baseURI}}"],"path":["api","DnB"],"query":[{"key":"maxResultCount","value":"25","disabled":true},{"key":"country","value":"United State of America","disabled":true},{"key":"name","value":"Test Account Debtor 8","disabled":true},{"key":"duns","value":"{{duns}}"}]}},"response":[]},{"name":"Get_MaxResultCount","event":[{"listen":"test","script":{"id":"3f49e337-8076-45c5-9130-695bc2850c4c","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","pm.test(\"To check Debtor details is not null (sicCode,addressLine1,city,stateProvince,postalCode,countryCode,country,id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].addressLine1).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].city).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateProvince).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].postalCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].isActive).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","var responseJSONdata = JSON.parse(responseBody);\r","if(pm.response.code == 200 & responseBody !== '')\r","pm.test(\"Verify Max Result Count for dnb should be equal or below \" + pm.variables.get(\"maxResultCount\"), function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(jsonData.results.length).to.be.below(11);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"850940b9-63a7-42d3-8ef5-761eefbf650a","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/Debtors\");","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","      ","}, function (err, res) {","    ","    var jsonData = res.json();","    //  console.log(\"duns:\"+jsonData[0].duns);","    pm.variables.set(\"name\",jsonData[0].name);","    pm.variables.set(\"Debtor\",jsonData[0]);","    pm.variables.set(\"country\",jsonData[0].countryCode);","    pm.variables.set(\"Debtor\",jsonData[0]);","    pm.variables.set(\"maxResultCount\",5);","});","","","//pm.variables.set(\"name\", \"Test Account Debtor 8\");","//pm.variables.set(\"country\", \"US\");",""],"type":"text/javascript"}}],"_postman_id":"713d4bd4-50e1-4314-9e27-07673600ca4d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/dnb?name={{name}}&country={{country}}&maxResultCount={{maxResultCount}}","host":["{{baseURI}}"],"path":["api","dnb"],"query":[{"key":"name","value":"{{name}}"},{"key":"country","value":"{{country}}"},{"key":"maxResultCount","value":"{{maxResultCount}}"}]}},"response":[]}],"_postman_id":"f2a4253c-d723-40cb-9e41-f0e403c89b22","_postman_isSubFolder":true},{"name":"Broker","item":[{"name":"Get_Broker","event":[{"listen":"prerequest","script":{"id":"982b172c-eef7-47de-a075-d53924234ee8","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8a47057e-da5e-459b-945e-378583f6aca0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","}); \r","\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"e1daba99-7ffb-498b-8697-5edf28513628","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers","host":["{{baseURI}}"],"path":["api","Brokers"]}},"response":[]},{"name":"Get_CoBroker","event":[{"listen":"prerequest","script":{"id":"914d321c-bd14-4002-8994-67f5ef376fe3","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3ddd252a-ffb4-4515-a468-6fd8533ac48d","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","}); \r","\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"4cbbe9bd-d986-40ef-a83a-510955a11167","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/cobrokers","host":["{{baseURI}}"],"path":["api","cobrokers"]}},"response":[]},{"name":"Get_Broker Count=100","event":[{"listen":"test","script":{"id":"1f03f084-58f8-4a84-9065-9efa70b9a37c","exec":["var responseJSONdata = JSON.parse(responseBody);","","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}}],"_postman_id":"b4fed579-c103-46d5-90a3-081f49aafe85","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?count=0","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"0"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Broker/MinimumSkip","event":[{"listen":"test","script":{"id":"b1f314fc-973a-4c97-9696-01b3303ca5a1","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"57a03435-47ba-49f2-b657-f94e06abd9e7","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"d8e77fd4-f38c-4f68-95cd-ee87417e0d59","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Broker/MaximumSkip","event":[{"listen":"test","script":{"id":"7a379e4d-660f-45f6-a6b5-a304c9273e3c","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(105);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"52259705-80b4-4094-9f54-582fa921568b","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"8e5fe0b0-e0e4-4026-b642-4d5fc45548f1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Brokers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Brokers"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"a06b15c8-ab09-4276-9eef-77de0e6a17d8","_postman_isSubFolder":true},{"name":"Policy","item":[{"name":"Get_Policy Attachments Types","event":[{"listen":"test","script":{"id":"066bdd42-32d7-4218-ae53-059e6943814e","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Date Financier Purchases Asset' || ","            responseJSONdata[i].name == 'Delivery Date' ||","            responseJSONdata[i].name == 'Invoice Date' ||","            responseJSONdata[i].name == 'Not Applicable' ||","            responseJSONdata[i].name == 'Shipment Date' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4db5e814-02ec-49d7-9f7b-ad532ff65ba5","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"35a67157-30bb-4d06-862e-14dc0e1288a0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policyattachmenttypes","host":["{{baseURI}}"],"path":["api","policyattachmenttypes"]}},"response":[]},{"name":"Get_Policy Deductible Types","event":[{"listen":"test","script":{"id":"fa81c470-fdd5-4449-8711-29fee4022f45","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Yes - % of aggregate losses' || ","            responseJSONdata[i].name == 'Yes - % of each and every loss' ||","            responseJSONdata[i].name == 'Yes - Amount of aggregate losses' || ","            responseJSONdata[i].name == 'Yes - Amount of each and every loss' ||","            responseJSONdata[i].name == 'No'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4a404ecb-55bb-4689-b92e-4ad2a29f7b2a","exec":[""],"type":"text/javascript"}}],"_postman_id":"65ce01e0-0a02-474a-bff7-5763744f7c13","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policydeductibletypes","host":["{{baseURI}}"],"path":["api","policydeductibletypes"]}},"response":[]},{"name":"Get_Policy Liability Limit Types","event":[{"listen":"test","script":{"id":"d409799c-13ca-4aa1-b0b8-0d0a9e239b85","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Buyer' || ","            responseJSONdata[i].name == 'Country' ||","            responseJSONdata[i].name == 'Policy'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7453552c-eba4-4609-ab14-7f5f004dfebb","exec":[""],"type":"text/javascript"}}],"_postman_id":"dcccbc6b-8462-4fde-b405-42e81aa52986","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policyliabilitylimittypes","host":["{{baseURI}}"],"path":["api","policyliabilitylimittypes"]}},"response":[]},{"name":"Get_Policy Premium Types","event":[{"listen":"test","script":{"id":"ec5c1af5-5834-46dc-ac79-08cc0b687042","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Blended Rate by Buyer' || ","            responseJSONdata[i].name == 'Blended Rate By Country' ||","            responseJSONdata[i].name == 'Fixed rate'","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"64a4d0d4-bb59-4f76-bac4-1917cc9189f5","exec":[""],"type":"text/javascript"}}],"_postman_id":"04ce0e24-1df1-4339-8e74-b1248bfa5dad","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policypremiumtypes","host":["{{baseURI}}"],"path":["api","policypremiumtypes"]}},"response":[]},{"name":"Get_Report Period Types","event":[{"listen":"test","script":{"id":"49ac0833-b15a-4800-8be4-9c534e707af6","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Annually' || ","            responseJSONdata[i].name == 'Custom' ||","            responseJSONdata[i].name == 'Monthly' ||","           responseJSONdata[i].name == 'Quarterly' ||","           responseJSONdata[i].name == 'Semi-Annually' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7db3b77e-1f33-4142-9446-96084df44696","exec":[""],"type":"text/javascript"}}],"_postman_id":"9d4ea59f-a837-4b78-bc3d-37f32680a6b7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/reportperiodtypes","host":["{{baseURI}}"],"path":["api","reportperiodtypes"]}},"response":[]},{"name":"Get_Scope of Coverage Types","event":[{"listen":"test","script":{"id":"87811710-15c8-45ee-8fce-726233620cf0","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'All Domestic Sales' || ","            responseJSONdata[i].name == 'All Export Sales' ||","            responseJSONdata[i].name == 'Named Buyers' ||","           responseJSONdata[i].name == 'All Sales' ||","            responseJSONdata[i].name == 'Not Applicable' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8a2962e5-0f78-48db-b6ea-7293ccff51d4","exec":[""],"type":"text/javascript"}}],"_postman_id":"911affde-70aa-4180-82a0-f0995027755c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/scopeofcoveragetypes","host":["{{baseURI}}"],"path":["api","scopeofcoveragetypes"]}},"response":[]},{"name":"Get_Policy Documents Types","event":[{"listen":"test","script":{"id":"a7f70279-0fd8-48b5-8e03-1bf7a1af50c3","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Additional Named Insured Endorsement' || ","            responseJSONdata[i].name == 'Broker Endorsement' ||","            responseJSONdata[i].name == 'Country Schedule' ||","           responseJSONdata[i].name == 'DCL Endorsement'  ||","           responseJSONdata[i].name == 'Ledger DCL Endorsement' || ","            responseJSONdata[i].name == 'Loss Payee Endorsement' ||","            responseJSONdata[i].name == 'LQX Endorsement' ||","           responseJSONdata[i].name == 'Other'  ||","           responseJSONdata[i].name == 'Policy Declarations' ||","            responseJSONdata[i].name == 'Policy Terms and Conditions' ||","           responseJSONdata[i].name == 'Preference Claims Endorsement'  ||","           responseJSONdata[i].name == 'Premium Schedule' || ","            responseJSONdata[i].name == 'Sanctions Endorsement' ||","            responseJSONdata[i].name == 'Seller Schedule'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"03731c3c-e33e-4ff3-ab8e-ddf3a7a5ceee","exec":[""],"type":"text/javascript"}}],"_postman_id":"64f8900c-9c8c-4f9a-9f69-fcaf45d6ae8c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/policydocumenttypes","host":["{{baseURI}}"],"path":["api","policydocumenttypes"]}},"response":[]},{"name":"Get_Currencies","event":[{"listen":"test","script":{"id":"b2a2e10f-1d33-4241-89a0-95965686e4ea","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a75ed3a5-0e34-47b6-a490-17ddad739b9b","exec":[""],"type":"text/javascript"}}],"_postman_id":"4f61b582-e0e2-43b2-8bc7-6945aa727e2f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/currencies","host":["{{baseURI}}"],"path":["api","currencies"]}},"response":[]},{"name":"Get_Governing Laws","event":[{"listen":"test","script":{"id":"8faaf83d-313a-4487-b8b5-1b237a0eabd0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Governing Law is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].code).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].isIncludedInPolicy).to.not.eql(null);\r","  \r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"783368e3-51d6-48d7-a7ce-33f1479afb46","exec":[""],"type":"text/javascript"}}],"_postman_id":"00e24ea3-d0c7-4707-808f-e120c271522a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/governinglaws","host":["{{baseURI}}"],"path":["api","governinglaws"]}},"response":[]},{"name":"Get_Political Risk Type","event":[{"listen":"test","script":{"id":"4b1be42b-1b11-481b-808a-30f6914b18c3","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'N/A'  ||","           responseJSONdata[i].name == 'No' || ","            responseJSONdata[i].name == 'By Country' ||","            responseJSONdata[i].name == 'Yes'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c4507c0f-937b-4112-abea-5f5be80d8fa3","exec":[""],"type":"text/javascript"}}],"_postman_id":"655a68d4-93f8-4b9f-99aa-8150bbfe4e58","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/politicalrisktypes","host":["{{baseURI}}"],"path":["api","politicalrisktypes"]}},"response":[]},{"name":"Get_Peril Coverage Type","event":[{"listen":"test","script":{"id":"5fef5cef-aab9-49e6-ae43-ca8a4fb963de","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'All Risks'  ||","           responseJSONdata[i].name == 'Insolvency' || ","            responseJSONdata[i].name == 'Protracted Default' ||","            responseJSONdata[i].name == 'Political Risks'  ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b701ac91-63b0-48f6-af2f-19974ace7e40","exec":[""],"type":"text/javascript"}}],"_postman_id":"43145e06-5bc0-4b53-b5fd-0e20e62b81e1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/perilcoveragetype","host":["{{baseURI}}"],"path":["api","perilcoveragetype"]}},"response":[]},{"name":"Get_Peril Coverage Period Type","event":[{"listen":"test","script":{"id":"fe9d4ea1-bcac-420a-80f1-826b179a80e0","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Country'  ||","           responseJSONdata[i].name == 'Enter Value' || ","            responseJSONdata[i].name == 'N/A' ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"cb2b3e93-1fcc-451c-9279-0feff6102121","exec":[""],"type":"text/javascript"}}],"_postman_id":"14b565ca-ba6b-4ba2-85d0-b8eb537c3275","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/perilcoverageperiodtype","host":["{{baseURI}}"],"path":["api","perilcoverageperiodtype"]}},"response":[]},{"name":"Get_Max Extension Period Type","event":[{"listen":"test","script":{"id":"6a489c96-a845-4b1f-848a-00484cdaf697","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Country'  ||","           responseJSONdata[i].name == 'Enter Value'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"64f878c6-1b79-47e9-a6d5-fa5b5d11c131","exec":[""],"type":"text/javascript"}}],"_postman_id":"7205ec6d-021f-471d-92ed-a9be64d4cda8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/maxextensionperiodtype","host":["{{baseURI}}"],"path":["api","maxextensionperiodtype"]}},"response":[]},{"name":"Get_ Buyer Value Option Types","event":[{"listen":"test","script":{"id":"19a3f547-adf3-4954-800e-72bf454eb2fc","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'By Buyer'  ||","           responseJSONdata[i].name == 'Enter Value'            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"285c43c7-efd3-4964-ba9c-4b436b39d568","exec":[""],"type":"text/javascript"}}],"_postman_id":"0ac9a926-5dbb-4819-bd51-cf769ac5c89b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/buyervalueoptiontypes","host":["{{baseURI}}"],"path":["api","buyervalueoptiontypes"]}},"response":[]},{"name":"Get_ Buyer States","event":[{"listen":"test","script":{"id":"a26ed9e7-5524-49e3-9c1d-afb1ea0a0dbb","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'Bound'            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"1c70c202-a65a-4350-9dcb-ec9815cd5ae2","exec":[""],"type":"text/javascript"}}],"_postman_id":"5827b5e8-0965-45c0-9088-8f4fc6901f59","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/buyerstates","host":["{{baseURI}}"],"path":["api","buyerstates"]}},"response":[]},{"name":"Get_ Syndication Rule Types","event":[{"listen":"test","script":{"id":"02959f99-2423-4a6a-8fdd-fc8c16aab49d","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (","           responseJSONdata[i].name == 'Each Limit'            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"351821ab-233f-4edf-bf12-cec59e0fcae7","exec":[""],"type":"text/javascript"}}],"_postman_id":"59349c58-92d2-4605-bb32-4f242ed934b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/syndicationruletypes","host":["{{baseURI}}"],"path":["api","syndicationruletypes"]}},"response":[]}],"_postman_id":"699f540a-741c-452c-b711-21d826f351df","_postman_isSubFolder":true},{"name":"Carriers","item":[{"name":"Get_Insurance Carriers","event":[{"listen":"test","script":{"id":"bb0abadc-7621-4c7c-8090-2e600e93b40f","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"18272eda-7060-4c69-9c94-1f2ed563f2ee","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"6226bafc-3bb0-41c3-9b53-4d39f6b9d046","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"]}},"response":[]},{"name":"Get_Insurance Carrier/ Indicative Details","event":[{"listen":"test","script":{"id":"5426f0af-23ac-4a36-8b4a-0354521e3887","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].maxTenor).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].indicativeLimitsSum).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"5f5e2d32-3a26-4124-b036-9865c847e693","exec":[""],"type":"text/javascript"}}],"_postman_id":"1057ab2b-93e0-4933-9aa4-8d0881ffde99","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/indicativedetail","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","indicativedetail"]}},"response":[]},{"name":"Get_Insurance Carrier/ CarrierPolicy","event":[{"listen":"test","script":{"id":"b748ad6a-11fd-4509-8be9-c5ab680e89c3","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200);","    ","});","","","var expectedCarrierId = JSON.parse(pm.variables.get(\"Carriers\"));","","pm.test(\"To check Policy details is not null (carrierId,carrierName,policies)\" , function(){","    for (var i=0; i < responseJSONdata.length; i++)","    {","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","      pm.expect(responseJSONdata[i].carrierId).to.not.eql(null);","      pm.expect(responseJSONdata[i].carrierName).to.not.eql(null);","      pm.expect(responseJSONdata[i].policies).to.not.eql(null);","     ","    }  ","});","","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","    pm.expect(responseJSONdata.length).to.be.above(0);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"93a3cf38-715d-4510-bd31-49421534bed9","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/InsuranceCarriers\");","console.log(url);","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","    var carriers=[];","    for (var i=0;i<jsonData.length;i++)","    {","        carriers.push(jsonData[i].id);","    }","    pm.variables.set(\"Carriers\", JSON.stringify(carriers));","    ","});"],"type":"text/javascript"}}],"_postman_id":"f7aaae2f-30bd-49bd-b895-af6ffc59c80e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/carrierpolicies","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","carrierpolicies"]}},"response":[]},{"name":"Get_Carriers Count=100","event":[{"listen":"test","script":{"id":"554b3379-5367-44ec-b9f6-523806a6031a","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"43bb6aa8-a626-4fac-a6e9-7a27ed51a7ad","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));",""],"type":"text/javascript"}}],"_postman_id":"c058738a-26e6-4e24-9d43-5d4cbce4a8f2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?count=100","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"count","value":"100"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Carriers/MinimumSkip","event":[{"listen":"test","script":{"id":"b9c27523-eac8-4dee-a2a2-0c56396ee614","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"56dca72e-89f0-47b9-9be5-5a7b5cfe08d3","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"8b484697-78a2-4a82-8d0d-690adf1f8edc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Carriers/MaximumSkip","event":[{"listen":"test","script":{"id":"4f6c3571-729d-421b-8aee-aa12724a4534","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"26ad8005-6021-455e-8223-ad2a1187e7c2","exec":["pm.variables.set(\"skip\", 10);"],"type":"text/javascript"}}],"_postman_id":"d646a606-5f90-48d8-a869-11d2417ecab8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers?skip={{skip}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers"],"query":[{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"9b353b9e-ce50-440b-b5cf-73d7bb7df8a8","_postman_isSubFolder":true},{"name":"Insured Party","item":[{"name":"Get_Insurance Parties","event":[{"listen":"test","script":{"id":"0bb8c464-c4f2-4cb7-acc8-f6f1742c7273","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b23f8c82-f87b-4971-a19c-27ea336f5f72","exec":[""],"type":"text/javascript"}}],"_postman_id":"25eda4b4-db50-4372-9791-69f70b89e7c7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/InsuredParties","host":["{{baseURI}}"],"path":["api","InsuredParties"]}},"response":[]},{"name":"Get_Insurance Party By Id","event":[{"listen":"test","script":{"id":"d0f8ac93-1293-44d3-91bd-3faeeec16d0f","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","\r","});\r","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {\r","    for (var i = 0; i < responseJSONdata.length; i++) {\r","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","        pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);\r","\r","    }\r","\r","});\r","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6e48a15c-3a9b-4b64-9919-c429a0f691ac","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","\r","    pm.variables.set(\"IPid\",jsonData[i].id);\r","    console.log(jsonData[i].id);\r","     });\r","\r",""],"type":"text/javascript"}}],"_postman_id":"6e6ba07c-f394-467a-a72d-c9917e4f7733","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties/{{ParticipantID}}","host":["{{baseURI}}"],"path":["api","InsuredParties","{{ParticipantID}}"]}},"response":[]},{"name":"Get_Insurance Party By Id Details","event":[{"listen":"test","script":{"id":"a1b44e5f-c92e-434c-a4c6-e161ce8f0089","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200);","","});","pm.test(\"To check Debtor details is not null (id,name,duns,countryName)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].countryName).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","","    }","","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4afbb517-d6ce-42eb-81ce-48a2dacb913e","exec":["var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/InsuredParties\");","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","              }","      ","}, function (err, res) {","    ","","    var jsonData = res.json();","    var i=Math.floor((Math.random() * jsonData.length) + 1);","  // console.log(\"count \"+i);","  // console.log(\"Sic:\"+jsonData[i]);","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);"," var responseJSONdata = res.json();"," ","","     for (var i = 0; i < responseJSONdata.length; i++) {","     ","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){","                 pm.variables.set(\"ParticipantID\", responseJSONdata[i].id);","                 console.log(responseJSONdata[i].id);","                 ","             } ","         }","    });","",""],"type":"text/javascript"}}],"_postman_id":"14d109e6-a377-47b3-a915-e5131a392012","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties/{{ParticipantID}}/detail","host":["{{baseURI}}"],"path":["api","InsuredParties","{{ParticipantID}}","detail"]}},"response":[]}],"_postman_id":"01ef918b-77a1-4625-ae68-27c4ec77ee65","event":[{"listen":"prerequest","script":{"id":"ccde21dd-612f-4bc7-b518-8bc3a76b94c5","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"57d46cf1-7d65-45ee-b6f9-aee6ac97611b","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Debtor","item":[{"name":"Get_Debtors","event":[{"listen":"test","script":{"id":"0e7a7368-4d00-40cc-81ec-03b4709cf80b","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"To check Debtor details is not null (sicCode,addressLine1,city,stateProvince,postalCode,countryCode,country,id,name,duns,countryName)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].addressLine1).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].city).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].postalCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].country).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","//pm.test(\"Validate response body: \", function(){\r","     //pm.expect(responseJSONdata).to.have.any.keys('sicCode','addressLine1','city','stateProvince','postalCode','countryCode','country','id','name','duns','countryName' );\r","    //});\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"0334f547-e53d-4cbb-a7e8-1827aa3c458c","exec":[""],"type":"text/javascript"}}],"_postman_id":"fc202095-a8bb-4bbb-846e-9773603761be","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"Name","value":"Test Account Debtor 8","disabled":true}]}},"response":[]},{"name":"Get_Debtors/DeafultValue","event":[{"listen":"test","script":{"id":"b3d7e36a-944a-40a3-8527-70f7e67ddb79","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","\r","if(responseBody !== '')\r","{\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.above(1);\r","    });\r","}"],"type":"text/javascript"}}],"_postman_id":"672186ac-1cd9-413b-b6b6-076a4de3c749","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Debtors?count=100","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Debtors/MinimumSkip","event":[{"listen":"test","script":{"id":"23ac1a66-9525-4425-b0a2-d1aca4b50b0a","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)","});","","if (responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.be.below(1001);","    });","}","else {","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"32ab1d84-39ff-44f5-807b-b0a7e0c5e116","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"655e98c0-2c0d-4c67-8c03-c1cf09e26051","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]},{"name":"Get_Debtors/MaximumSkip","event":[{"listen":"test","script":{"id":"23fdf195-bdae-458b-9829-6925105609ce","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)","});","","if (responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.be.below(1001);","    });","}","else {","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"46293053-f848-4ade-a61a-45a0b1718a29","exec":["pm.variables.set(\"skip\", 50);"],"type":"text/javascript"}}],"_postman_id":"d15c5556-d674-4755-876b-4b9c9c51c8da","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Debtors?skip={{skip}}","host":["{{baseURI}}"],"path":["api","Debtors"],"query":[{"key":"count","value":"100","disabled":true},{"key":"skip","value":"{{skip}}"}]},"description":"Yet To Be Implemented from Vishal`s side as limited data is available."},"response":[]}],"_postman_id":"04c4b7b5-1b81-4da2-a3bc-719acb21a478","event":[{"listen":"prerequest","script":{"id":"b0436713-b2b2-487d-8e38-038673fb77be","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"e9ad0d5f-c05d-4756-b5a7-ff281fde42f5","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Lookups","item":[{"name":"Get_AttachmentPeriodTypes","event":[{"listen":"test","script":{"id":"54aa805d-1edf-4b1a-9b2f-37bdf5e606a6","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Date Financial Purchase Asset' || ","            responseJSONdata[i].name == 'Date of Receipt by AD' ||","            responseJSONdata[i].name == 'Invoice Date' || ","            responseJSONdata[i].name == 'Supplier Shipment Date' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"90dc3a85-9b26-46ea-b8f8-912aec9c106d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/attachmentperiodtypes","host":["{{baseURI}}"],"path":["api","attachmentperiodtypes"]}},"response":[]},{"name":"Get_PremiumBasisType","event":[{"listen":"test","script":{"id":"8bdfb60d-7c30-41bb-9fda-6f16a6ba0c4c","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'GROSS LIMIT' || ","            responseJSONdata[i].name == 'INSURABLE SALES' ||","            responseJSONdata[i].name == 'MONTH END A/R BALANCES' || ","            responseJSONdata[i].name == 'MONTH END GROSS EXPOSURE' || ","             responseJSONdata[i].name == 'MONTH END NET EXPOSURE' ||","            responseJSONdata[i].name == 'NET LIMIT' ||","            responseJSONdata[i].name == 'MONTHLY PEAK A/R'||","            responseJSONdata[i].name == 'UTILIZATION'","            ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Premium Basis Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"b0352cfe-062e-4336-9030-d139f3c520ee","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/premiumbasistypes","host":["{{baseURI}}"],"path":["api","premiumbasistypes"]}},"response":[]},{"name":"Get_Countries","event":[{"listen":"test","script":{"id":"8df55254-583b-42e7-acb3-232de0eeb172","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","pm.test(\"To check Country details is not null (id,iso2,iso3,name)\" , function(){","    for (var i=0; i < responseJSONdata.length; i++)","    {","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);","      pm.expect(responseJSONdata[i].id).to.not.eql(null);","      pm.expect(responseJSONdata[i].iso2).to.not.eql(null);","      pm.expect(responseJSONdata[i].iso3).to.not.eql(null);","      pm.expect(responseJSONdata[i].name).to.not.eql(null);","      ","    }         ","    ","}); ","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","    pm.expect(responseJSONdata.length).to.be.above(0);","});"],"type":"text/javascript"}}],"_postman_id":"a8a92e9b-1142-43cd-82e2-357f48991604","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/countries","host":["{{baseURI}}"],"path":["api","countries"]}},"response":[]},{"name":"Get_Products","event":[{"listen":"test","script":{"id":"f597b585-886e-429f-8f90-169a0d2d2675","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'A/R' || ","            responseJSONdata[i].name == 'SCF' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"3d782f18-6211-4d29-926f-5aef61ebcbd1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/products","host":["{{baseURI}}"],"path":["api","products"]}},"response":[]},{"name":"Get_QuoteTypes","event":[{"listen":"test","script":{"id":"fc76a950-ef97-4d37-8f67-db7a1dc9e016","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Firm' || ","            responseJSONdata[i].name == 'Last Look' ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"3a16857a-8f4e-407e-8e3a-28c5c5e7e6a4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotetypes","host":["{{baseURI}}"],"path":["api","quotetypes"]}},"response":[]}],"_postman_id":"baea7fa0-7c32-4dc5-983d-8595888d4b2b","_postman_isSubFolder":true},{"name":"Quotes","item":[{"name":"Quotes By Id","item":[{"name":"Get_PendingQuotes By Id","event":[{"listen":"test","script":{"id":"8e434923-8a78-4166-8983-be1206fa4ea6","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","    \r","    \r","pm.test(\"To check Quote details is not null (status,debtorIds,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,quoteTypeId,premiumBasisTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].premiumBasisTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","    }         \r","    \r","});\r","    \r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","    pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","      "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4d432a66-d0af-4f1b-b43b-be11dd3970c3","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"7558a23c-b056-4131-9b3b-7ad063856e69","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}"]}},"response":[]},{"name":"Get_ApprovedLimits By Id","event":[{"listen":"test","script":{"id":"2d0f7ab6-f374-4a9d-a7df-d5c8f71b7fdd","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","    pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","      "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d6c702c9-319b-4698-8971-1aba5abf426c","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=approvedlimit\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"79cb6493-080a-4ddc-9636-56093e4cad88","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}"]}},"response":[]},{"name":"Get_Quotes By ID with Original Quote","event":[{"listen":"prerequest","script":{"id":"43628e6d-a169-4132-8630-799637d2dbc3","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"671a6dec-9923-49da-9dc6-daf609b5f9aa","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","\r","pm.test(\"To check Original Quote details is not null (status,debtorIds,insuranceCarrierId,insuranceCarrier,insurancePolicyId,insurancePolicy,initiatingParticipantId,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].initiatingParticipantId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"3d820c82-b3d0-44ae-b446-34f3d263e5bf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}/orig","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}","orig"]}},"response":[]},{"name":"Get_Quotes By ID with Last Updated Quote","event":[{"listen":"prerequest","script":{"id":"521b9172-ff03-4994-ba8d-8ccdbec04236","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    \r","});\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8eae64f0-dda7-47b6-b8c1-917e2db2a673","exec":["\r","var responseJSONdata = JSON.parse(responseBody);\r","var expectedQuoteId = pm.variables.get(\"QuoteId\");\r","var actualQuoteId = responseJSONdata.quoteId;\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","pm.test(\"Validate QuoteId returned: \"+ responseJSONdata.quoteId, function(){\r","        pm.expect(expectedQuoteId).to.be.eql(actualQuoteId);\r","    });\r","\r","\r","pm.test(\"To check Original Quote details is not null (status,debtorIds,insuranceCarrierId,insuranceCarrier,insurancePolicyId,insurancePolicy,initiatingParticipantId,id,quoteId,maxCreditLimit,attachmentPeriodTypeId,requestCancellableByIp,indemnity)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorIds).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insurancePolicy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].initiatingParticipantId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].attachmentPeriodTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIp).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"2912b401-c013-4bcb-bc15-07759e4d4d0f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Quotes/{{QuoteId}}/last","host":["{{baseURI}}"],"path":["api","Quotes","{{QuoteId}}","last"]}},"response":[]}],"_postman_id":"e8eef8e1-3695-41d9-8b3e-937d23434305","_postman_isSubFolder":true},{"name":"Quotes By ScreenName","item":[{"name":"PendingQuotes","item":[{"name":"Get_PendingQuotes","event":[{"listen":"test","script":{"id":"8804434a-4600-46de-9481-2d521d2209dc","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"08d72db5-715c-4993-938e-07e94c455e7b","exec":[""],"type":"text/javascript"}}],"_postman_id":"ffa3642d-a998-4d6c-a799-0687216536f0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumCount","event":[{"listen":"test","script":{"id":"c8e4821a-3969-4e8a-b402-2fcd9ed112a4","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"840ecee1-c6b0-4098-9abe-cb1f2399ea08","exec":[""],"type":"text/javascript"}}],"_postman_id":"c13bad63-37cb-41bd-a422-e3b3264deb85","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumCount","event":[{"listen":"test","script":{"id":"21df1f86-ff73-4797-b599-405da86a4190","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"64cd2a8d-6669-4260-9424-a4fd1fdf01e6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=10","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"10"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumSkip","event":[{"listen":"test","script":{"id":"9b6b6d5b-a0e4-42d9-ba8a-e972413fc339","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"764684f3-16ab-48e2-80ed-f8e4eb09bf4b","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"7977b842-00f0-4330-b2d8-6de5a232417a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumSkip","event":[{"listen":"test","script":{"id":"e31a9fb9-f4e5-4034-a661-4a0624ebd91c","exec":[" var responseJSONdata = JSON.parse(responseBody);"," "," ","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","    ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d76dcd3a-5889-48d7-90d0-00982e059588","exec":["pm.variables.set(\"skip\", 0);"],"type":"text/javascript"}}],"_postman_id":"69bf9ce0-bda7-43d5-9120-b2b25e1f98fc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"4a69d89c-4281-4235-a641-884caa86a0f7","_postman_isSubFolder":true},{"name":"ApprovedLimits","item":[{"name":"Get_ApprovedLimits","event":[{"listen":"test","script":{"id":"31a345c9-bb2d-4dc5-acdb-8a067ed2db51","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"74440384-526f-4e59-a0ec-38e4db72b915","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumCount","event":[{"listen":"test","script":{"id":"3239ed27-0285-47a0-8003-fb0fbf4f55d1","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"bb1f17aa-b160-4865-91f3-f290bde3ed06","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumCount","event":[{"listen":"test","script":{"id":"0aa8c890-83b3-4270-8be7-249564f77241","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"acde44b0-5577-42b8-be88-f9862f55aac2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=100","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumSkip","event":[{"listen":"test","script":{"id":"20d0dd10-ae64-4ec8-9dfa-e2671219cbcc","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e3a62c1e-9d12-410d-ab0a-288b6ce5645b","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"d1e41d22-1441-4c7b-a071-4d500e9ff805","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumSkip","event":[{"listen":"test","script":{"id":"d846b613-9e75-44b7-b859-654536174679","exec":[" var responseJSONdata = JSON.parse(responseBody);"," ","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","     ","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"64a84c60-563a-4d30-bdf0-40cb92c595b4","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"e527dad0-2cc4-416a-b75c-cf33b4dec50c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"8499c82b-2040-4c82-8e92-389336ac0871","_postman_isSubFolder":true}],"_postman_id":"00e490f3-1bac-4c76-9589-0fa01805529d","_postman_isSubFolder":true}],"_postman_id":"bb1201b4-ae37-415f-89b2-ce1ffd14fd11","_postman_isSubFolder":true},{"name":"Activity Monitor","item":[{"name":"Get_ActivityMonitor","event":[{"listen":"test","script":{"id":"542a37dd-fe0d-40da-b163-5f54b043a2e0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"3f5d5201-7a21-4b06-bb42-ce9cd1c081a9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor","host":["{{baseURI}}"],"path":["api","ActivityMonitor"]}},"response":[]},{"name":"Get_ActivityMonitor/ApprovedLimits","event":[{"listen":"test","script":{"id":"4e97dee3-6298-4bc6-860a-a01cceaeb583","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"d2da4a86-a207-4334-a7fe-4a3a2a12f5c6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor/approvedLimits","host":["{{baseURI}}"],"path":["api","ActivityMonitor","approvedLimits"]}},"response":[]},{"name":"Get_ActivityMonitor By Id","event":[{"listen":"test","script":{"id":"18c946b8-3ae1-4c78-8a0d-b9a10e91195c","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].leadingQuoteStateName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carriersCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].createdOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedBy).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].originalQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].mostRecentQuoteSummary).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].statusSummary).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c94c33ca-5d04-4c0e-a24d-3ac1105a645e","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/ActivityMonitor\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","      \r","}, function (err, res) {\r","    \r","    var responseJSONdata = res.json();\r","    var i=Math.floor((Math.random() * responseJSONdata.length) + 1);\r","    pm.variables.set(\"transId\",responseJSONdata[i].transactionId);\r","\r"," \r","});"],"type":"text/javascript"}}],"_postman_id":"9f46f7f6-8e4f-4f68-9450-3d82298aaccb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ActivityMonitor/{{transId}}","host":["{{baseURI}}"],"path":["api","ActivityMonitor","{{transId}}"]}},"response":[]}],"_postman_id":"dbb8963f-bbea-488b-8b6d-5de91492688d","_postman_isSubFolder":true},{"name":"Transactions","item":[{"name":"Get_Transactions By ID","event":[{"listen":"test","script":{"id":"c82b4da8-874a-4ca0-872c-bf2867d64e5a","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Transaction details are not null (id,insuredPartyId,brokerId,product,maxCreditLimitRfq,indemnityRfq,insuredParty,transactionAccountDebtors)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].brokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].product).to.not.eql(null);\r","       pm.expect(responseJSONdata[i].maxCreditLimitRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnityRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredParty).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].transactionAccountDebtors).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8a48a124-66a5-45ea-91d2-6095dd091bf2","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    pm.variables.set(\"TRANSID\",jsonData[0].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"fb336857-d384-4757-8a56-c0f8b2419902","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}"]}},"response":[]},{"name":"Get_Transactions`s Average Premium Rate","event":[{"listen":"test","script":{"id":"f6d6b987-93f8-47fd-96d8-15d4b28702f9","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Average Premium details are not null (count, averagePremiumRate)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].count).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].averagePremiumRate).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"867d9873-45b1-4077-81d9-f007b5d9949a","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=approvedlimit\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","\r","\r","     pm.variables.set(\"TRANSID\",jsonData[i].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"c4b336ee-ce47-4f70-9a04-88fc0432bb6a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}/averagepremiumrate","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}","averagepremiumrate"]}},"response":[]},{"name":"Get_Transactions`s Average Premium Rate Copy","event":[{"listen":"test","script":{"id":"d2ce9331-5d0e-4808-af03-2707d7e80a27","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Average Premium details are not null (count, averagePremiumRate)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].count).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].averagePremiumRate).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"18c21117-6972-45d6-aedd-da11b91e5248","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/ActivityMonitor\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","\r","\r","     pm.variables.set(\"TRANSID\",jsonData[i].transactionId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"68592568-ea6a-4e9f-b43a-c7eb5483ed60","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}/quotesrespondedbyic","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}","quotesrespondedbyic"]}},"response":[]},{"name":"Get_Transactions logs By ID","event":[{"listen":"test","script":{"id":"4d6d848d-e562-4d5f-b161-ca4bb55de731","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Transaction details are not null (transactionId,quoteId,status,participantId,participantName,timestamp)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].transactionId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].quoteId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].status).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].participantId).to.not.eql(null);\r","       pm.expect(responseJSONdata[i].participantName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].timestamp).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b430558c-7e18-4505-a325-426571f445b9","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/quotes?screenname=pendingquotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    var jsonData = res.json();\r","    pm.variables.set(\"QuoteId\", jsonData[0].quoteId);\r","    pm.variables.set(\"TRANSID\",jsonData[0].transId);\r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"f1e5e7f9-895a-4c46-a63e-f3c0f24ea5ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions/{{TRANSID}}/logs","host":["{{baseURI}}"],"path":["api","Transactions","{{TRANSID}}","logs"]}},"response":[]},{"name":"Get_Transactions","event":[{"listen":"test","script":{"id":"af46b648-284d-4da5-ac97-b7f72821e5a4","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","pm.test(\"To check Transaction details is not null (transactionId,insuredPartyId,brokerId,coBrokerId,productId,maxCreditLimitRfq,indemnityRfq,currencyCodeRfq,requestCancellableByIpRfq,updatedOn,attachmentPeriodRfq)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredPartyId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].brokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].coBrokerId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].productId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnityRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].currencyCodeRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].requestCancellableByIpRfq).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].updatedOn).to.not.eql(null);\r","        pm.expect(responseJSONdata[i].attachmentPeriodRfq).to.not.eql(null);\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"1fe540ce-18a9-4edd-b55c-01c1e9c5da62","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Transactions","host":["{{baseURI}}"],"path":["api","Transactions"]}},"response":[]}],"_postman_id":"6fd001f2-9717-4864-8d39-0beb5db9e0bd","_postman_isSubFolder":true},{"name":"Notifications","item":[{"name":"Flow: Create and Delete","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"349b3762-d8fc-4e94-87d7-0be9173e6d06","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c69d4755-333c-4a0a-8879-ba367cdededc","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     \r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","                 pm.environment.set(\"ParticipantID\", responseJSONdata[i].id);\r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000,10000)+ 'Test' + '@gmail.com';\r","         pm.environment.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"54aa7181-2aa7-477d-8042-a7599ae6de31","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"919297aa-777a-44d6-bfcd-51485dc1446c","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c99d271e-8967-4a7a-a732-1e9d3dfe4ffb","exec":[""],"type":"text/javascript"}}],"_postman_id":"bf78eeed-5699-4667-9d16-512fe43b7c47","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"ALiquidx2020@gmail.com\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"6d0f47ba-19c6-4d80-b395-0ec3bd2c07e8","_postman_isSubFolder":true},{"name":"Flow: Create and Delete By EmailId","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"f21136a0-5b81-4b59-99d8-afb902749609","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d23795ac-f9c6-42f0-b162-9add1245430b","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     \r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","                 pm.environment.set(\"ParticipantID\", responseJSONdata[i].id);\r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000)+ 'Test' + '@gmail.com';\r","         pm.environment.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"5c75c693-e578-4e6f-8438-52fe8711c96f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Delete_Notifications By Email","event":[{"listen":"test","script":{"id":"c622d2da-a910-4cab-99eb-f9fb31f8c39b","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"93b684e7-9028-46cc-a995-2133119ebd50","exec":[""],"type":"text/javascript"}}],"_postman_id":"cf533bd4-1524-434c-95fc-5fe0697c49d7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/Notifications/{{Email}}","host":["{{baseURI}}"],"path":["api","Notifications","{{Email}}"],"query":[{"key":"email","value":"","disabled":true}]}},"response":[]}],"_postman_id":"a3f12217-2885-44fd-8208-39ef48b47785","_postman_isSubFolder":true},{"name":"Flow: Create, Edit and Delete","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"af366244-5515-4b67-9f01-b6956ac24996","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"109f100e-b2c4-46a5-af5e-418b0ec1c98b","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     console.log(responseJSONdata[i].name);\r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","               console.log(responseJSONdata[i].id);\r","                pm.variables.set(\"ParticipantID\", responseJSONdata[i].id);\r","                \r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000)+ 'Test' + '@gmail.com';\r","         pm.variables.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"9ae17e66-f176-41df-be49-36e07dac1c8b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Put_Notifications","event":[{"listen":"test","script":{"id":"a91bfaf0-71ef-4aea-a176-e0d409a94c4b","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"36ac8c80-a738-4ad9-9ce3-b9c62c957985","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"916eda86-a069-49ed-a853-5d67415088db","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            },\n            {\n                \"subscriptionTypeId\": 2,\n                \"subscriptionType\": \"InfoRequested\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"b6aaa22b-d44c-4320-ad5f-7d94653f3b56","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"87765031-408a-4f9a-b480-369ad0ccf68d","exec":["setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"92b6b08a-5b40-4e47-afd4-34a5c5ebd0c2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"{{Email}}\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"ce1e3180-bcc2-4815-ab83-d0bf4bf1f9cb","_postman_isSubFolder":true},{"name":"Get_Notifications","event":[{"listen":"test","script":{"id":"97c96d80-790f-459e-ad2d-0abb2fc4207a","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}}],"_postman_id":"f55a2b3e-e3ba-42c1-936d-30d7dd4bf0a8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Get_Notifications Types","event":[{"listen":"test","script":{"id":"6f1d1653-128f-4bfd-888e-1910defc498d","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","\r","if(responseBody !== '')\r","{\r","    if(responseJSONdata.length > 0)\r","    {\r","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);\r","        console.log(\"length ==\"+responseJSONdata.length)\r","        for (i = 0; i < responseJSONdata.length; i++)\r","        {\r","            var confirmname = false;\r","            if (responseJSONdata[i].name == 'NewTransactionCreated' || \r","            responseJSONdata[i].name == 'InfoRequested' ||\r","            responseJSONdata[i].name == 'InfoProvided' || \r","            responseJSONdata[i].name == 'PendingReview' ||\r","              responseJSONdata[i].name == 'Quote' ||\r","            responseJSONdata[i].name == 'AcceptedbyIP' || \r","            responseJSONdata[i].name == 'Declined' ||\r","              responseJSONdata[i].name == 'TransactionEnded' ||\r","            responseJSONdata[i].name == 'RFQPassed' || \r","            responseJSONdata[i].name == 'QuoteWithdrawn' ||\r","             responseJSONdata[i].name == 'QuoteExpired' ||\r","              responseJSONdata[i].name == 'AmendmentRequest' ||\r","            responseJSONdata[i].name == 'LastLookQuoteAccepted' || \r","            responseJSONdata[i].name == 'CancelledbyIP' ||\r","               responseJSONdata[i].name == 'CancelledbyIC' ||\r","            responseJSONdata[i].name == 'ICAmendment' ||\r","            responseJSONdata[i].name == 'CoverageExpired' ||\r","            responseJSONdata[i].name == 'IcAlert' ||\r","           responseJSONdata[i].name =='ApprovedLimitExpiration'\r","            )\r","            {\r","                confirmname = true;\r","            }\r","            var name=responseJSONdata[i].name;\r","            console.log(\"type value is :\"+responseJSONdata[i].name);\r","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {\r","                pm.expect(confirmname).to.be.true;\r","            });\r","        }\r","    }\r","}"],"type":"text/javascript"}}],"_postman_id":"f67dd6b8-eb79-4b49-97f5-220aef50daeb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/notifications/types","host":["{{baseURI}}"],"path":["api","notifications","types"]}},"response":[]},{"name":"Get_Notifications By Email","event":[{"listen":"test","script":{"id":"5e35f22e-ff81-45a8-9b16-cae0093dc8b3","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"24b5e47c-b270-412b-b1be-344778c29235","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Notifications\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","      }\r","}, function (err, res) {\r","    \r","    var jsonData = res.json();\r","    var x = Math.floor((Math.random() * 2) + 1);\r","    pm.variables.set(\"email\", jsonData[x].email);\r","  \r","     \r","    \r","    \r","});\r",""],"type":"text/javascript"}}],"_postman_id":"6f029b2c-a9ac-4740-a8b8-aac08a6c9d1b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications/{{email}}","host":["{{baseURI}}"],"path":["api","Notifications","{{email}}"]}},"response":[]}],"_postman_id":"8ab5a1d6-27ad-4841-bbf8-2a2615d59e52","_postman_isSubFolder":true}],"_postman_id":"1e2863bc-a8ef-4ca8-a8ee-46c17442b176","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"03e71ac2-e9c4-40a0-91a1-58b4297ae772","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"39259f3a-a72e-4d15-8af3-87f5300e06a6","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"IC_User","item":[{"name":"Lookups","item":[{"name":"Get_AttachmentPeriodType","event":[{"listen":"prerequest","script":{"id":"186f8a6d-2847-40e9-bb12-1aa02c71ae86","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"fc285661-f636-4808-af5e-287979b60ddf","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();"," for (var i=0;   i<jsonData.length;  i++)"," { ","    var expectedAttachmentPeriodType = ['Date of Receipt by AD', 'Invoice Date','Date Financial Purchase Asset','Supplier Shipment Date'];","    pm.test(\"To Check whether attachment period type \"+ jsonData[i].name +\" is present\", function () {","      pm.expect(expectedAttachmentPeriodType).to.include( jsonData[i].name); ","    });"," }"],"type":"text/javascript"}}],"_postman_id":"fa97e125-2b64-41fc-a782-0c9f39ba9517","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/attachmentperiodtypes","host":["{{baseURI}}"],"path":["api","attachmentperiodtypes"]}},"response":[]},{"name":"Get_PremiumBasisTypes","event":[{"listen":"prerequest","script":{"id":"f3d92864-f9d3-4ed8-b377-94ecdef1d2e4","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"f2a34d3d-629f-4932-84ba-bcff53558f4f","exec":["var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"Successful GET request\", function () {","    pm.expect(pm.response.code).to.eql(200)});","","if(responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'GROSS LIMIT' || ","            responseJSONdata[i].name == 'INSURABLE SALES' ||","            responseJSONdata[i].name == 'MONTH END A/R BALANCES' || ","            responseJSONdata[i].name == 'MONTH END GROSS EXPOSURE' || ","             responseJSONdata[i].name == 'MONTH END NET EXPOSURE' ||","            responseJSONdata[i].name == 'NET LIMIT' ||","            responseJSONdata[i].name == 'MONTHLY PEAK A/R'||","            responseJSONdata[i].name == 'UTILIZATION'","            ","           ","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Premium Basis Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"5c3a328f-6a9e-4df5-9826-405d43590e30","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/premiumbasistypes","host":["{{baseURI}}"],"path":["api","premiumbasistypes"]}},"response":[]},{"name":"Get_QuoteType","event":[{"listen":"prerequest","script":{"id":"3c89a9a5-a726-4545-8122-1030e799b330","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3b99f8d5-d6d3-4e06-8b15-369564b30e71","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmName = false;","            if (responseJSONdata[i].name == 'Firm' || ","            responseJSONdata[i].name == 'Last Look')","            {","                confirmName = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Name value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmName).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"90e6d6cd-a424-4498-ac8f-16dc2f3d2dbd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotetypes","host":["{{baseURI}}"],"path":["api","quotetypes"]}},"response":[]},{"name":"Get_SPCarrierRatings","event":[{"listen":"prerequest","script":{"id":"88777382-58cf-4fa2-8073-188103cb5997","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3122653f-afd6-4f99-acf6-64a07ad896a8","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'AAA' || ","            responseJSONdata[i].name == 'AA+' ||","            responseJSONdata[i].name == 'AA' || ","            responseJSONdata[i].name == 'AA-' ||","            responseJSONdata[i].name == 'A+' || ","          responseJSONdata[i].name == 'A' ||","           responseJSONdata[i].name == 'A-' || ","            responseJSONdata[i].name == 'BBB+' ||","            responseJSONdata[i].name == 'BBB' || ","           responseJSONdata[i].name == 'BBB-' ||","            responseJSONdata[i].name == 'BB+' ||","             responseJSONdata[i].name == 'BB' ||","            responseJSONdata[i].name == 'BB-' ||","            responseJSONdata[i].name == 'B+'||","            responseJSONdata[i].name == 'B'||","            responseJSONdata[i].name == 'B-'||","            responseJSONdata[i].name == 'CCC+'||","            responseJSONdata[i].name == 'CCC'||","            responseJSONdata[i].name == 'CCC-'||","            responseJSONdata[i].name == 'CC'||","            responseJSONdata[i].name == 'C'||","            responseJSONdata[i].name == 'D'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"state value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"47cf90c1-9c0c-4361-8622-cbb47969b014","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/spcarrierrating","host":["{{baseURI}}"],"path":["api","spcarrierrating"]}},"response":[]},{"name":"Get_AmbestCarrierRating","event":[{"listen":"test","script":{"id":"1f1a044e-ec7f-4521-ae0d-3c4de4b8b03d","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'A++' || ","            responseJSONdata[i].name == 'A+' ||","            responseJSONdata[i].name == 'A' || ","            responseJSONdata[i].name == 'A-' ||","            responseJSONdata[i].name == 'B++' || ","          responseJSONdata[i].name == 'B+' ||","           responseJSONdata[i].name == 'B' || ","            responseJSONdata[i].name == 'B-' ||","            responseJSONdata[i].name == 'C++' || ","           responseJSONdata[i].name == 'C+' ||","            responseJSONdata[i].name == 'C' ||","             responseJSONdata[i].name == 'C-' ||","            responseJSONdata[i].name == 'D' ||","            responseJSONdata[i].name == 'E'||","            responseJSONdata[i].name == 'F'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"state value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"bba11e9c-5fa7-4c19-8c94-c11eadb6be80","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ambestcarrierrating","host":["{{baseURI}}"],"path":["api","ambestcarrierrating"]}},"response":[]},{"name":"Get_QuoteDeclineType","event":[{"listen":"test","script":{"id":"9e49fee0-f131-4237-9cb3-8af9b42882cc","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length);","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmname = false;","            if (responseJSONdata[i].name == 'Buyer Risk' || ","            responseJSONdata[i].name == 'Capacity Constraints'|| ","            responseJSONdata[i].name == 'Country Risk'|| ","            responseJSONdata[i].name == 'Geography'|| ","            responseJSONdata[i].name == 'Insufficient credit procedures'|| ","            responseJSONdata[i].name == 'Insufficient information to quote'|| ","            responseJSONdata[i].name == 'Loss history'|| ","            responseJSONdata[i].name == 'Other'|| ","            responseJSONdata[i].name == 'Payment Terms'|| ","            responseJSONdata[i].name == 'Pricing'|| ","            responseJSONdata[i].name == 'Sector Risk'|| ","            responseJSONdata[i].name == 'Size'|| ","            responseJSONdata[i].name == 'Structure'|| ","            responseJSONdata[i].name == 'Unable to cover key buyers'|| ","            responseJSONdata[i].name == 'Unable to provide requested structure'","            )","            {","                confirmname = true;","            }","            var name=responseJSONdata[i].name;","            console.log(\"Quote Type value is :\"+responseJSONdata[i].name);","            pm.test(\"Validating response data element: \" + i + \" for name->\" +name, function() {","                pm.expect(confirmname).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"e1a22ceb-6c52-4b13-a31a-24c6ba5a7388","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotedeclinetypes","host":["{{baseURI}}"],"path":["api","quotedeclinetypes"]}},"response":[]}],"_postman_id":"d2f43104-8fae-404c-b4fb-6364ba5c36ee","_postman_isSubFolder":true},{"name":"Notifications","item":[{"name":"Flow: Create and Delete Copy","item":[{"name":"Post_Notifications","event":[{"listen":"test","script":{"id":"fd5de6a6-6530-4315-b737-779407263b72","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b8fab2e0-3d56-41ce-96fe-8433f941a212","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/InsuredParties\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   var responseJSONdata = res.json();\r"," \r","\r","     for (var i = 0; i < responseJSONdata.length; i++) {\r","     \r","             if (responseJSONdata[i].name === pm.environment.get('InsPartyName')){\r","                 pm.environment.set(\"ParticipantID\", responseJSONdata[i].id);\r","                 \r","             } \r","         }\r","\r","       let email=_.random(1000,10000)+ 'Test' + '@gmail.com';\r","         pm.environment.set(\"Email\",email);\r","         console.log(email);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"744578a8-bec3-42b3-937f-e3ef89fada08","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n    {\n        \"email\": \"{{Email}}\",\n        \"subscriptions\": [\n            {\n                \"subscriptionTypeId\": 1,\n                \"subscriptionType\": \"NewTransactionCreated\"\n            }\n        ],\n        \"participants\": [\n            {\n                \"participantId\": {{ParticipantID}},\n                \"participantRole\": \"InsuredParty\",\n                \"participantName\": \"\"\n            }\n        ]\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/notifications","host":["{{baseURI}}"],"path":["api","notifications"]}},"response":[]},{"name":"Get_Notifications","event":[{"listen":"test","script":{"id":"351680ab-3fb5-4c23-a1d9-c603f225a9eb","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Notifications details are not null (email,subscriptionTypeId,subscriptionType)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].email).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionTypeId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].subscriptionType).to.not.eql(null);\r","     \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6ab50351-e7fd-41f3-b064-21371c5cdfad","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"5edc6b41-8364-4988-af86-949e08afd6fe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]},{"name":"Delete_Notifications","event":[{"listen":"test","script":{"id":"b6e7396d-df52-4360-bfdd-a86ef41f42ab","exec":[""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e13775ba-d56a-4f76-bc05-4a1759b8ea97","exec":[""],"type":"text/javascript"}}],"_postman_id":"fb434a4e-7842-4715-b9ca-ac9fafc47550","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\"ALiquidx2020@gmail.com\"]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Notifications","host":["{{baseURI}}"],"path":["api","Notifications"]}},"response":[]}],"_postman_id":"22ff5b38-ad07-4f0f-95da-8d68becc554d","_postman_isSubFolder":true}],"_postman_id":"d107936f-59cf-4b07-8819-7e5292e84feb","_postman_isSubFolder":true},{"name":"Quotes","item":[{"name":"Quotes By Id","item":[{"name":"Get_Pendingquotes","event":[{"listen":"test","script":{"id":"15c47fba-cd0f-4d42-9759-6e936731f650","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review' ||","            responseJSONdata[i].status == 'Transaction Ended'","            )","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"bb904bc7-09c4-4935-9e94-39602882f678","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_Approvedlimit","event":[{"listen":"test","script":{"id":"2031d133-c56e-45f9-be53-60278c2f03ab","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"a76a724e-40d8-4b2c-90aa-0616bc027b85","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]}],"_postman_id":"2735578e-62cd-4027-8efb-f65ac538d054","_postman_isSubFolder":true},{"name":"Quotes By ScreenName","item":[{"name":"PendingQuotes","item":[{"name":"Get_PendingQuotes","event":[{"listen":"test","script":{"id":"3b8672c4-3f4d-48ba-b8cd-250a1bce606a","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'RFQ' || ","            responseJSONdata[i].status == 'Accepted by IP' ||","            responseJSONdata[i].status == 'Accepted by IC' || ","            responseJSONdata[i].status == 'Passed' ||","            responseJSONdata[i].status == 'Information Provided' || ","            responseJSONdata[i].status == 'Information Requested' ||","           responseJSONdata[i].status == 'Ended' || ","            responseJSONdata[i].status == 'Withdraw' ||","            responseJSONdata[i].status == 'Transaction Closed' || ","           responseJSONdata[i].status == 'Final Review' ||","            responseJSONdata[i].status == 'Declined' ||","             responseJSONdata[i].status == 'Quote' ||","            responseJSONdata[i].status == 'Quote Expired' ||","            responseJSONdata[i].status == 'Pending Review'||","            responseJSONdata[i].status == 'Transaction Ended')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b8918923-7191-40fe-8268-876584c111b3","exec":[""],"type":"text/javascript"}}],"_postman_id":"6fe3bf7b-07a9-4d1f-be12-d6235db706b7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumCount","event":[{"listen":"test","script":{"id":"d4b5eec3-3cb7-40ad-b44d-6d1077310369","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"faef38ba-b62e-458f-9ae6-63e9dde15240","exec":[""],"type":"text/javascript"}}],"_postman_id":"a289dfb7-1d69-4ffb-8281-c7012362022d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumCount","event":[{"listen":"test","script":{"id":"4b18b20d-24c3-4f53-8c26-33e8450f10e3","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"ca8c62f1-162b-4548-a69c-a341cd35b3ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&count=10","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"count","value":"10"}]}},"response":[]},{"name":"Get_PendingQuotes/MinimumSkip","event":[{"listen":"test","script":{"id":"cb669983-d848-487f-a70d-d613c248e76f","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"206236b9-489f-47f6-87ab-9ad6f0d3c144","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"a5cd11ef-cb77-41a7-9ab0-cd28ce6f9c2c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_PendingQuotes/MaximumSkip","event":[{"listen":"test","script":{"id":"ec455b91-5167-4962-8caf-16c0488815fb","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","  //  pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","  //      pm.expect(responseJSONdata.length).to.be();","   // });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4b16b657-6823-4474-8096-9e11206e14a7","exec":["pm.variables.set(\"skip\", 10);"],"type":"text/javascript"}}],"_postman_id":"19a26dff-d78c-4ef4-b2fe-191f7d46d6f5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=pendingquotes&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"pendingquotes"},{"key":"skip","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"562325ec-f618-417c-bb69-e715515a3488","_postman_isSubFolder":true},{"name":"ApprovedLimits","item":[{"name":"Get_ApprovedLimits","event":[{"listen":"test","script":{"id":"0de2f82b-2123-49ea-b94e-f8b387d8622e","exec":[" var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    if(responseJSONdata.length > 0)","    {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","            pm.expect(responseJSONdata.length).to.be.below(101);","        });","        console.log(\"length ==\"+responseJSONdata.length)","        for (i = 0; i < responseJSONdata.length; i++)","        {","            var confirmState = false;","            if (responseJSONdata[i].status == 'Bound' || ","            responseJSONdata[i].status == 'Inactive' ||","            responseJSONdata[i].status == 'Coverage Expired' || ","            responseJSONdata[i].status == 'Cancelled by IC' ||","            responseJSONdata[i].status == 'Cancelled by IP')","            {","                confirmState = true;","            }","            var status=responseJSONdata[i].status;","            console.log(\"state value is :\"+responseJSONdata[i].status);","            pm.test(\"Validating response data element: \" + i + \" for state->\" +status, function() {","                pm.expect(confirmState).to.be.true;","            });","        }","    }","}"],"type":"text/javascript"}}],"_postman_id":"d0a21308-fdfd-49e2-958b-fbe72bf177a0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumCount","event":[{"listen":"test","script":{"id":"ada14b9e-6be2-4fd1-b818-ce24b8584d9b","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(2);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"11e8155c-25ad-4a7e-99d7-c77979cd49d8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=1","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"1"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumCount","event":[{"listen":"test","script":{"id":"8e60026f-6732-429f-b987-4253da67980f","exec":["  var responseJSONdata = JSON.parse(responseBody);\r","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","        pm.expect(responseJSONdata.length).to.be.below(101);\r","    });\r",""],"type":"text/javascript"}}],"_postman_id":"107de867-e5bf-4bbd-9dbf-bc4adb270bc8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count=100","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_ApprovedLimits/MinimumSkip","event":[{"listen":"test","script":{"id":"f3c939f8-1eeb-495b-a501-a7ae3ed14a36","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}","else","{","    pm.test(\"Blank response body!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"37d3649b-8198-46dc-8ead-08fb3fcef8e6","exec":["pm.variables.set(\"skip\", 1);"],"type":"text/javascript"}}],"_postman_id":"e68dc1a5-3c1a-4392-82fa-afb6853984f6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&skip={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"skip","value":"{{skip}}"}]}},"response":[]},{"name":"Get_ApprovedLimits/MaximumSkip","event":[{"listen":"test","script":{"id":"ce210bae-ebc2-4efd-b142-52b3d0fe34da","exec":["var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(101);","    });","}"," "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4221ad4f-01d7-4c44-9a5f-fdffc4d3d919","exec":["pm.variables.set(\"skip\", 100);"],"type":"text/javascript"}}],"_postman_id":"f16b34f9-4fcc-4884-a465-c77deccb8039","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/quotes?screenname=approvedlimit&count={{skip}}","host":["{{baseURI}}"],"path":["api","quotes"],"query":[{"key":"screenname","value":"approvedlimit"},{"key":"count","value":"{{skip}}"}]}},"response":[]}],"_postman_id":"ff49695b-01c1-4400-850b-c9953996168a","_postman_isSubFolder":true}],"_postman_id":"b85912da-7895-485b-bca3-64f8502fd21c","_postman_isSubFolder":true}],"_postman_id":"7e59826d-2a55-4ae3-b295-c0f0485ff4e0","_postman_isSubFolder":true}],"_postman_id":"4743697c-6d67-4f6c-85c5-cf3b460fade4","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"2f46755e-431c-4207-a852-d43c2fb2f259","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"a8d6dcf8-7aa6-4027-8dd3-5e8540bcd140","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true}],"_postman_id":"f855e887-aa32-40f6-b048-591c9fa127d5","event":[{"listen":"prerequest","script":{"id":"b98956b7-5116-4f07-9ecc-add5bfe7be3b","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"45ea09f3-74f7-4dc1-9398-00403bb4f801","type":"text/javascript","exec":["if(pm.response.code == 200)","{","    console.log(\"responseBody\", responseBody);","    if (responseBody != null)","    {","        if (responseBody =='[]' || responseBody == '{}')","        {","             tests[\"Body is empty \" + responseBody]= false;","        }","        else {","          tests[\"Body is not empty\"]= true;","        }","    }","    else","    {","          tests[\"Body is empty\" + responseBody]= false;","    }","}","","pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"]}}]},{"name":"Version","item":[{"name":"Get_Verison","_postman_id":"5e1d7783-e842-4c05-9dd3-4adf0622f9ec","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Versions","host":["{{baseURI}}"],"path":["api","Versions"]}},"response":[]}],"_postman_id":"56e12b51-d713-4d40-8cb8-31e259a75739"},{"name":"POST","item":[{"name":"IP_User","item":[{"name":"Download","_postman_id":"97b86a6b-4213-4c4d-82e4-b41a92105b1c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"GET","header":[],"body":{"mode":"formdata","formdata":[],"options":{"formdata":{}}},"url":{"raw":"https://lqx-insurance-qa-fn.azurewebsites.net/api/Download?assetid=0&fileid=1349b9c8-bc68-4de1-9069-dbca7bd44b72&productCode=INS","protocol":"https","host":["lqx-insurance-qa-fn","azurewebsites","net"],"path":["api","Download"],"query":[{"key":"assetid","value":"0"},{"key":"fileid","value":"1349b9c8-bc68-4de1-9069-dbca7bd44b72"},{"key":"productCode","value":"INS"}]}},"response":[]}],"_postman_id":"2672edeb-51ca-4cdd-9b49-4e6e957a8f90","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"65a1e43c-eb7a-4140-a59e-4dd695a48052","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"86458884-02f3-4282-89e7-59dbae6de79f","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"IC_User","item":[{"name":"Quotes","item":[{"name":"Withdrawn","_postman_id":"3aa36b21-c998-48d0-ac25-4b61b4eaa7b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteId\": 154\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/withdrawn","host":["{{baseURI}}"],"path":["api","Quotes","withdrawn"]}},"response":[]}],"_postman_id":"1ad1b25f-d1f4-4568-9437-c0273ed82b30","_postman_isSubFolder":true},{"name":"Upload","_postman_id":"5c0da27d-1c01-42f7-aedf-161291972be6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[{"key":"","type":"file","src":"/C:/Users/dahakea/Downloads/image.png"},{"key":"","type":"file","value":null},{"key":"","type":"file","value":null}],"options":{"formdata":{}}},"url":{"raw":"https://lqx-insurance-qa-fn.azurewebsites.net/api/Upload?assetid=485&assettype=quote&stateid=2&state=Quote&description=Test2&productcode=INS&assetDetailId=983","protocol":"https","host":["lqx-insurance-qa-fn","azurewebsites","net"],"path":["api","Upload"],"query":[{"key":"assetid","value":"485"},{"key":"assettype","value":"quote"},{"key":"stateid","value":"2"},{"key":"state","value":"Quote"},{"key":"description","value":"Test2"},{"key":"productcode","value":"INS"},{"key":"assetDetailId","value":"983"}]}},"response":[]},{"name":"GET_InsuranceCaarrier/ Subsidiaries","event":[{"listen":"test","script":{"id":"063e88e3-0c06-4f06-b5bd-9b16db54712f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"cf7da5c3-61e9-4d82-9afc-2351ff447a69","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/IcSubsidiaries","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","IcSubsidiaries"]}},"response":[]},{"name":"GET_InsuranceCaarrier/ ICSubsidiaries","event":[{"listen":"test","script":{"id":"86d7269b-8989-40bc-ae62-cac63dbf80b2","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"d39debad-eddc-4c1c-8735-4a36b41b298d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/IcSubsidiaries","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","IcSubsidiaries"]}},"response":[]}],"_postman_id":"44f5eaf7-bb54-4739-ad8a-0ac0c4e9dd22","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"97e11be9-35f4-4c66-a853-8d83c4b1acbe","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"058f90bc-3887-4b3e-af78-5a9ac3736f21","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Flow","item":[{"name":"Flow: Pass Quotes","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"92dd691f-d1a3-4749-904d-9770fb6a951c","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"de98e6eb-cf7e-4817-bfc3-e7a09821c5a2","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"9ec9b15a-4344-41b3-8190-56b7bf4bc2fd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"e55757d4-356b-46aa-be4f-a2144ca06feb","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"1c329526-6320-4e9a-a1c8-c105da92f94c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"a55367d8-9fb5-4ae3-95c6-e7f002befcb0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Passed_By_IP","event":[{"listen":"test","script":{"id":"ed769b8b-c8d4-487f-bc6c-375c3dd79e3f","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7c7e6a3d-9a73-4194-b9e8-84d2b013c9f0","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"e0a64f3d-d855-472a-9d3b-e40f5851dd72","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/passedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","passedbyip"]}},"response":[]}],"_postman_id":"27385cc6-e48c-4c35-b5a8-58b933c2c5f5","event":[{"listen":"prerequest","script":{"id":"95aaf96f-e23d-4ef7-a7c1-6716b53e3fac","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"40f71b1c-d14f-456c-a190-e2e96682b01d","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Flow: Info Requested","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"f6010ee0-92c0-4ce0-b942-d35955f64579","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a281f728-2273-4743-b2ec-4549dd614663","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"045ac937-5e17-4657-b7c7-2a62696a53b6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Info Requested","event":[{"listen":"prerequest","script":{"id":"dd7867c7-d6e1-4cd0-8c4a-d9e9515e61f4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                   pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"30b6f7c6-754e-4049-907e-8bc1e4d66a10","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"261b2299-fad1-4d8b-98b1-6b0d469d4486","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"informationRequested\": \"Test\",\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n  \"quotedLimit\": {{maxCreditLimit}},\r\n  \"estimatedUtilizedInputAmount\": 0,\r\n  \"indemnity\": {{indemnity}},\r\n  \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n  \"attachmentPeriod\": {{attachmentPeriod}},\r\n  \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n  \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n  \"quoteTypeId\": 2,\r\n   \"premiumRateByIc\": {{premiumRateByIc}},\r\n  \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n  \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n  \"isCancellableByIc\": true,\r\n  \"minPremiumAmount\": 1000,\r\n  \"minDepositAmount\": null,\r\n  \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n  \"icSubsidiaryId\": null,\r\n  \"icQuoteId\": null,\r\n  \"commissionRate\":{{commission}},\r\n  \"deductibleByIc\": {{deductibleByIp}},\r\n  \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n  \"carrierRatingByOther\": null,\r\n  \"havingSubjectivity\": null,\r\n  \"estimatedPremium\": 0,\r\n  \"estimatedBrokerCommission\": 0,\r\n  \"estimatedCoBrokerCommission\": 0\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/inforequested","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","inforequested"]}},"response":[]}],"_postman_id":"3d1fe25d-45ba-4f4d-89eb-5d2ffa9fdd55","event":[{"listen":"prerequest","script":{"id":"3e9ce94d-fc07-4e9c-9c57-0896f5bc0fda","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"763fbafe-5d18-4ef6-9028-2ace7925d44f","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"Flow: Flag As Pending Review","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"2bbd6e0b-f716-4207-9d34-45e4b606fc06","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"eebc7040-e708-4919-ad17-4bbd4fa22746","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"65c5e3eb-065c-4533-bc21-fd2b1fe1bde1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Flag as Pending Review","event":[{"listen":"prerequest","script":{"id":"27a17ad4-94be-4a82-8e27-5c495f2d7443","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));"," ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}"," ","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;"," ","            }","        }","","    }","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"ec22e531-612f-48b7-962b-a59fe5bf73a7","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"657dd727-379f-4dfb-bbc8-acfacd4fb38b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \n    \"quoteTypeId\": {{quoteTypeId}} ,\n\t\"premiumBasisTypeId\": {{premiumBasisTypeId}},\n\t\"quotedLimit\": {{maxCreditLimit}},\n\t\"indemnity\": {{indemnity}},\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\t\"attachmentPeriod\": {{attachmentPeriod}},\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n    \"premiumRateByIc\": {{premiumRateByIc}},\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\n\n    \"isCancellableByIc\": true,\n    \"minPremiumAmount\": 1000,\n    \"minDepositAmount\": null,\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\n    \"icPaper\": \"insurance paper\",\n    \"icQuoteId\": null,\n    \"commissionRate\":{{commission}},\n    \"daysToQuoteExpiration\": 30,\n    \"deductibleByIc\": {{deductibleByIp}},\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\n    \"carrierRatingByAmBestId\": null,\n    \"carrierRatingBySpId\": null,\n    \"carrierRatingByOther\": null,\n    \"havingSubjectivity\": true,\n    \"estimatedPremium\": {{estimatedPremium}},\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n    \"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/pendingreview","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","pendingreview"]}},"response":[]}],"_postman_id":"022e42ee-10df-4e88-9cc1-e3f3211c55ea","_postman_isSubFolder":true},{"name":"Flow: Modify RFQ","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"b8942b77-f6ce-4501-93dc-3106385eb0a8","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a5f6bb23-05a5-4559-a20a-d0de4bde43c6","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"8ae508c8-d61a-4d7c-ae3e-59ff6f3e25d3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Flag as Pending Review","event":[{"listen":"prerequest","script":{"id":"ed4bbde1-dde6-4b14-93d0-0694d05c053f","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"d42f5fe5-349a-4729-b4df-329a3bb5f16f","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"027e24cd-8909-4a77-9a85-7c0796c54aac","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n   \n    \"quoteTypeId\": {{quoteTypeId}},\n\t\"premiumBasisTypeId\": {{premiumBasisTypeId}},\n\t\"quotedLimit\": {{maxCreditLimit}},\n\t\"indemnity\": {{indemnity}},\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\t\"attachmentPeriod\": {{attachmentPeriod}},\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n    \"premiumRateByIc\": {{premiumRateByIc}},\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\n\n    \"isCancellableByIc\": true,\n    \"minPremiumAmount\": 1000,\n    \"minDepositAmount\": null,\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\n    \"icPaper\": \"insurance paper\",\n    \"icQuoteId\": null,\n    \"commissionRate\":{{commission}},\n    \"daysToQuoteExpiration\": 30,\n    \"deductibleByIc\": {{deductibleByIp}},\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\n    \"carrierRatingByAmBestId\": null,\n    \"carrierRatingBySpId\": null,\n    \"carrierRatingByOther\": null,\n    \"havingSubjectivity\": true,\n    \"estimatedPremium\": {{estimatedPremium}},\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n    \"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/pendingreview","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","pendingreview"]}},"response":[]},{"name":"Modify RFQ","event":[{"listen":"test","script":{"id":"fa7ec979-4b6b-473d-919b-d1f49170cf63","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4ac02319-1c18-4c84-8015-ab02de1cd218","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));","   pm.variables.set(\"deductibleByIc\", _.random(100,100000));"],"type":"text/javascript"}}],"_postman_id":"b4b05201-67bb-4da5-a0b5-d7484a6eb4ea","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\n\"premiumBasisTypeId\":{{premiumBasisTypeId}}, \n\"quotedLimit\": {{maxCreditLimit}}, \n\"attachmentPeriod\": {{attachmentPeriod}},\n\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n\"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \n\"carrierRatingByOther\": null,\n\"commissionRate\": {{commission}},\n\"deductibleByIc\": {{deductibleByIc}},\n\n\"estimatedBrokerCommission\": {{estimatedBrokerComission}},\n\"estimatedCoBrokerCommission\":{{estimatedCOBrokerComission}},\n\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n\"estimatedPremium\": {{estimatedPremium}},\n\"havingSubjectivity\": true,\n\"icQuoteId\": null,\n\"indemnity\": {{indemnity}},\n\"isCancellableByIc\": true,\n\n\"minDepositAmount\": null,\n\"minPremiumAmount\": null,\n\n\"premiumFundingDeadline\": null,\n\n\n\"quoteTypeId\": 2,\n\"unutilizedRateAnnum\": null,\n\"utilizedRateAnnum\": null,\n\"currencyCode\":\"USD\",\n\"estimatedWeightedPaymentTerm\":1\n\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/modifyrfq","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","modifyrfq"]}},"response":[]}],"_postman_id":"0bff826c-1769-4676-b2ba-d65f5ffe1046","_postman_isSubFolder":true},{"name":"Flow: Decline Quote (Last Look)","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"72eeb7a5-bcc2-4014-bafe-e68960596501","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c5816224-17a7-4d9e-bbeb-07657444a39c","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"528a8eff-0d59-4dd4-b7cc-dd57ece5680c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"f63713ee-db15-4cd7-a363-f4b0ec1189e6","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","            }","        }","","    }","","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"43d5e629-e6ef-4690-9186-0b47c082023e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"2828f912-a178-4cb5-a081-9b8fb5641165","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"24b878aa-0b8c-4ac6-8754-0f37dd728626","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"f8005ae2-a6d0-4c44-9e4e-29c612d69a7e","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"6d420ddd-658e-4597-9741-cd8d7f93d8d0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:19:44.975Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Decline_Quotes","event":[{"listen":"prerequest","script":{"id":"872489ba-a085-4fb8-8056-e994d81ee52c","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8c56d409-35fb-4a45-af4b-c6061bb7ebc4","exec":[" pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"3c584412-16ea-4b15-aa39-7242410dba51","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{  \r\n  \"quoteDeclineTypeId\": 2,\r\n  \"decliningReason\": \"Buyer Risk\",\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/decline","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","decline"]}},"response":[]}],"_postman_id":"32a6e10d-4041-4851-91d7-869aff1423c9","_postman_isSubFolder":true},{"name":"Flow: Withdraw Quote","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"db62a6bb-2e9c-43f7-996e-c0d23eb29fd4","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"d3bee9c0-493c-48d2-9096-493cbf4f9e40","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"b6e73cbe-f19b-4719-a55c-6b27b56ff5ad","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"9ecd6866-6a2c-430f-b4c0-509fd52a7db3","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"49d4f259-48f7-41db-8e13-0733c31578ed","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"c3e355cd-5424-4085-badf-431d806a1058","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"84af76b8-bf3f-400e-93ad-87ff158af3bc","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"2a697b9c-df07-44c8-84e7-e550641ecb54","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"e00d5f9a-888b-4c6a-b5a9-54a24ac34a6a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:24:18.775Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/ {{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes"," {{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Withdrawn","event":[{"listen":"test","script":{"id":"6e87617f-0903-4fb9-a873-e57837cbbbb9","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"5d9b19a4-e6fe-45cd-9763-4383f5934519","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"6b549410-2289-42d6-8115-d7c86c5d7737","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/withdrawn","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","withdrawn"]}},"response":[]}],"_postman_id":"b5ac4be7-e1a5-401c-be37-fb8696151a19","_postman_isSubFolder":true},{"name":"Flow: Accepted By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"eac18801-e61d-4380-b356-4a285eb3307b","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a889a2c7-2685-46ea-9535-539deeef71c4","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"db4e57a2-e8a7-485d-a776-ccad7fcacb94","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"ab1ec8a1-2331-4e92-8b8a-05413ee0b724","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);"," ","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","            }","        }","    }","","});","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"9d388dbb-ac13-4a44-b7ae-5b831edd0c13","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"ada0f539-7f3c-4a7f-9a58-036388eb532f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"36f79baa-3349-4e18-919b-570de4303bf7","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"7f547814-b4f5-4a32-88e8-107b17d40e04","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"93a41b3f-da11-47a3-841c-1e9118fd51c2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:29:18.390Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]}],"_postman_id":"8df545ce-6e8f-414d-8273-0d3cadd39c11","_postman_isSubFolder":true},{"name":"Flow: Accepted By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"000b22c2-10e8-4a69-8fc9-2b105cb596a3","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"4f23f238-e056-47c8-bb7d-d8fabcac76c9","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"ea58b678-68be-4a1f-adc5-7aa84dde4089","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"75821ffa-18a5-48d8-905f-eebefe74cfa2","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                ","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisType.id;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.environment.set(\"estimatedPremium\", estimatedPremium);","                pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","            }","        }","    }","","});"," "],"type":"text/javascript"}},{"listen":"test","script":{"id":"712f8acb-84a9-46da-bd87-ac89a8bcca9d","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"3fcb0c5a-08ee-4fd4-b8b0-85ef6656be31","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"4f94d2ec-8104-4501-b2a0-a66c6b4431ad","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"7b11f5f7-8604-44a1-b5f5-1273bce529ee","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"95a8bc52-813b-41fd-a774-133ab4835870","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n\n{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:29:18.390Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"c9d3932a-201d-4f8b-9bd9-4fc712ad46c3","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"353d0214-2128-40ce-8861-2d04f16428ab","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"a9e58247-c2c7-4750-b872-00cd9a628ee7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]}],"_postman_id":"bad2a9ec-a6b9-4b17-ae05-a6bd32e02d5d","_postman_isSubFolder":true},{"name":"Flow:End Transaction","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"b4bc9753-7a18-4b11-b2fc-255b1d60a886","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"6cb89d40-56c2-4832-90fb-b2b9fd25f3f9","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"70ed1590-67e5-414e-91f4-b40d27c7950c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"End Transaction","event":[{"listen":"test","script":{"id":"97404354-3a24-44b6-9799-5f2c22344e8a","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c8867c5c-25d9-431a-9c67-9c4c42cec412","exec":[""],"type":"text/javascript"}}],"_postman_id":"89852d30-1ec4-4a58-8279-4063eb9f6348","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{TRANSID}}/endtransaction","host":["{{baseURI}}"],"path":["api","Quotes","{{TRANSID}}","endtransaction"]}},"response":[]}],"_postman_id":"190b2b63-2d1d-4f1b-81e4-c67d0ffc97d4","_postman_isSubFolder":true},{"name":"Flow: Ammend Request By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"660015ac-f6d5-4aff-99ff-e293fa27137d","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c97f73c3-ff35-4782-a095-b039f90f773f","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"1e714fcc-4238-4d62-a86f-086d49447f75","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"026b77ea-9aea-4dd3-a2cd-456e8258eaf9","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\"+ pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                let quote =  responseJSONdata[i].quoteId;","                 pm.variables.set(\"QUOTE\", quote);","                 console.log(quote);","                 ","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","             //pm.variables.set(\"quoteTypeId\", _.random(1,2));","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisTypeId;","","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.environment.set(\"estimatedPremium\", estimatedPremium);","                        pm.environment.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.environment.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"b6b770ee-134a-4dba-ab2d-d7c158487ba5","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"21ec85e5-51eb-46cb-9756-1b7d3c44aeb0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"8268b7c3-46b3-4522-a495-610d32e55ff4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b7f301d1-f611-4425-881b-d1ebd92af6a9","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"67b51255-367c-4c0f-a51f-d0ee74856158","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:40:37.830Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"13f0a6f7-e232-47ca-999e-9a21b3932325","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"a783d473-2494-426d-a24e-4721624b1030","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"5c9a786d-c7e8-4523-8b8a-ea5c4f052d28","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IP","event":[{"listen":"prerequest","script":{"id":"c367c9fb-a2d6-49ee-97f0-2320f25053f8","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"quoteTypeId\",_.random(1,2));","    pm.variables.set(\"premiumRateByIc\",_.random(200,4000));    ","    pm.variables.set(\"minPremiumAmount\",_.random(1000,5000));       ","    pm.variables.set(\"minDepositAmount\",_.random(1000,5000));        ","    pm.variables.set(\"daysToQuoteExpiration\",_.random(1,30));       ","    pm.variables.set(\"deductableByIc\",_.random(500,1000));        ","    pm.variables.set(\"estimatedPremium\",_.random(1000,30000));","","   ","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"8e752921-332d-4870-991c-998caab3bc4b","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"e07d96b3-5e7d-4d33-8b5d-91123ec3b7ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"quotedLimit\": {{maxCreditLimit}},\r\n  \"premiumRateByIc\": {{premiumRateByIc}},\r\n  \"utilizedRateAnnum\": 0,\r\n  \"unutilizedRateAnnum\": 0,\r\n  \"isCancellableByIc\": {{isCancellable}},\r\n  \"minPremiumAmount\": {{minPremiumAmount}},\r\n  \"minDepositAmount\": {{minDepositAmount}},\r\n  \"premiumFundingDeadline\": \"2019-11-12T23:14:44.099Z\",\r\n  \"icPaper\": \"IcPaper\",\r\n  \"icQuoteId\": \"IcQuoteId\",\r\n  \"commissionRate\": 2.45,\r\n  \"daysToQuoteExpiration\": {{daysToQuoteExpiration}},\r\n  \"estimatedMaxPaymentTerm\":{{estimatedMaxPaymentTerm}},\r\n  \"deductableByIc\": {{deductableByIc}},\r\n  \"decuctablePercentageByIc\": 3,\r\n  \"currencyCode\":\"USD\",\r\n  \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\r\n  \"carrierRatingByAmBestId\": 25,\r\n  \"carrierRatingBySpId\": 7,\r\n  \"carrierRatingByOther\": \"carrierRatingByOther\",\r\n  \"havingSubjectivity\": true,\r\n  \"subjectivity\": \"reason subjectivity\",\r\n  \"estimatedPremium\": {{estimatedPremium}},\r\n  \"estimatedBrokerCommission\": 1332.13,\r\n  \"estimatedCoBrokerCommission\": 1332.13,\r\n  \"attachmentPeriod\":1,\r\n  \"premiumBasisTypeId\":1,\r\n  \"attachmentPeriodTypeId\":3,\r\n  \"attachmentPeriodStartDate\":\"2019-11-12\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/amendmentrequestbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","amendmentrequestbyip"]}},"response":[]}],"_postman_id":"c1c4a89b-43e3-401e-a4a9-3d4a2b466cc1","_postman_isSubFolder":true},{"name":"Flow: End Ammend Request By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"6f718493-00b2-48dc-87eb-2a74d5753103","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3469b78e-8083-4c78-8fec-6ce8c0c4f63d","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"c4418e17-2806-4657-8b22-9af97e0e97af","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"bb90d0a7-25f3-43d3-80a9-252307a4eb22","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","            }","        }","","    }","","});","","","","","","","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"09bded67-6b88-42ca-8927-6582690bab44","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"644a1e71-2786-4e0f-8d9f-54ac092888f3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"fa05499e-341a-4315-93f9-5c98cfc9a2c3","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"86240383-36ab-475b-949e-774119568c10","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"951e232c-38d7-47a8-84c2-f658a228257d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"26702989-1054-46e4-838f-c9b409f56095","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"f421c762-da25-4775-ad70-ea2a40fcb8e1","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"f3c3a66f-4d82-497d-884e-b09290f0b0a4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IP","event":[{"listen":"prerequest","script":{"id":"e958655c-7621-40fb-9369-0757489d3554","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","  pm.variables.set(\"quoteTypeId\",_.random(1,2));","    pm.variables.set(\"premiumRateByIc\",_.random(200,4000));    ","    pm.variables.set(\"minPremiumAmount\",_.random(1000,5000));       ","    pm.variables.set(\"minDepositAmount\",_.random(1000,5000));        ","    pm.variables.set(\"daysToQuoteExpiration\",_.random(1,30));       ","    pm.variables.set(\"deductableByIc\",_.random(500,1000));        ","    pm.variables.set(\"estimatedPremium\",_.random(1000,30000));","","   ","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));","   pm.variables.set(\"indemnity\", _.random(1,99));","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));","   pm.variables.set(\"isCancellable\", _.random(0,1));","   pm.variables.set(\"brokerId\", _.random(1,10));","   pm.variables.set(\"coBrokerId\", _.random(1,10));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"89fc4fe4-dc07-4b76-a90e-e279ac00c108","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"bbae7761-a900-44e4-a28a-bb28ddf61370","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n\r\n  \"quoteTypeId\": {{quoteTypeId}},\r\n  \"quotedLimit\": {{maxCreditLimit}},\r\n  \"premiumRateByIc\": {{premiumRateByIc}},\r\n  \"utilizedRateAnnum\": 0,\r\n  \"unutilizedRateAnnum\": 0,\r\n  \"isCancellableByIc\": {{isCancellable}},\r\n  \"minPremiumAmount\": {{minPremiumAmount}},\r\n  \"minDepositAmount\": {{minDepositAmount}},\r\n  \"premiumFundingDeadline\": \"2019-11-12T23:14:44.099Z\",\r\n  \"icPaper\": \"IcPaper\",\r\n  \"icQuoteId\": \"IcQuoteId\",\r\n  \"commissionRate\": 2.45,\r\n  \"daysToQuoteExpiration\": {{daysToQuoteExpiration}},\r\n  \"estimatedMaxPaymentTerm\":{{estimatedMaxPaymentTerm}},\r\n  \"deductableByIc\": {{deductableByIc}},\r\n  \"decuctablePercentageByIc\": 3,\r\n  \"currencyCode\":\"USD\",\r\n  \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\r\n  \"carrierRatingByAmBestId\": 25,\r\n  \"carrierRatingBySpId\": 7,\r\n  \"carrierRatingByOther\": \"carrierRatingByOther\",\r\n  \"havingSubjectivity\": true,\r\n  \"subjectivity\": \"reason subjectivity\",\r\n  \"estimatedPremium\": {{estimatedPremium}},\r\n  \"estimatedBrokerCommission\": 1332.13,\r\n  \"estimatedCoBrokerCommission\": 1332.13,\r\n  \"attachmentPeriod\":1,\r\n  \"premiumBasisTypeId\":1,\r\n  \"attachmentPeriodTypeId\":3,\r\n  \"attachmentPeriodStartDate\":\"2019-11-12\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/amendmentrequestbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","amendmentrequestbyip"]}},"response":[]},{"name":"End Ammendment By IP","event":[{"listen":"prerequest","script":{"id":"f8f18d5e-425e-4d1c-963d-22251ea6322e","exec":["setTimeout(function() {}, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function(err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                     }","        }","    }","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"10a2021c-dce7-4b94-9642-997bfb8d4e26","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"1550bab8-84fb-41ce-b467-743e44c75fff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/{{QUOTE}}/endamendmentbyip","host":["{{baseURI}}"],"path":["api","quotes","{{QUOTE}}","endamendmentbyip"]}},"response":[]}],"_postman_id":"a5705216-3981-4235-b202-1e8301608327","_postman_isSubFolder":true},{"name":"Flow: Coverage Cancel By IP","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"1dcfd2b2-aa3a-4009-a99c-f865485aa123","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"06e280f0-cd1c-4752-a9e6-ed26286b08ce","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"827e013b-0a48-4db4-bfc4-f2b4b7d9f7ee","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"60e23d00-b52c-42b8-933d-b9d9055de11a","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","","","","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});","","","","","","","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"365f8daf-0625-4d00-91b8-16471792c334","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"82bd3bc8-0388-423e-b18a-e2a78abf0ccf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"a76915b2-cca6-48ed-98ab-67755c10f2f2","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"14bef27c-e083-4473-b4e7-c646b4c4daa5","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"2f8907e8-b687-40c1-8dbe-a6a9629a78d2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"02dea71e-e9d6-464f-90a8-2d7a4ee35ec6","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"4353baea-5d8c-467e-be7f-8b9888c65ab8","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"9f0c8d02-27c9-4fb1-ad91-1931ddec71e3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Coverage Cancel By IP","event":[{"listen":"prerequest","script":{"id":"72b1c4de-814e-459d-86dc-1156592f54ef","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"930c9803-664c-4073-b898-2a23dea26a86","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"f0c79e5c-6499-4f66-8b1d-4d0d0f3493e5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/coveragecancelledbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","coveragecancelledbyip"]}},"response":[]}],"_postman_id":"3eec5a4e-60d6-45cf-b25a-57bae670f42e","_postman_isSubFolder":true},{"name":"Flow: Coverage Cancel By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"ab7c9082-8c52-4cba-b372-4e9509732902","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"aa5523d8-9516-4c61-af3e-cfd3589035f1","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"2930944d-f0c5-4c91-9dcf-466bdf8b0ca2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"60a7e0da-f230-4145-97af-6389de616731","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","               // pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","            }","        }","    }","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"184ce38a-b4f0-49f6-9c57-806e55e8b6c6","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"aff7961b-fd23-44b0-b5e8-5427689fda6a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\":2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes","event":[{"listen":"prerequest","script":{"id":"0fd7318c-8647-4200-b24a-3f79700c52f4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b54938bf-da4a-405e-ad4e-647205c9758f","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"c7a9d33a-b605-4f58-a216-c80c14425f97","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC","event":[{"listen":"prerequest","script":{"id":"32df1f84-f0ee-49fd-b1f0-4749f3e80b34","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"cc7d4112-9b6e-47fa-9fae-abc58ee05cfb","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"84de7669-aa08-4006-bf7b-993f9315d15c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Coverage Cancel By IC","event":[{"listen":"prerequest","script":{"id":"3f4f67de-7b12-4833-a6b6-1fd80ff025d9","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","  ","     pm.variables.set(\"cancellableActionTypeId\", _.random(1,6));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"30ee9a4b-9640-41e1-9a1a-ec12e9ba3825","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"30892536-4027-45fb-a8d7-e59dc7a1ce04","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"requestOriginTypeId\": 1\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/coveragecancelledbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","coveragecancelledbyip"]}},"response":[]}],"_postman_id":"075a63a8-cc87-4022-97d0-393bf8620ea3","_postman_isSubFolder":true},{"name":"Flow: Ammend Coverage By IC","item":[{"name":"Post_RFQ","event":[{"listen":"prerequest","script":{"id":"3d778958-41f1-4f2d-860b-d0f263c2aea0","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Debtors\");\r","\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","    var url = pm.variables.get(\"baseURI\");\r","    url = url.concat(\"/api/DnB?\");\r","    var jsonData = res.json();\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  // console.log(\"count \"+i);\r","  // console.log(\"Sic:\"+jsonData[i]);\r","  //  console.log(\"addressLine1:\"+jsonData[i].addressLine1);\r","    pm.variables.set(\"duns\",jsonData[i].duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].name);    \r","    pm.variables.set(\"sicCode\",jsonData[i].sicCode);       \r","    pm.variables.set(\"addressLine1\",jsonData[i].addressLine1);        \r","    pm.variables.set(\"city\",jsonData[i].city);       \r","    pm.variables.set(\"stateProvince\",jsonData[i].stateProvince);        \r","    pm.variables.set(\"postalCode\",jsonData[i].postalCode);\r","    pm.variables.set(\"countryCode\",jsonData[i].countryCode);\r","    pm.variables.set(\"countryId\",jsonData[i].country.id); \r","    pm.variables.set(\"name\",jsonData[i].country.name);\r","    pm.variables.set(\"id\",jsonData[i].id);\r","    pm.variables.set(\"countryName\",jsonData[i].countryName);   \r","   \r","   pm.variables.set(\"premiumBasisTypeId\", _.random(1,6));\r","   pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","   pm.variables.set(\"indemnity\", _.random(1,99));\r","   pm.variables.set(\"estimatedWeightedPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"estimatedMaxPaymentTerm\", _.random(1,10));\r","   pm.variables.set(\"attachmentPeriod\", _.random(1,20));\r","   pm.variables.set(\"attachmentPeriodTypeId\", _.random(1,4));\r","   pm.variables.set(\"isCancellable\", _.random(0,1));\r","    pm.variables.set(\"premiumRateByIp\", _.random(1,20));\r","   \r","\r","   //pm.variables.set(\"brokerId\", _.random(1,10));\r","   //pm.variables.set(\"coBrokerId\", _.random(1,10));\r"," });\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"75621efc-d985-441d-88d4-8c70b262a7f4","exec":["pm.test(\"Status code is 201\", function () {","   pm.response.to.have.status(201);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"Created\");","});","","pm.test(\"Body is correct\", function () {","  var jsonData= pm.response.json();","  pm.expect(jsonData).to.be.a('number');","});","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","var transId= pm.response.json();","console.log(transId);","pm.variables.set(\"TRANSID\",transId);","//var QUOTE=pm.environment.get(\"qId\");","//console.log(QUOTE);"],"type":"text/javascript"}}],"_postman_id":"142aa554-4c60-4e84-91e4-9e197e552830","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"debtor\": {\n        \"duns\": \"{{duns}}\",\n        \"name\": \"{{debtorName}}\",\n        \"addressLine1\": \"{{addressLine1}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\",\n        \"stateProvince\": \"{{stateProvince}}\",\n        \"countryCode\": \"{{countryCode}}\",\n        \"countryName\": \"{{name}}\",\n        \"detailsCountryName\": \"{{countryName}}\",\n        \"phone\": null\n    },\n  \"carriersPolicy\": [\n    {\n      \"carrierId\": {{carrierId}},\n      \"carrierName\": \"{{InsCarrierName}}\",\n\t  \"policyId\": \"{{policyId}}\"\n    }\n  ],\n\n    \"premiumBasisTypeId\": {{premiumBasisTypeId}},\n    \"quotedLimit\": {{maxCreditLimit}},\n    \"indemnity\": {{indemnity}},\n    \"estimatedWeightedPaymentTerm\": {{estimatedWeightedPaymentTerm}},\n    \"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\n    \"attachmentPeriod\": {{attachmentPeriod}},\n    \"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\n    \"attachmentPeriodStartDate\": \"2019-10-20T00:00:00\",\n    \"isCancellable\": {{isCancellable}},\n\n    \"currencyCode\": \"USD\",\n    \"productId\": 2,\n    \"premiumRateByIp\": {{premiumRateByIp}},\n    \"estimatedUtilizedInputAmount\": null,\n    \"insuredAssetDescription\": null,\n    \"havingPastDueHistory\": false,\n    \"havingSpecialCondition\": false,\n    \"deductibleByIp\": null,\n    \"deductiblePercentageByIp\": null,\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"additionalInsured\": null,\n    \"lossPayee\": null,\n    \"requestCancellableByIp\": true,\n    \"supplementalFileIds\": ,\n    \"seller\": null\n    \n}\n\n\n\n\n\n\n\n\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/quotes/requestforquote","host":["{{baseURI}}"],"path":["api","quotes","requestforquote"]}},"response":[]},{"name":"Submit_Quotes","event":[{"listen":"prerequest","script":{"id":"9de4475f-0ee9-4421-9b63-3ee58917b34d","exec":["setTimeout(function () { }, pm.variables.get(\"stateChangeDelay\"));","","","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes&transId=\" + pm.variables.get(\"TRANSID\"));","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessTokenIP\")","    }","}, function (err, res) {","    var responseJSONdata = res.json();","","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","            if (responseJSONdata[i].transId === pm.variables.get('TRANSID')) {","                let quote = responseJSONdata[i].quoteId;","                pm.variables.set(\"QUOTE\", quote);","                console.log(quote);","","                pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                //pm.variables.set(\"quoteTypeId\", _.random(1, 2));","                pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","                pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","                pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","                pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","                pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","                pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","                pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","                pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","                pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","","                let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","","                let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","                let commission = pm.environment.get(\"commission\");// 17.5;","","","                let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","                let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","                let ratePA = responseJSONdata[i].premiumRateByIp;","                let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","                var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","                let premiumBasis = responseJSONdata[i].premiumBasisTypeId;","","                if (premiumBasis === 1) //Gross Limit","                {","                    //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                    let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 2) //Net Limit","                {","                    //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                    let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity / 100) * (ratePA / 100)) * riskPeriod) / 360;","                    estimatedPremium = round(premium, 2);","                    // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                    estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                    //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                    estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                }","","                if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                    // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                    let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                    estimatedPremium = round(premium, 2);","                    //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                    estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                    estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                }","","                pm.variables.set(\"estimatedPremium\", estimatedPremium);","                pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                console.log(\"commission - \", commission);","                console.log(\"utilizedRatePA - \", utilizedRatePA);","                console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                console.log(\"estimatedPremium - \", estimatedPremium);","                console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                console.log(\"estimatedBrokerComission - \", estimatedCOBrokerComission);","","                let moment = require('moment');","                let fundingDate = moment().add(10, 'days');","                console.log(\"Funding Date\", fundingDate);","                pm.environment.set(\"premiumFundingDeadline\", fundingDate);","                break;","","","            }","        }","","    }","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8cf170fa-559a-4d5d-9b09-d3a98a741d8c","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","     ","});","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"6ddb9f30-7d8b-448b-ba4a-63bfc07fd6cc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}z\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quotesubmit","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quotesubmit"]}},"response":[]},{"name":"Accepted_Quotes Copy","event":[{"listen":"prerequest","script":{"id":"9ca16e41-e044-492d-8c66-2fa40508af98","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"fefb8ed2-35cb-4bea-b29f-dcfc3f6c9d60","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"0f110aa7-d44e-42f2-a655-78ad29024f36","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"attachmentPeriodStartDate\": \"2020-08-03T12:44:35.077Z\",\n  \"allocationRatio\": 1,\n  \"aggregateLimit\": 1,\n  \"requestOriginTypeId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyip","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyip"]}},"response":[]},{"name":"Accepted By IC Copy","event":[{"listen":"prerequest","script":{"id":"60325f7d-832e-4d85-8803-e152e0528b87","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"a8c9b9de-4474-440b-9965-f91a7315e12d","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"94d000e9-d911-4c5c-966a-14ab92d8fea0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n  \"requestOriginTypeId\": 1\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/quoteacceptedbyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","quoteacceptedbyic"]}},"response":[]},{"name":"Ammend Coverage By IC","event":[{"listen":"prerequest","script":{"id":"058b74fa-fc01-4a8b-94b8-f70954115db8","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  ","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/quotes?screenname=pendingquotes\");","","function round(value, decimals) {","    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);","}","","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")","      }","}, function (err, res) {","    var responseJSONdata = res.json();","   ","    if (res !== '') {","        for (var i = 0; i < responseJSONdata.length; i++) {","             if (responseJSONdata[i].transId === pm.variables.get('TRANSID')){","                               ","                 pm.variables.set(\"premiumRateByIc\", responseJSONdata[i].premiumRateByIp);","                  // pm.variables.set(\"quoteTypeId\", 2);","            pm.variables.set(\"maxCreditLimit\", responseJSONdata[i].maxCreditLimit);","            pm.variables.set(\"indemnity\", responseJSONdata[i].indemnity);","            pm.variables.set(\"estimatedMaxPaymentTerm\", responseJSONdata[i].estimatedMaxPaymentTerm);","            pm.variables.set(\"attachmentPeriod\", responseJSONdata[i].attachmentPeriod);","            pm.variables.set(\"attachmentPeriodTypeId\", responseJSONdata[i].attachmentPeriodTypeId);","            pm.variables.set(\"attachmentPeriodStartDate\", responseJSONdata[i].attachmentPeriodStartDate);","            pm.variables.set(\"deductibleByIp\", responseJSONdata[i].deductibleByIp);","            pm.variables.set(\"deductiblePercentageByIp\", responseJSONdata[i].deductiblePercentageByIp);","            pm.variables.set(\"premiumBasisTypeId\", responseJSONdata[i].premiumBasisTypeId);","            pm.variables.set(\"cancellableActionTypeId\", responseJSONdata[i].premiumBasisTypeId);","            ","            let utilizedRatePA = pm.environment.get(\"utilizedRatePA\")// 2.5;","            ","            let unUtilizedRatePA = pm.environment.get(\"unUtilizedRatePA\");//3.5;","            let commission = pm.environment.get(\"commission\");// 17.5;","","            ","            ","            let riskPeriod = (responseJSONdata[i].estimatedMaxPaymentTerm + responseJSONdata[i].attachmentPeriod);//\t485","            let maxCreditLimit = responseJSONdata[i].maxCreditLimit;","            let ratePA = responseJSONdata[i].premiumRateByIp;","            let estimatedUtilizedInput = responseJSONdata[i].estimatedUtilizedInputAmount;","            var estimatedPremium, estimatedBrokerComission, estimatedCOBrokerComission;","            let premiumBasis =  responseJSONdata[i].premiumBasisType.id;","","if (premiumBasis === 1 ) //Gross Limit","                        { ","                              //Estimated Premium for Gross Limit = Credit Limit * (Longest Risk Period / 360 days) * Premium Rate P.A","                             let premium = (maxCreditLimit * (riskPeriod / 360) * ratePA) / 100;","                             estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                             estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                             estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2); ","                        }","","                     if ( premiumBasis === 2) //Net Limit","                        {","                            //Estimated Premium for Gross Limit =  ((Maximum Credit Limit * Rate P.A.) * Risk Period)/360","                            let premium = ((maxCreditLimit * (responseJSONdata[i].indemnity/100) * (ratePA/100)) * riskPeriod )/ 360;","                            estimatedPremium = round(premium, 2);","                             // Broker Commission\\t\\\"(Estimated Premium Amount * Commission Percentage)*(LiquidX Commission Share %) Note : Default LiquidX Commission Share % = 50% day one.\\\"","                            estimatedBrokerComission = (((estimatedPremium * commission) * 0.5) / 100).toFixed(2);","                             //Co-Broker Commission\\t(Estimated Premium Amount * Commission Percentage)*(1-LiquidX Commission Share %)","                            estimatedCOBrokerComission = (((estimatedPremium * commission) * (1 - 0.5)) / 100).toFixed(2);","                        }","","                     if (premiumBasis === 3 || premiumBasis === 4 || premiumBasis === 5) {  //3: \"INSURABLE SALES\",  4: \"MONTH END A/R BALANCES\", 5: \"MONTH END GROSS EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100)) * Risk Period)/360) + (((Maximum Credit Limit – Estimated Utilized Input) * (Unutilized Rate P.A./100) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + (((maxCreditLimit - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","","                        if (responseJSONdata[i].premiumBasisType.id === 6) { //6: \"MONTH END NET EXPOSURE\"","                            // (((Estimated Utilized Input* (Utilized Rate P.A./100))* Risk Period)/360) + ((((Maximum Credit Limit * (Indemnity %/100)) – Estimated Utilized Input) * (Unutilized Rate P.A./100)) * Risk Period)/360)","                            let premium = (((estimatedUtilizedInput * (utilizedRatePA / 100)) * riskPeriod) / 360) + ((((maxCreditLimit * (responseJSONdata[i].indemnity / 100)) - estimatedUtilizedInput) * (unUtilizedRatePA / 100) * riskPeriod) / 360);","                            estimatedPremium = round(premium, 2);","                            //ESTIMATED BROKER COMMISSION\test premium amount * commission % / 2\t","                            estimatedBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                            estimatedCOBrokerComission = (estimatedPremium * commission / 200).toFixed(2);","                        }","                        ","                        pm.variables.set(\"estimatedPremium\", estimatedPremium);","                        pm.variables.set(\"estimatedBrokerComission\", estimatedBrokerComission);","                        pm.variables.set(\"estimatedCOBrokerComission\", estimatedCOBrokerComission);","                        console.log(\"commission - \", commission);","                        console.log(\"utilizedRatePA - \", utilizedRatePA);","                        console.log(\"unUtilizedRatePA - \", unUtilizedRatePA);","                        console.log(\"estimatedPremium - \",  estimatedPremium);","                        console.log(\"estimatedBrokerComission - \", estimatedBrokerComission);","                        console.log(\"estimatedBrokerComission - \",  estimatedCOBrokerComission);","","","","           ","             ","            let moment = require('moment');","let fundingDate = moment().add(10, 'days');","console.log(\"Funding Date\", fundingDate);","pm.environment.set(\"premiumFundingDeadline\", fundingDate);////z","                 break;","                 ","                 ","             }","        }","        ","    }","    ","});"," "," "," "," "," "," ","",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"a32fe575-3f18-4d4a-91c3-2a35f18d9322","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"c986ebb7-ddde-4485-a0aa-36f16d3499e7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIC}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \r\n\r\n  \"quoteTypeId\": 2,\r\n  \"premiumBasisTypeId\": {{premiumBasisTypeId}},\r\n\t\"quotedLimit\": {{maxCreditLimit}},\r\n\t\"indemnity\": {{indemnity}},\r\n\t\"estimatedMaxPaymentTerm\": {{estimatedMaxPaymentTerm}},\r\n\t\"attachmentPeriod\": {{attachmentPeriod}},\r\n\t\"attachmentPeriodTypeId\": {{attachmentPeriodTypeId}},\r\n\t \"attachmentPeriodStartDate\":\"{{attachmentPeriodStartDate}}\", \r\n    \"premiumRateByIc\": {{premiumRateByIc}},\r\n    \"utilizedRateAnnum\": {{utilizedRatePA}},\r\n    \"unutilizedRateAnnum\": {{unUtilizedRatePA}},\r\n    \"isCancellableByIc\": true,\r\n    \"minPremiumAmount\": 1000,\r\n    \"minDepositAmount\": null,\r\n    \"premiumFundingDeadline\": \"{{premiumFundingDeadline}}\",\r\n    \"icPaper\": \"insurance paper\",\r\n    \"icQuoteId\": null,\r\n    \"commissionRate\":{{commission}},\r\n    \"daysToQuoteExpiration\": 30,\r\n    \"deductibleByIc\": {{deductibleByIp}},\r\n    \"deductiblePercentageByIc\": {{deductiblePercentageByIp}},\r\n    \"carrierRatingByAmBestId\": null,\r\n    \"carrierRatingBySpId\": null,\r\n    \"carrierRatingByOther\": null,\r\n    \"havingSubjectivity\": true,\r\n    \"estimatedPremium\": {{estimatedPremium}},\r\n    \"estimatedBrokerCommission\": {{estimatedBrokerComission}},\r\n    \"estimatedCoBrokerCommission\": {{estimatedCOBrokerComission}},\r\n\r\n      \"cancellableActionTypeId\": {{cancellableActionTypeId}}\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Quotes/{{QUOTE}}/amendcoveragebyic","host":["{{baseURI}}"],"path":["api","Quotes","{{QUOTE}}","amendcoveragebyic"]}},"response":[]}],"_postman_id":"11614ef5-7862-4a09-8b4f-b0a2020cef74","_postman_isSubFolder":true}],"_postman_id":"2ce28f43-fdb6-4fc4-bc42-3463c06da0a0","event":[{"listen":"prerequest","script":{"id":"78a1caa0-f26f-4e28-b8b2-697ba0de4b4e","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"c14a4403-c359-4cb1-a114-0608fd6fdc07","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true},{"name":"ADMIN_user","item":[{"name":"Policy","item":[{"name":"POST PUT as Draft and DELETE","item":[{"name":"Post Save Policy As Draft","event":[{"listen":"prerequest","script":{"id":"d7d8c15e-be9a-48cd-8401-d79b85c94d1c","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","   var jsonData = res.json();\r","    \r","    \r","     for (var i = 0; i < jsonData.length; i++) {\r","       \r","     \r","             if (jsonData[i].id == pm.environment.get('policy'))\r","             {\r","              \r","                pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","                console.log(jsonData[i].insuredParty.id);\r","                pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);                 \r","                pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","                break;\r","             } \r","         \r","}\r","\r"," });\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"51c8b339-0e2e-4bf8-94d8-08cffae243e6","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","pm.test(\"Status code is 201\", function () {\r","   pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Status code name has string\", function () {\r","    pm.response.to.have.status(\"Created\");\r","});\r","\r","pm.test(\"Body is correct\", function () {\r","  var jsonData= pm.response.json();\r","  pm.expect(jsonData).to.be.a('number');\r","});\r","\r","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var policyId= pm.response.json();\r","console.log(policyId);\r","pm.environment.set(\"POLICYID\",policyId);\r",""],"type":"text/javascript"}}],"_postman_id":"400ca364-ef02-4cf8-8fb9-dd48ba541f87","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"API_POST_DRAFT_TEST\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": null,\n    \"expiryDate\": null,\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/draft","host":["{{baseURI}}"],"path":["api","Policies","draft"]}},"response":[]},{"name":"Put_Policy as Draft","event":[{"listen":"test","script":{"id":"c6f401d1-a0a2-4dee-9fe8-64df1cbec13f","exec":["\r"," setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful PUT Request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","pm.test(\"Successful PUT Request\"), function(){\r","    pm.expect(pm.response.body).to.noteql(0);\r","};\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3437bdd1-4d9a-46df-ab4b-b9bc451370b4","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenADMIN\")\r","      }\r","      \r","}, function (err, res) {\r","\r","  var jsonData = res.json();\r","    for (var i = 0; i < jsonData.length; i++) {\r","   \r","             if (jsonData[i].id === pm.environment.get('POLICYID')){\r","                console.log(jsonData[i].id);\r","              pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","              console.log(jsonData[i].insuredParty.id);\r","              pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","              pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","}\r","    }\r","});"],"type":"text/javascript"}}],"_postman_id":"3720221e-f2bf-458d-81d1-23a41b53fc28","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"insuredPartyId\":{{insuredPartyId}},\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"API_POST_DRAFT_TEST\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": null,\n    \"expiryDate\": null,\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}/draft","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}","draft"]}},"response":[]},{"name":"Delete_Policy By ID","event":[{"listen":"prerequest","script":{"id":"e116f4e1-caf6-4e9a-bc1b-c2a79b8e5161","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"433409ed-7ca5-4dac-9d2f-e216d534a7e1","exec":["\r"," setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r",""],"type":"text/javascript"}}],"_postman_id":"fef0e6b9-af0f-48c4-8c13-7d21bcda7ac0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}"]}},"response":[]}],"_postman_id":"749b9ec0-5c17-4095-8a3e-c37be04cf5ff","_postman_isSubFolder":true},{"name":"POST PUT as Incomplete","item":[{"name":"Post Save Policy As Incomplete","event":[{"listen":"prerequest","script":{"id":"2982d011-c832-4a30-b903-450609c8c54f","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","   var jsonData = res.json();\r","    \r","    \r","     for (var i = 0; i < jsonData.length; i++) {\r","       \r","     \r","             if (jsonData[i].id == pm.environment.get('policy'))\r","             {\r","              \r","                pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","                console.log(jsonData[i].insuredParty.id);\r","                pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);                 \r","                pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","                break;\r","             } \r","         \r","}\r","\r"," });\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"6f8c1322-0466-4e6a-b3b4-cac4f0577dd3","exec":["pm.test(\"Status code is 201\", function () {\r","   pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Status code name has string\", function () {\r","    pm.response.to.have.status(\"Created\");\r","});\r","\r","pm.test(\"Body is correct\", function () {\r","  var jsonData= pm.response.json();\r","  pm.expect(jsonData).to.be.a('number');\r","});\r","\r","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","var policyId= pm.response.json();\r","console.log(policyId);\r","pm.environment.set(\"POLICYID\",policyId);\r",""],"type":"text/javascript"}}],"_postman_id":"b513ba4e-3cf3-4ad4-93ed-1e55b7606225","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"API_POST_DRAFT_TEST\",\n    \"carrierPolicyNumber\": \"\",\n \"inceptionDate\": \"2020-3-1T00:00:00.000Z\",\n    \"expiryDate\": \"2020-6-26T00:00:00.000Z\",\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}\n   \n   ","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/incomplete","host":["{{baseURI}}"],"path":["api","Policies","incomplete"]}},"response":[]},{"name":"Put_Policy as Incomplete","event":[{"listen":"test","script":{"id":"614b0397-2a6d-454a-b343-d27ae3588fc0","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3a3a6f4d-7617-4640-8d29-79cbd0c050cd","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenADMIN\")\r","      }\r","      \r","}, function (err, res) {\r","\r","  var jsonData = res.json();\r","    for (var i = 0; i < jsonData.length; i++) {\r","   \r","             if (jsonData[i].id === pm.environment.get('POLICYID')){\r","                  pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","                console.log(jsonData[i].insuredParty.id);\r","                pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","                console.log(jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);                 \r","                pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","    }\r","    }\r","});"],"type":"text/javascript"}}],"_postman_id":"abf9a85d-1118-46d9-9675-8c32b4c57fea","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n   \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"PUT POLICY as INCOMPLETE\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": \"2020-6-10T00:00:00.000Z\",\n    \"expiryDate\": \"2020-6-27T00:00:00.000Z\",\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [\n        {\n            \"policyDocumentTypeId\": 1,\n            \"fileName\": \"11.txt\",\n            \"fileGuid\": \"225e2a95-c61e-468f-9b4d-ad53dfaa7c5c\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        },\n        {\n            \"policyDocumentTypeId\": 2,\n            \"fileName\": \"Buyer Schedule CSV Template 2 (populated).txt\",\n            \"fileGuid\": \"226ea38f-0d1a-4389-a7e3-aa3e5e0f7a72\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        }\n    ],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}/incomplete","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}","incomplete"]}},"response":[]}],"_postman_id":"fd3240eb-479f-47cc-aa2f-ae28ae11e9e0","_postman_isSubFolder":true},{"name":"Get_Policy","event":[{"listen":"test","script":{"id":"c06f0bea-78f5-439c-95d4-1927a8895b8e","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrier).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuredParty).to.not.eql(null);\r","      \r","    }         \r","    \r","}); \r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"44918ca8-884c-4a80-b60c-04f749832205","exec":[""],"type":"text/javascript"}}],"_postman_id":"f5aca94a-1ef6-47f5-8f43-a5439b36f9ab","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies?count=100","host":["{{baseURI}}"],"path":["api","Policies"],"query":[{"key":"count","value":"100"}]}},"response":[]},{"name":"Get_Policy By ID","event":[{"listen":"prerequest","script":{"id":"10128a71-66da-48e7-88a9-b6a4822fed64","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","  var jsonData = res.json();\r","  \r","\r","  var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  pm.variables.set(\"policyId\", jsonData[i].id);\r","}\r",");"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b4206b36-0e4e-4a0b-a0b8-3d34df8820d9","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}}],"_postman_id":"ad450bb5-989d-4dbe-a02b-5a8cec6a46a5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}"]}},"response":[]},{"name":"Get_Policy By ID PolicyDocuments","event":[{"listen":"test","script":{"id":"8e2727e1-bf6b-42e1-aad2-ac089a8c2e5c","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a5c1f63a-dadd-4d94-aecc-ccfc3e1f004d","exec":["\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","  url: url,\r","  method: 'GET',\r","  header: {\r","    'Accept': 'application/json',\r","    'Content-Type': 'application/json',\r","    'Authorization': 'bearer ' + pm.variables.get(\"accessTokenADMIN\")\r","  }\r","\r","}, function (err, res) {\r","\r","\r","  var jsonData = res.json();\r","  \r","\r","  var i=Math.floor((Math.random() * jsonData.length) + 1);\r","  pm.variables.set(\"policyId\", jsonData[i].id);\r","}\r",");"],"type":"text/javascript"}}],"_postman_id":"cffee374-1658-4d0f-9505-142ba17cd8cf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Policies/{{policyId}}/policydocuments","host":["{{baseURI}}"],"path":["api","Policies","{{policyId}}","policydocuments"]}},"response":[]},{"name":"Put_Policy as Bound","event":[{"listen":"test","script":{"id":"82038183-3ca9-429f-b9dd-473e48a647aa","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200);\r","    \r","});\r","\r","\r","\r","pm.test(\"To check Policy details is not null (id,name,insuranceCarrier,insuredParty)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].name).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].lqxPolicyNumber).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].carrierPolicyNumber).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].inceptionDate).to.not.eql(null);\r","      //pm.expect(responseJSONdata[i].expiryDate).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].stateId).to.not.eql(null);\r","      \r","      \r","    }         \r","    \r","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"431e3f5f-8d7b-4298-8312-f1315b61e75c","exec":["  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));\r","\r","var url = pm.variables.get(\"baseURI\");\r","url = url.concat(\"/api/Policies?count=100\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenADMIN\")\r","      }\r","      \r","}, function (err, res) {\r","\r","  var jsonData = res.json();\r","    for (var i = 0; i < jsonData.length; i++) {\r","   \r","             if (jsonData[i].id === pm.environment.get('POLICYID')){\r","                console.log(jsonData[i].id);\r","              pm.variables.set(\"insuredPartyId\",jsonData[i].insuredParty.id);\r","              console.log(jsonData[i].insuredParty.id);\r","              pm.variables.set(\"insuranceCarrierId\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierId);\r","              pm.variables.set(\"insuranceCarrierName\",jsonData[i].policyInsuranceCarriers[0].insuranceCarrierName);\r","}\r","    }\r","});"],"type":"text/javascript"}}],"_postman_id":"3e1c9bf0-8416-45b6-a10f-8635ce26915d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n  \"insuredPartyId\": {{insuredPartyId}},\n    \"policyInsuranceCarriers\": [\n        {\n            \"insuranceCarrierId\": {{insuranceCarrierId}},\n            \"insuranceCarrierName\": \"{{insuranceCarrierName}}\"\n        }\n    ],\n    \"brokerId\": 6,\n    \"coBrokerId\": 7,\n    \"name\": \"PUT POLICY as INCOMPLETE\",\n    \"carrierPolicyNumber\": \"\",\n    \"inceptionDate\": \"2020-6-17T00:00:00.000Z\",\n    \"expiryDate\": \"2020-6-27T00:00:00.000Z\",\n    \"lossPayee\": \"\",\n    \"additionalInsuredName\": \"\",\n    \"documentFileIds\": [\n        {\n            \"policyDocumentTypeId\": 1,\n            \"fileName\": \"11.txt\",\n            \"fileGuid\": \"225e2a95-c61e-468f-9b4d-ad53dfaa7c5c\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        },\n        {\n            \"policyDocumentTypeId\": 2,\n            \"fileName\": \"Buyer Schedule CSV Template 2 (populated).txt\",\n            \"fileGuid\": \"226ea38f-0d1a-4389-a7e3-aa3e5e0f7a72\",\n            \"documentPath\": \"\",\n            \"description\": \"\"\n        }\n    ],\n    \"policyGoverningLawIds\": [],\n    \"policyTransactionCurrencyCodes\": [],\n    \"perilCoverageClaimFilingPeriod\": [],\n    \"perilCoverageWaitingPeriod\": [],\n    \"policyPremiumSchedule\": {\n        \"premiumRptPeriodDetails\": []\n    },\n    \"policyBuyerSchedules\": [],\n    \"policyCountrySchedules\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Policies/{{POLICYID}}/bound","host":["{{baseURI}}"],"path":["api","Policies","{{POLICYID}}","bound"]}},"response":[]}],"_postman_id":"3bd5d5eb-92c8-4354-a8ca-726698b16390","_postman_isSubFolder":true},{"name":"Indicative Quotes","item":[{"name":"POST and DELETE Quotes","item":[{"name":"Post_Indicative Quotes","event":[{"listen":"test","script":{"id":"95f74cd0-5a55-440b-8fe7-3beec8c1130d","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitTotal).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorsCount).to.not.eql(null);\r","    }         \r","    var IndQuoteId= pm.response.json();\r","console.log(IndQuoteId);\r","pm.environment.set(\"IndQuoteId\",IndQuoteId);\r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"725007ed-73f7-42a1-9ffa-2cb415a50f96","exec":["var url = pm.variables.get(\"baseURI\");\r","   url = url.concat(\"/api/Indicative/quotes\");\r","\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessTokenIP\")\r","              }\r","      \r","}, function (err, res) {\r","    \r","   \r","    var jsonData = res.json();\r","    console.log(jsonData);\r","    var i=Math.floor((Math.random() * jsonData.length) + 1);\r","\r"," \r","    pm.variables.set(\"duns\",jsonData[i].accountDebtor.duns);\r","    console.log(jsonData[i].accountDebtor.duns);\r","    pm.variables.set(\"debtorName\",jsonData[i].accountDebtor.name);   \r","    console.log(jsonData[i].accountDebtor.name); \r","    pm.variables.set(\"countryCode\",jsonData[i].accountDebtor.countryCode);\r","    console.log(jsonData[i].accountDebtor.countryCode);\r","    pm.variables.set(\"maxCreditLimit\", _.random(100000,9999999));\r","    pm.variables.set(\"indemnity\", _.random(1,99));\r","    pm.variables.set(\"premiumRate\", _.random(2,99));\r","   \r","    //console.log(jsonData[i].insuranceCarrierId);\r","  \r","    \r"," });\r","\r",""],"type":"text/javascript"}}],"_postman_id":"f474500e-d3b9-4dd6-bbb1-5fd1c33e1a4e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"[\n    {\n        \"insuranceCarrierId\": {{carrierId}},\n        \"maxCreditLimit\": {{maxCreditLimit}},\n        \"indemnity\": {{indemnity}},\n        \"premiumRate\": 40,\n        \"postedDaysToQuoteExpiration\": 2,\n        \"accountDebtor\": {\n            \"duns\": \"{{duns}}\",\n            \"name\": \"{{debtorName}}\",\n            \"countryCode\": \"{{countryCode}}\"\n        }\n    }\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Indicative/quotes","host":["{{baseURI}}"],"path":["api","Indicative","quotes"]}},"response":[]},{"name":"Delete_Indicative Quotes","event":[{"listen":"test","script":{"id":"ca2561be-07e7-4b66-aceb-8b93c7d7aacf","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitTotal).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorsCount).to.not.eql(null);\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ce12e2bf-d3c1-483e-8c9a-33a2a7a6e5a6","exec":[""],"type":"text/javascript"}}],"_postman_id":"6d9ffb94-97a0-4957-98bc-20b8ec08b2a5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/Indicative/quotes/{{IndQuoteId}}","host":["{{baseURI}}"],"path":["api","Indicative","quotes","{{IndQuoteId}}"]}},"response":[]}],"_postman_id":"19e90703-ed67-46f0-9bb0-9d2a50886eee","_postman_isSubFolder":true},{"name":"Get_Indicative Quotes","event":[{"listen":"test","script":{"id":"3757f64d-d59d-4eb6-ae5f-4fc72eb7fdca","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].id).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].insuranceCarrierId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].accountDebtorId).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryCode).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].duns).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].countryName).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimit).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].indemnity).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].premiumRate).to.not.eql(null);\r","\r","\r","    }         \r","    \r","}); \r","\r","\r","pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){\r","    pm.expect(responseJSONdata.length).to.be.above(0);\r","});\r","\r","\r","\r",""],"type":"text/javascript"}}],"_postman_id":"7538cfae-42b6-49a6-97ad-fe7ef83ad22d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Indicative/quotes","host":["{{baseURI}}"],"path":["api","Indicative","quotes"]}},"response":[]},{"name":"Get_Quote Summary","event":[{"listen":"test","script":{"id":"07989f5d-4a32-4c92-a7fd-cb801c931275","exec":["var responseJSONdata = JSON.parse(responseBody);\r","\r","pm.test(\"Successful GET request\", function () {\r","    pm.expect(pm.response.code).to.eql(200)});\r","    \r","\r","\r","\r","pm.test(\"To check Activity Monitor details is not null (transactionId,insuredPartyId,productCode,leadingQuoteStateName,carriersCount,quotesCount,createdBy,createdOn,updatedBy,updatedOn,originalQuoteSummary,mostRecentQuoteSummary,statusSummary)\" , function(){\r","    for (var i=0; i < responseJSONdata.length; i++)\r","    {\r","    // pm.expect(responseJSONdata[i].id).to.eql(expectedUserId);\r","      pm.expect(responseJSONdata[i].quotesCount).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].maxCreditLimitTotal).to.not.eql(null);\r","      pm.expect(responseJSONdata[i].debtorsCount).to.not.eql(null);\r","    }         \r","    \r","}); \r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"59f1b832-5ddc-4332-9754-668c98ed6ffd","exec":[""],"type":"text/javascript"}}],"_postman_id":"2551e5a7-f928-4615-b9ad-8beac767c9d6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Indicative/quotessummary","host":["{{baseURI}}"],"path":["api","Indicative","quotessummary"]}},"response":[]}],"_postman_id":"e3da4ffe-f61a-46c4-82c2-ae0d70ae0063","_postman_isSubFolder":true}],"_postman_id":"20b98c00-d94c-4495-b3e9-84f3883d7e50","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenADMIN}}","type":"string"}]},"_postman_isSubFolder":true},{"name":"MO user","item":[{"name":"POST and DELETE Subsidiary","item":[{"name":"POST Subsidiaries","event":[{"listen":"prerequest","script":{"id":"abe72b75-205c-4e51-8796-4a5270e6ed3d","exec":["var unique = getRandomAlphaNumeric(2,\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\");","pm.variables.set(\"val\", unique);","","function getRandomAlphaNumeric(len, chars) {","    var result = '';","    for (var i = len; i > 0; i--)","    { ","     result += chars[Math.floor(Math.random() * chars.length)];","    }","     return result;","}","","pm.variables.set(\"isActive\", true);",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"bd746fd4-c269-4536-947c-19c597428b01","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});","","","","  setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","","  var responseJSONdata = pm.response.json();","  var subID= responseJSONdata.id;"," ","  pm.variables.set(\"SubID\",subID);","console.log(subID);"],"type":"text/javascript"}}],"_postman_id":"d8b94687-292c-4586-a5de-e3713c5c081a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\r\n  \"id\": 0,\r\n  \"legalName\": \"API_Subsidiary_{{val}}\",\r\n  \"displayName\": \"Subsidiary_{{val}}\",\r\n  \"insuranceCarrierId\": {{INS_IC}},\r\n  \"isActive\": {{isActive}}\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiary/{{INS_IC}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiary","{{INS_IC}}"]}},"response":[]},{"name":"Delete Subsidiary Copy","event":[{"listen":"prerequest","script":{"id":"0f1bdfba-fa12-4f55-8604-ea2d22ceb739","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"c2df367e-b24b-4f4a-a889-79e64ad1d0b4","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"04325b74-1bc3-462c-80a9-eef45022e90f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiary/{{SubID}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiary","{{SubID}}"]}},"response":[]}],"_postman_id":"401a8724-5357-4fff-8578-5c2423027c22","_postman_isSubFolder":true},{"name":"GET InsuredParty","event":[{"listen":"test","script":{"id":"92a5f17e-9810-410f-b33a-79bf8177d4ce","exec":["pm.test(\"Status code is 200\", function () {","   pm.response.to.have.status(200);","});","","pm.test(\"Status code name has string\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"_postman_id":"3603bb54-e415-4f82-a761-24c2e47dafa5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuredParties/partyCarriers/{{INS_IP}}","host":["{{baseURI}}"],"path":["api","InsuredParties","partyCarriers","{{INS_IP}}"]}},"response":[]},{"name":"PUT InsuredParty","event":[{"listen":"test","script":{"id":"608286d1-e94b-4269-968c-91faf5fffd83","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"bb117388-e497-4fff-bfdf-1cda07df4765","exec":["//Test2\r","pm.variables.set(\"isSelected\", true);\r","pm.variables.set(\"id\", 1009);\r","pm.variables.set(\"name\", \"575_IC\");\r","pm.variables.set(\"isActive\", true);\r","\r","\r","//UATDemo\r","//pm.variables.set(\"isSelected\", true);\r","//pm.variables.set(\"id\", 99);\r","//pm.variables.set(\"name\", \"Great American Ins. / FCIA\");\r","//pm.variables.set(\"isActive\", true);\r",""],"type":"text/javascript"}}],"_postman_id":"7d424a7a-8e91-4248-b0b3-df3e9d937707","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"[\r\n  {\r\n    \"isSelected\": {{isSelected}},\r\n    \"id\": {{id}},\r\n    \"name\": \"{{name}}\",\r\n    \"duns\": \"1708\",\r\n    \"countryName\": \"United States of America\",\r\n    \"isActive\": {{isActive}},\r\n    \"createdBy\": null,\r\n    \"createdOn\": \"2020-02-17T13:09:08.363Z\",\r\n    \"updatedBy\": 0,\r\n    \"updatedOn\": \"2020-02-17T13:09:08.363Z\"\r\n  }\r\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/InsuredParties/partyCarriers/{{INS_IP}}","host":["{{baseURI}}"],"path":["api","InsuredParties","partyCarriers","{{INS_IP}}"]}},"response":[]},{"name":"GET_InsuranceCaarrier/ Subsidiaries By ID","event":[{"listen":"test","script":{"id":"769c72c4-eecb-456e-af52-ce7a7c909e32","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"e58a978a-67bc-4862-86c7-e9ccd3364101","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiaries/{{INS_IC}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiaries","{{INS_IC}}"]}},"response":[]},{"name":"Version","event":[{"listen":"test","script":{"id":"f5666e5b-b303-4254-bd29-b0d7f418cfef","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"," try {","","    var responseJSONdata = JSON.parse(responseBody);","","pm.test(\"To check InsuredParty details is not null (id,name,isSelected,isActive)\", function () {","    for (var i = 0; i < responseJSONdata.length; i++) {","        pm.expect(responseJSONdata[i].id).to.not.eql(null);","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","        pm.expect(responseJSONdata[i].isSelected).to.not.eql(null);","        pm.expect(responseJSONdata[i].isActive).to.not.eql(null);","    }","});","","pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","    pm.expect(responseJSONdata.length).to.be.above(0);","});","}","catch (e) {","","    if (responseBody == '') {","        pm.test(\"Empty body response\", () => { throw new Error(e.message) });","    }","}","",""],"type":"text/javascript"}}],"_postman_id":"40c61197-6b26-42e6-a0de-4d1a2ba3dfd7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/InsuranceCarriers/subsidiaries/{{INS_IC}}","host":["{{baseURI}}"],"path":["api","InsuranceCarriers","subsidiaries","{{INS_IC}}"]}},"response":[]}],"_postman_id":"60c2cc14-34d4-4cd9-87b1-2321d263eb16","auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenMO}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"c75f780a-8e04-4885-8535-b14a2c98e422","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"5597a830-6448-45a7-ad3b-6eeb12cdd220","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true}],"_postman_id":"3e1d328c-fce5-4fcf-a1c0-b93b0747c756","event":[{"listen":"prerequest","script":{"id":"098b5f91-3ed3-4a14-97b9-328044663e38","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"f70b0a4e-2a9f-42ec-a726-227532a6473f","type":"text/javascript","exec":[""]}}]},{"name":"Get Details of collection","_postman_id":"9ab65087-62d1-4269-a9a0-c90cda53dd89","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections?apikey=PMAK-5f3a7160b475490034f385ea-4e77de31f63185578a607d0cc674626607","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"apikey","value":"PMAK-5f3a7160b475490034f385ea-4e77de31f63185578a607d0cc674626607"}]}},"response":[]},{"name":"Get Details Environments","_postman_id":"7db1aea8-5ba6-409e-93ca-cfb90e20f5cf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments/9018931-2743c790-51f3-40f6-9282-3ce796b2cf14?X-Api-Key=PMAK-5f32528097ae8a003770dcd3-66be05f2fe5a377e8b9cedf07b7e434e2e","protocol":"https","host":["api","getpostman","com"],"path":["environments","9018931-2743c790-51f3-40f6-9282-3ce796b2cf14"],"query":[{"key":"X-Api-Key","value":"PMAK-5f32528097ae8a003770dcd3-66be05f2fe5a377e8b9cedf07b7e434e2e"}]}},"response":[]}],"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenIP}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"5423d2e6-d202-451d-80b4-4962e89baa8f","type":"text/javascript","exec":["//IP_User access token","let userIP = pm.environment.get(\"User_IP\");","let userIC = pm.environment.get(\"User_IC\");","let userADMIN = pm.environment.get(\"User_ADMIN\");","let userMO = pm.environment.get(\"User_MO\");","let password1 = pm.environment.get(\"Password\")","","","","let jwt = pm.environment.get('accessTokenIP');","let jwt_decode=null;","if (jwt.length > 0) {"," let jwt_payload_base64 = jwt.split('.')[1];"," jwt_decode = JSON.parse(atob(jwt_payload_base64));","}","if ((jwt.length === 0) || (Date.now()/1000 >= jwt_decode['exp'])) {"," let audience = pm.environment.get('audience');"," let getTokenRequest = {","     method: 'POST',","     url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","     header: \"Content-Type: application/x-www-form-urlencoded\",","     body: {","         mode: 'urlencoded',","         urlencoded: [","             { key: 'grant_type', value: 'password' },","             { key: 'username', value: userIP },","             { key: 'password', value: password1 },","             { key: 'scope', value: 'openid '+audience+' offline_access' },","             { key: 'client_id', value: audience }","         ]","     }"," };"," pm.sendRequest(getTokenRequest, (err, response) => {","   let jsonResponse = response.json(),","       accessToken = jsonResponse.access_token;","   pm.environment.set('accessTokenIP', accessToken);"," });","}","","let jwt1 = pm.environment.get('accessTokenIC');","let jwt1_decode=null;","if (jwt1.length > 0) {","  let jwt1_payload_base64 = jwt1.split('.')[1];","  jwt1_decode = JSON.parse(atob(jwt1_payload_base64));","}","","if ((jwt1.length === 0) || (Date.now()/1000 >= jwt1_decode['exp'])) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userIC },","              { key: 'password', value: password1 },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenIC', accessToken);","  });","}","","","","","let jwt2 = pm.environment.get('accessTokenADMIN');","let jwt2_decode=null;","if (jwt2.length > 0) {","  let jwt2_payload_base64 = jwt2.split('.')[1];","  jwt2_decode = JSON.parse(atob(jwt2_payload_base64));","}","","if ((jwt2.length === 0) || (Date.now()/1000 >= jwt2_decode['exp']) || !jwt2) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userADMIN },","              { key: 'password', value: password1 },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenADMIN', accessToken);","  });","}","","","let jwt3 = pm.environment.get('accessTokenMO');","let jwt3_decode=null;","if (jwt3.length > 0) {","  let jwt3_payload_base64 = jwt3.split('.')[1];","  jwt3_decode = JSON.parse(atob(jwt3_payload_base64));","}","","if ((jwt3.length === 0) || (Date.now()/1000 >= jwt3_decode['exp']) || !jwt3) {","  let audience = pm.environment.get('audience');","  ","","  let getTokenRequest = {","      method: 'POST',","      url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","      header: \"Content-Type: application/x-www-form-urlencoded\",","      body: {","          mode: 'urlencoded',","          urlencoded: [","              { key: 'grant_type', value: 'password' },","              { key: 'username', value: userMO },","              { key: 'password', value: password1 },","              { key: 'scope', value: 'openid '+audience+' offline_access' },","              { key: 'client_id', value: audience }","          ]","      }","  };","","  pm.sendRequest(getTokenRequest, (err, response) => {","","    let jsonResponse = response.json(),","","        accessToken = jsonResponse.access_token;","","    pm.environment.set('accessTokenMO', accessToken);","  });","}"]}},{"listen":"test","script":{"id":"ecbef21a-4277-4069-a333-fa2640f69b81","type":"text/javascript","exec":[""]}}],"variable":[{"id":"4fd400f0-a520-456c-8738-9b774af599bf","key":"id","value":"8","type":"string"},{"id":"641fce63-39c1-489b-9d1d-4754a880e604","key":"duns","value":"000000001","type":"string"},{"id":"42cb4592-4461-4874-84e5-9e09cf8d9528","key":"QuoteId","value":"","type":"string"},{"id":"5d1d28c0-c2c4-4f19-91b3-caac3a5b03a8","key":"transId","value":"","type":"string"},{"id":"34ba7bac-58aa-47b6-9b07-c53f6a6d6c31","key":"tId","value":"","type":"string"},{"id":"ce71ecd1-ba6a-49b5-8b84-a93e56b6dc18","key":"IPid","value":"","type":"string"},{"id":"4f273bf1-9f3e-4d2a-bdd7-a0c8abb0a917","key":"duns","value":"","type":"string"},{"id":"75267c1f-6d5e-4ecc-99d0-21bcc03855fb","key":"debtorName","value":"","type":"string"},{"id":"3edabd73-cf45-4d46-bb39-9ad8c461ba1d","key":"countryCode","value":"","type":"string"},{"id":"e96c0c27-89d8-4b71-ae2b-4ee5987be253","key":"maxCreditLimit","value":"","type":"string"},{"id":"57402d7a-823e-4b7a-b3bc-65ce547ca759","key":"indemnity","value":"","type":"string"},{"id":"f59114c0-b7b9-464c-a386-474450fb00f2","key":"insuranceCarrierId","value":"","type":"string"},{"id":"02de17e4-b315-44f3-b2ea-d2d334415ba2","key":"ParticipantID","value":"","type":"string"},{"id":"ebde3d9f-6794-40d6-998b-a1a110ba5392","key":"val","value":"","type":"string"},{"id":"401e19f7-4f46-4a61-b379-6480e8a59d73","key":"QUOTE","value":"","type":"string"}]}}