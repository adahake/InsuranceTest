{"collection":{"info":{"_postman_id":"4e24b7bb-9223-4a77-87a6-a95fd76ade4f","name":"Settlement_Regression","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"GET","item":[{"name":"GET Positives","item":[{"name":"Assets","item":[{"name":"Get Asset/minCount","event":[{"listen":"test","script":{"id":"93c09704-dc31-4351-8184-73932c447db2","exec":["var responseJSONdata = JSON.parse(responseBody);","if (pm.response.code == 200 & responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.equal(parseInt(pm.variables.get(\"minCount\")));","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"4019801d-3f4d-4710-a814-bde9cdf2ad53","exec":["pm.environment.set(\"delay\", \"200\");"],"type":"text/javascript"}}],"_postman_id":"db52f201-25cb-4a0c-8959-4d4cb4915729","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Assets?count={{minCount}}","host":["{{baseURI}}"],"path":["api","Assets"],"query":[{"key":"skip","value":"20","disabled":true},{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get Asset/maxCount","event":[{"listen":"test","script":{"id":"753f2d67-1957-4fa5-ba26-569c5ef86327","exec":["var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length <= parseInt(pm.variables.get(\"maxCount\"))).to.equal(true);","    });","}"],"type":"text/javascript"}}],"_postman_id":"f443b03c-7d14-4e06-890d-2aed583196b2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Assets?count={{maxCount}}","host":["{{baseURI}}"],"path":["api","Assets"],"query":[{"key":"count","value":"{{maxCount}}"}]}},"response":[]},{"name":"Get Asset/minSkip","event":[{"listen":"test","script":{"id":"395eabe4-20e3-446e-8939-18848ac6f085","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    var array_ID_Response = [];","    ","    for(var i = 0; i < responseJSONdata.length; i++)","    {","        array_ID_Response[i] = responseJSONdata[i].id;","    }","    ","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(false);","        }","    });    ","}    "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e8145090-465b-4829-b6c4-29c16e9065b4","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/Assets?count=10',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser1\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","    var array_ID = [];","","    for(var i = 0; i < jsonData.length; i++)","    {","        array_ID[i] = jsonData[i].id;","    }","    pm.variables.set(\"array_ID\", array_ID);","    console.log(array_ID);","});"],"type":"text/javascript"}}],"_postman_id":"e0127281-71b3-4a1a-ba43-9d186787dc98","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Assets?count=10&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","Assets"],"query":[{"key":"count","value":"10"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]},{"name":"Get Asset/Id","event":[{"listen":"prerequest","script":{"id":"4471bab4-1d89-4273-bebd-726a9c630da0","exec":["var baseURI = pm.environment.get(\"baseURI\");","var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","","pm.sendRequest({","    url: baseURI + '/api/assets?count=1',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + accessToken","    },","}, function (err, res) {","    if (err) { console.log(err); }","    pm.expect(res).to.have.property('code', 200);","    var jsonData = res.json();","    var assetId;","    assetId = jsonData[0].id;","    console.log(\"Asset ID in Assets request: \" + assetId);","    pm.variables.set(\"assetId\", assetId);","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"6d85299b-b3b0-49eb-b37c-e040a38f2fac","exec":["var AssetsId = pm.variables.get(\"assetId\") ;\r","\r","if(pm.response.code == 200 & responseBody !== '')\r","{ \r","    pm.test(\"To check /Assets/{id} returns company details\", function () {\r","        var jsonData = pm.response.json();\r","        pm.expect(jsonData[0].id).to.eql(AssetsId);\r","    }); \r","}"],"type":"text/javascript"}}],"_postman_id":"d7ebbbbb-07fe-468f-be64-5c995183a5e5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Assets/{{assetId}}","host":["{{baseURI}}"],"path":["api","Assets","{{assetId}}"]}},"response":[]}],"_postman_id":"acecfbb7-cb2d-4c34-995c-8c0a43c3f3e6","_postman_isSubFolder":true},{"name":"ClientBankAccounts","item":[{"name":"Get ClientBankAccounts/minCount","event":[{"listen":"test","script":{"id":"5959f7f0-3504-4cc4-b7bb-4a71c350b85d","exec":["var responseJSONdata = JSON.parse(responseBody);","if (pm.response.code == 200 & responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.equal(parseInt(pm.variables.get(\"minCount\")));","    });","}"],"type":"text/javascript"}}],"_postman_id":"68e43c35-4668-4cfa-bb42-27993fbe69ec","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/bankaccounts/client?count={{minCount}}","host":["{{baseURI}}"],"path":["api","bankaccounts","client"],"query":[{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get ClientBankAccounts/maxCount","event":[{"listen":"test","script":{"id":"2c6fad81-4093-49a7-aa9e-2304c6fa88df","exec":["var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(parseInt(pm.variables.get(\"maxCount\"))+1);","    });","}"],"type":"text/javascript"}}],"_postman_id":"99eb3c11-d787-4cad-86a7-a3d2a949201f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/bankaccounts/client?count={{maxCount}}","host":["{{baseURI}}"],"path":["api","bankaccounts","client"],"query":[{"key":"count","value":"{{maxCount}}"}]}},"response":[]},{"name":"Get ClientBankAccounts/minSkip","event":[{"listen":"test","script":{"id":"0b19f665-94ae-487d-9c91-51986432e529","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    var array_ID_Response = [];","    ","    for(var i = 0; i < responseJSONdata.length; i++)","    {","        array_ID_Response[i] = responseJSONdata[i].id;","    }","    ","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(false);","        }","    });    ","}    "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"f9a4d680-884d-4e73-94f1-9ca6be8ddf64","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/bankaccounts/client?count=500',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","    var array_ID = [];","","    for(var i = 0; i < jsonData.length; i++)","    {","        array_ID[i] = jsonData[i].id;","    }","    pm.variables.set(\"array_ID\", array_ID);","    console.log(array_ID);","});"],"type":"text/javascript"}}],"_postman_id":"a7ce4d9a-450e-4df4-a19e-985eaade2298","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/bankaccounts/client?count=10&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","bankaccounts","client"],"query":[{"key":"count","value":"10"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]}],"_postman_id":"798d5d96-7f83-4478-96f4-67f9a3fd1d74","_postman_isSubFolder":true},{"name":"BankAccountReceipts","item":[{"name":"Get BankAccountReceipts/minCount","event":[{"listen":"prerequest","script":{"id":"f292eef7-fa65-4f95-b468-5311a3d0140d","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"bed1bf0c-87e9-42a6-b26b-9d4ee1d071d0","exec":["var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.bankReceipts.length, function(){","        pm.expect(responseJSONdata.bankReceipts.length).to.equal(parseInt(pm.variables.get(\"minCount\")));","    });","}"],"type":"text/javascript"}}],"_postman_id":"acd025d2-4a6e-4dcd-83b9-66f280326277","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/BankAccountReceipts?count={{minCount}}","host":["{{baseURI}}"],"path":["api","BankAccountReceipts"],"query":[{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get BankAccountReceipts/maxCount","event":[{"listen":"prerequest","script":{"id":"cb0485af-c060-4c7d-b614-445fdcf8b34e","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"e282d360-a674-40fc-8db2-400601523f33","exec":["var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.bankReceipts.length, function(){","        pm.expect(responseJSONdata.bankReceipts.length <= (parseInt(pm.variables.get(\"maxCount\")))).to.equal(true);","    });","}"],"type":"text/javascript"}}],"_postman_id":"88eaa1d8-b920-4a56-91e5-3112c8b99faf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/BankAccountReceipts?count={{maxCount}}","host":["{{baseURI}}"],"path":["api","BankAccountReceipts"],"query":[{"key":"count","value":"{{maxCount}}"}]}},"response":[]},{"name":"Get BankAccountReceipts/minSkip","event":[{"listen":"prerequest","script":{"id":"bbb31e56-4187-4347-977a-e63c64bcb550","exec":["pm.sendRequest({\r","    url: pm.variables.get(\"baseURI\") + '/api/BankAccountReceipts?count=10',\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","}, function (err, res) {\r","    var jsonData = res.json();\r","\r","    var array_ID = [];\r","\r","    for(var i = 0; i < jsonData.length; i++)\r","    {\r","        array_ID[i] = jsonData[i].id;\r","    }\r","    pm.variables.set(\"array_ID\", array_ID);\r","    console.log(array_ID);\r","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"6a40b351-b7e5-4bb1-8ec5-266d50f29a33","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    var array_ID_Response = [];","    ","    for(var i = 0; i < responseJSONdata.length; i++)","    {","        array_ID_Response[i] = responseJSONdata[i].id;","    }","    ","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(false);","        }","    });    ","}    "],"type":"text/javascript"}}],"_postman_id":"5d0b19b7-50bc-447b-bc89-0c097b41aa98","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/BankAccountReceipts?count=10&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","BankAccountReceipts"],"query":[{"key":"count","value":"10"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]},{"name":"Get BankAccountReceiptsTotal","event":[{"listen":"prerequest","script":{"id":"ff26ac90-b5ef-44aa-ba85-efe8df904023","exec":["var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","var baseURI = pm.environment.get(\"baseURI\");","pm.sendRequest({","    url: baseURI +'/api/BankAccountReceipts?count=50000',","    method: 'GET',","    header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer '+ accessToken","            },","    ","    }, function (err, res) {","        if (err) { console.log(err); }","        var jsonData = res.json();","        var paymentAmountUSD= 0;","        var paymentAmountSGD= 0;","        for (var i = 0; i < jsonData.bankReceiptTotals.length; i++){ ","            if(jsonData.bankReceiptTotals[i].currencyCode==\"USD\")","            {","                paymentAmountUSD = paymentAmountUSD + jsonData.bankReceiptTotals[i].paymentAmount;","            }","            if(jsonData.bankReceiptTotals[i].currencyCode==\"SGD\")","            {","                paymentAmountSGD = paymentAmountSGD + jsonData.bankReceiptTotals[i].paymentAmount;","            }","        }","","        ","        console.log(\"paymentAmountUSD -\"  +paymentAmountUSD);","        console.log(\"paymentAmountSGD -\"+paymentAmountSGD);","        ","       paymentAmountUSD = Math.floor(paymentAmountUSD*100)/100; // Number(paymentAmountUSD).toFixed(2);","        paymentAmountSGD = Math.floor(paymentAmountSGD*100)/100; //Number(paymentAmountSGD).toFixed(2);","        ","        pm.variables.set(\"paymentAmountUSD\", paymentAmountUSD);","        pm.variables.set(\"paymentAmountSGD\", paymentAmountSGD);","    ","        console.log(\"paymentAmountUSD trunc-\"  +paymentAmountUSD);","        console.log(\"paymentAmountSGD trunc-\"+paymentAmountSGD);","        ","        ","        ","    });"],"type":"text/javascript"}},{"listen":"test","script":{"id":"4ddce29d-0396-4f6a-84f3-49f63cdc034e","exec":["pm.test(\"Status code is 200\", function()","{","   // var jsonData = pm.response.json();","    pm.response.to.have.status(200);","});","","var responseJSONdata = JSON.parse(responseBody);","var paymentAmountUSD = pm.variables.get(\"paymentAmountUSD\"); ","var paymentAmountSGD = pm.variables.get(\"paymentAmountSGD\"); ","","if(pm.response.code == 200 & responseBody !== '')","{","    for(var i=0; i < responseJSONdata.length; i++)","    {","        pm.test(\"Verifying Bank Account Receipts total: \", function(){","            if(responseJSONdata[i].currencyCode==\"SGD\")","            {","                pm.expect(responseJSONdata[i].paymentAmount).to.equal(paymentAmountSGD);        ","            }","            if(responseJSONdata[i].currencyCode==\"USD\")","            {","                pm.expect(responseJSONdata[i].paymentAmount).to.equal(paymentAmountUSD);        ","            }","         });","    }","    ","}"],"type":"text/javascript"}}],"_postman_id":"19eb05ce-2a5e-47e8-ae1f-cb849c8557c9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/BankAccountReceipts/totals","host":["{{baseURI}}"],"path":["api","BankAccountReceipts","totals"],"query":[{"key":"","value":"","type":"text","disabled":true}]}},"response":[]},{"name":"Get BankAccountReceipts/goodFundsDate","event":[{"listen":"prerequest","script":{"id":"d0710464-f495-46b9-8bab-e9aca98a7bff","exec":["var url = pm.environment.get(\"baseURI\") + \"/api/BankAccountReceipts?count=1\";","","setTimeout(function(){","    pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","      }","      ","    }, function (err, res) {","    ","        var jsonData = res.json(); ","        for (var i=0; i < jsonData.bankReceipts.length; i++)","                {","                    {","                        pm.environment.set(\"bankAccountAlias\", jsonData.bankReceipts[i].bankAccountAlias);","                        pm.environment.set(\"receiptEntryDate\", jsonData.bankReceipts[i].receiptEntryDate);","                        pm.environment.set(\"fundType\", jsonData.bankReceipts[i].fundType);","                        pm.variables.set(\"goodFundsDate\",jsonData.bankReceipts[i].goodFundDate);","                        break;","                    }","        }","    });      ","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"e77eed65-bc12-491b-919b-53a5369a735c","exec":["pm.test(\"Verifying the goodFundsDate is present\", function () {","    var goodFundDate = pm.response.text();","    pm.environment.set(\"goodFundDate\", goodFundDate);","});","pm.test(\"Verifying response code and goodFundDate: \", function(){","pm.expect(pm.response.code).to.equal(200);","","    var url = pm.variables.get(\"baseURI\");","    url = url.concat(\"/api/BankAccountReceipts?count=1\");","    ","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","          }","          ","    }, function (err, res) {","        var jsonData = res.json();","        ","        for(var i = 0; i < jsonData.bankReceipts.length; i++)","        {","            if(jsonData.bankReceipts[i].goodFundDate == pm.environment.get(\"goodFundDate\"))","            {","                pm.expect(jsonData.bankReceipts[i].goodFundDate).to.equal(pm.environment.get(\"goodFundDate\"));","                break;","            }","        }","    });","});"],"type":"text/javascript"}}],"_postman_id":"9635a60b-f562-4e4b-b636-54d6a7b9db55","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/BankAccountReceipts/goodFundsDate?bankAccountAlias={{bankAccountAlias}}&receiptBankEntryDate={{receiptEntryDate}}&fundType={{fundType}}","host":["{{baseURI}}"],"path":["api","BankAccountReceipts","goodFundsDate"],"query":[{"key":"bankAccountAlias","value":"{{bankAccountAlias}}"},{"key":"receiptBankEntryDate","value":"{{receiptEntryDate}}"},{"key":"fundType","value":"{{fundType}}"},{"key":"","value":"","type":"text","disabled":true}]}},"response":[]},{"name":"BankAccountReceipts/{id}/note-attachments","event":[{"listen":"prerequest","script":{"id":"a99ba276-9c98-437a-aa44-3aa6d8109014","exec":["var url = pm.environment.get(\"baseURI\") + \"/api/BankAccountReceipts?count=1\";\r","\r","setTimeout(function(){\r","    pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","    }, function (err, res) {\r","    \r","        var jsonData = res.json(); \r","        for (var i=0; i < jsonData.bankReceipts.length; i++)\r","                {\r","                    {\r","                        pm.variables.set(\"id\", jsonData.bankReceipts[i].id);\r","                        console.log(\"id\",+ jsonData.bankReceipts[i].id);\r","                        break;\r","                    }\r","        }\r","    });      \r","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"e85fbfb4-8657-4ef6-a520-549224ff35ad","exec":["\r","\r","pm.test(\"Status code is 200 \", function () {\r","    pm.response.to.have.status(200);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"b135a126-5971-457d-8bdf-e3aeb765b250","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/BankAccountReceipts/{{id}}/note-attachments","host":["{{baseURI}}"],"path":["api","BankAccountReceipts","{{id}}","note-attachments"]}},"response":[]}],"_postman_id":"6e7dea9b-11ab-41ff-aee8-6d6d893b2e0f","_postman_isSubFolder":true},{"name":"Payments","item":[{"name":"Get Payments","event":[{"listen":"test","script":{"id":"def067eb-f605-4f40-a1b1-31e2801497a4","exec":["var jsonData = pm.response.json();","pm.test(\"Verifying response code \"+ jsonData.payments.length, function(){","        pm.expect(pm.response.code).to.equal(200);","    });",""],"type":"text/javascript"}}],"_postman_id":"af43e9ea-16c4-4dd5-9533-643a320f29ab","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments","host":["{{baseURI}}"],"path":["api","Payments"]}},"response":[]},{"name":"Get Payments {{id}}","event":[{"listen":"test","script":{"id":"60c27a34-80c1-471e-96da-4b6bda11d609","exec":["var jsonData = pm.response.json();","pm.test(\"Verifying response code \"+ jsonData.payments.length, function(){","        pm.expect(pm.response.code).to.equal(200);","    });",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d9899f09-55a5-4edd-93f0-edec55da6846","exec":["pm.sendRequest({\r","    url: pm.variables.get(\"baseURI\") + '/api/Payments?count=10',\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","}, function (err, res) {\r","    var responseJson = res.json();\r","    var list = (responseJson.payments).length;\r","    console.log(list);\r","   for (var i = 0; i < list; i++) \r","    {\r","    var counter = responseJson.payments[i];\r","    ID=counter.id\r","    }\r","    pm.environment.set(\"ID\", ID);\r","    console.log(ID);\r","});\r","\r",""],"type":"text/javascript"}}],"_postman_id":"23fb1d3c-1411-40f9-9fa0-53ee0e3c6e1d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments/{{ID}}","host":["{{baseURI}}"],"path":["api","Payments","{{ID}}"]}},"response":[]},{"name":"Get Payments/minCount","event":[{"listen":"test","script":{"id":"2d0ea6b1-8624-4fb3-a999-bbacc0f222dc","exec":[" ","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    pm.test(\"Matching data items returned: \" , function(){","        pm.expect(responseJSONdata.payments.length).to.equal(parseInt(pm.variables.get(\"minCount\")));","    });","}"," ","  "],"type":"text/javascript"}}],"_postman_id":"d415044f-3e22-4688-85a2-3877b7f88552","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments?count={{minCount}}","host":["{{baseURI}}"],"path":["api","Payments"],"query":[{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get Payments/maxCount","event":[{"listen":"test","script":{"id":"0e8e2cee-c6cd-42ce-92a8-77f38132c505","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        console.log(responseJSONdata.payments.length);","        pm.expect(responseJSONdata.payments.length).to.be.below(parseInt(pm.variables.get(\"maxCount\"))+1);","    });","}"],"type":"text/javascript"}}],"_postman_id":"3095dbb5-ed1c-4513-ad65-e84890b9d965","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments?count={{maxCount}}","host":["{{baseURI}}"],"path":["api","Payments"],"query":[{"key":"count","value":"{{maxCount}}"}]}},"response":[]},{"name":"Get Payments/minSkip","event":[{"listen":"test","script":{"id":"ec4bc5fb-f0d0-4443-83f0-70886214b545","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    var array_ID_Response = [];","    ","    for(var i = 0; i < responseJSONdata.length; i++)","    {","        array_ID_Response[i] = responseJSONdata[i].id;","    }","    ","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(false);","        }","    });    ","}    "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"1a362af6-254e-4ebe-b605-fadd060f32ba","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/Payments?count=10',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","","    var array_ID = [];","","    for(var i = 0; i < jsonData.length; i++)","    {","        array_ID[i] = jsonData[i].id;","    }","    pm.variables.set(\"array_ID\", array_ID);","    console.log(array_ID);","});"],"type":"text/javascript"}}],"_postman_id":"f0fb5f9c-e0e0-435d-a8d2-d11a171f5bf9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments?count=10&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","Payments"],"query":[{"key":"count","value":"10"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]},{"name":"Get Payments/unmatchedonly-True","event":[{"listen":"test","script":{"id":"3ec06e72-a266-45fb-999b-fcbf330439a1","exec":[" ","if(pm.response.code == 200 & responseBody !== '')","{","     var responseJSONdata = JSON.parse(responseBody); ","     for ( var i=0;i< responseJSONdata.payments.length; i++)","     {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.payments.length, function(){","            var state = [\"Processed\",\"Processing\",\"PartialMatched\", \"Matched\", \"Held\"];","            pm.expect(responseJSONdata.payments[i].state).to.be.oneOf(state);","       });","     }","}"],"type":"text/javascript"}}],"_postman_id":"90d27b98-b1c3-4cc4-a3db-b65c6ffa693c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments?unmatchedonly=true","host":["{{baseURI}}"],"path":["api","Payments"],"query":[{"key":"count","value":"{{maxCount}}","disabled":true},{"key":"skip","value":"{{maxSkip}}","disabled":true},{"key":"unmatchedonly","value":"true"}]}},"response":[]},{"name":"Get Payments/unmatchedonly-False","event":[{"listen":"test","script":{"id":"2ce9a8b2-bb40-4975-8cff-1eadf47129fd","exec":[" ","if(pm.response.code == 200 & responseBody !== '')","{","     var responseJSONdata = JSON.parse(responseBody); ","     for ( var i=0;i< responseJSONdata.payments.length; i++)","     {","        pm.test(\"Matching data items returned: \"+ responseJSONdata.payments.length, function(){","             pm.expect(responseJSONdata.payments[i].state, \"Payment Id : \" +responseJSONdata.payments[i].id).to.be.oneOf([\"Processing\",\"PartialMatched\", \"Processed\", \"Matched\", \"Held\"]);","       });","     }","}"],"type":"text/javascript"}}],"_postman_id":"14b55d5c-e1f9-457e-8095-766beb46f570","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments?unmatchedonly=false","host":["{{baseURI}}"],"path":["api","Payments"],"query":[{"key":"count","value":"{{maxCount}}","disabled":true},{"key":"skip","value":"{{maxSkip}}","disabled":true},{"key":"unmatchedonly","value":"false"}]}},"response":[]},{"name":"Get PaymentsTotals","event":[{"listen":"test","script":{"id":"c820cc56-35d9-4cc3-93cb-614e07890471","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(100);","    });","}","","",""],"type":"text/javascript"}}],"_postman_id":"16a968a6-5544-4643-9ed0-4c9d7c81cca9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Payments/totals","host":["{{baseURI}}"],"path":["api","Payments","totals"]}},"response":[]},{"name":"Get Preview","event":[{"listen":"test","script":{"id":"f7e5002f-0346-48e4-86bb-a8281db20cdc","exec":["pm.test(\"Payment Preview Test\", function(){","    pm.expect(pm.response.code).to.equal(200);","});","","var responseJSONdata = JSON.parse(responseBody);","var previewFields = [","        \"id\",","        \"opsPayerId\",","        \"opsBankAccountAlias\",","        \"expectedFundingDatetime\",","        \"payee\",","        \"payeeId\",","        \"payeeBankAccountAlias\",","        \"paymentAmount\",","        \"outstandingAmount\",","        \"currencyCode\",","        \"fundType\",","        \"stateId\",","        \"createdBy\",","        \"createdOn\",","        \"outgoingWireDetails\"","    ];","","// var outgoingWireDetailsFields = [","//         \"id\",","//         \"outgoingWireId\",","//         \"bankReceiptId\",","//         \"assetId\",","//         \"payee\",","//         \"transactionId\",","//         \"amount\",","//         \"currencyCode\",","//         \"createdBy\",","//         \"createdOn\",","//         \"receiptDetailId\",","//         \"bankReceiptEntryDate\",","//         \"fundSourceTypeId\",","//         \"fundSourceType\",","//         \"paymentId\",","//         \"asset\",","//         \"outgoingWireAdjustments\"","//     ];","","// var assetFields = [","//         \"id\",","//         \"number\",","//         \"typeId\",","//         \"productCode\",","//         \"transactionId\",","//         \"payorId\",","//         \"payor\",","//         \"payeeId\",","//         \"payee\",","//         \"netFaceValue\",","//         \"outstandingAmount\",","//         \"totalDiscountAmount\",","//         \"paymentDate\",","//         \"stateId\",","//         \"state\",","//         \"settlementStateId\",","//         \"sourceId\",","//         \"createdOn\",","//         \"transactionAssetInvestors\"","//     ];","    ","// var transactionAssetInvestorsFields = [","//         \"id\",","//         \"transactionId\",","//         \"adjustedFaceValue\",","//         \"assetId\",","//         \"paymentDate\",","//         \"payorId\",","//         \"netFaceValue\",","//         \"totalDiscountAmount\",","//         \"advanceRate\",","//         \"allocationRatio\",","//         \"settlementStateId\",","//         \"createdOn\",","//         \"transactionCloseDate\",","//         \"outstandingAmount\",","//         \"outstandingPurchasePrice\",","//         \"payeeId\",","//         \"stateId\"","//     ];    ","               ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Verifying returned data fields: \"+responseJSONdata.length, function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {","            pm.expect(responseJSONdata[i]).to.have.any.keys(previewFields);","            console.log(\"Preview record fields are verified: \"+(i+1));","        }    ","        // // console.log(responseJSONdata.length);","        // for(var i=0; i < responseJSONdata.length; i++)","        // {","        //     var previewArray = Object.entries(responseJSONdata[i]);","        //     for(var j=0; j < previewFields.length; j++)","        //     {","        //         console.log(previewArray[j][0]);","        //         pm.expect(previewFields.includes(previewArray[j][0])).to.equal(true);","        //     }","            ","        //     var outgoingWireDetailsArray = Object.entries(responseJSONdata[i].outgoingWireDetails[0]);","        //     for(var k=0; k < outgoingWireDetailsFields.length; k++)","        //     {","        //         console.log(outgoingWireDetailsArray[k][0]);","        //         pm.expect(outgoingWireDetailsFields.includes(outgoingWireDetailsArray[k][0])).to.equal(true);","        //     }","            ","        //     var assetArray = [];","        //     if(outgoingWireDetailsArray.includes(\"asset\"))","        //     {","        //         assetArray = Object.entries(responseJSONdata[i].outgoingWireDetails[0].asset);","        //         // console.log(assetArray);","        //         for(var l=0; l < assetFields.length; l++)","        //         {","        //             // console.log(assetArray[l][0]);","        //             pm.expect(assetFields.includes(assetArray[l][0])).to.equal(true);","        //         }","        //     }                ","            ","        //     if(assetArray.includes(\"transactionAssetInvestors\"))","        //     {","        //         var transactionAssetInvestorsArray = Object.entries(responseJSONdata[i].outgoingWireDetails[0].asset[0].transactionAssetInvestors);","        //         console.log(transactionAssetInvestorsArray);","        //         for(var l=0; l < assetFields.length; l++)","        //         {","        //             console.log(transactionAssetInvestorsArray[l][0]);","        //             pm.expect(transactionAssetInvestorsFields.includes(transactionAssetInvestorsArray[l][0])).to.equal(true);","        //         }","        //     }                ","        //     // pm.expect(responseJSONdata.includes(states[i])).to.equal(true);","            // console.log(\"Preview record fields are verified: \"+(i+1));","        // }","    });","}"],"type":"text/javascript"}}],"_postman_id":"0147ecad-dd5f-4426-9ccb-97b98061d6df","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Payments/preview","host":["{{baseURI}}"],"path":["api","Payments","preview"]}},"response":[]}],"_postman_id":"cb1a30f7-a5ec-49da-bc1e-1f79907608c1","_postman_isSubFolder":true},{"name":"TransferFile","item":[{"name":"Get TransferFile","event":[{"listen":"test","script":{"id":"36c088fa-ad60-43a5-a1eb-0358677ab683","exec":["pm.test(\"Verifying response code \", function(){","        pm.expect(pm.response.code).to.equal(200);","    });",""],"type":"text/javascript"}}],"_postman_id":"9ab247cf-221d-4b4d-af84-45b28fbcdc07","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/TransferFile","host":["{{baseURI}}"],"path":["api","TransferFile"],"query":[{"key":"count","value":"5000","disabled":true}]}},"response":[]}],"_postman_id":"05e74dd7-4b75-47fc-880d-3ef7fb687708","_postman_isSubFolder":true},{"name":"ReceiptAdjustments","item":[{"name":"Get ReceiptAdjustments","event":[{"listen":"test","script":{"id":"778867d3-2bc7-4cde-aa83-f969fe2d1467","exec":["pm.test(\"Verifying response code \", function () {","    pm.expect(pm.response.code).to.equal(200);","});",""],"type":"text/javascript"}}],"_postman_id":"00faa7bd-55e0-4b17-9bde-c67f6154754f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/ReceiptAdjustments","host":["{{baseURI}}"],"path":["api","ReceiptAdjustments"]}},"response":[]}],"_postman_id":"9894a536-8f18-46b7-8b2b-3adf6fdbb10f","_postman_isSubFolder":true},{"name":"Values","item":[{"name":"Get Values","event":[{"listen":"test","script":{"id":"2cb217cb-f1b6-45ca-b3d9-60d898c1bb39","exec":["pm.test(\"Verifying response code \", function(){","        pm.expect(pm.response.code).to.equal(200);","    });",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"72231f27-54f2-4602-a4e1-60142d309404","exec":[""],"type":"text/javascript"}}],"_postman_id":"222fe977-da65-4738-adea-6cfcb2641281","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Values","host":["{{baseURI}}"],"path":["api","Values"]}},"response":[]},{"name":"Get ValuesWithID","event":[{"listen":"test","script":{"id":"130acf81-d87a-4697-abe6-e2f325c698de","exec":["pm.test(\"Verifying response code \", function(){","        pm.expect(pm.response.code).to.equal(200);","    });",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7f9c84b3-8d70-4b75-a42b-3276f4165edf","exec":[""],"type":"text/javascript"}}],"_postman_id":"771a82cf-86ac-4857-822a-35100a8c5cd5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Values/817","host":["{{baseURI}}"],"path":["api","Values","817"]}},"response":[]}],"_postman_id":"77260b38-ada6-4ade-a4fe-b1f26ffac05b","_postman_isSubFolder":true},{"name":"InternalBankAccounts","item":[{"name":"Get InternalBankAccounts/minCount","event":[{"listen":"test","script":{"id":"9fcf9dc8-da07-4ad5-bcb6-181eefe354f2","exec":["var interalAccountsFields = [","        \"id\",","        \"alias\",","        \"companyId\",","        \"bankName\",","        \"accountType\",","        \"currencyCode\",","        \"location\",","        \"lqxRegion\",","        \"settlementCalendarCode\",","        \"inboundCutoffTime\",","        \"outboundCutoffTime\",","        \"closeOfBusinessTime\",","        \"transmissionType\",","        \"effectiveDate\",","        \"transferTypes\",","        \"products\",","        \"modifiedOn\",","        \"modifiedBy\",","        \"contactName\",","        \"contactNumber\",","        \"routingNumber\",","        \"accountNumber\"","    ];","","var transferTypesFields = [","        \"paymentType\",","        \"isActive\"","    ];","","var productsFields = [","        \"productCode\",","        \"isActive\"","    ];","   ","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.equal(parseInt(pm.variables.get(\"minCount\")));","    });","    ","    pm.test(\"Internal Bank Accounts Get Request fields verification: : \"+responseJSONdata.length, function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {","            var interalAccountsArray = Object.entries(responseJSONdata[i]);","            for(var j=0; j < interalAccountsArray.length; j++)","            {","                pm.expect(interalAccountsFields.includes(interalAccountsArray[j][0])).to.equal(true);","            }","            ","            var transferTypesArray = Object.entries(responseJSONdata[i].transferTypes[0]);","            for(var k=0; k < transferTypesArray.length; k++)","            {","                pm.expect(transferTypesFields.includes(transferTypesArray[k][0])).to.equal(true);","            }","            ","            var productsArray = Object.entries(responseJSONdata[i].products[0]);","            for(var l=0; l < productsArray.length; l++)","            {","                pm.expect(productsFields.includes(productsArray[l][0])).to.equal(true);","            }","            console.log(\"Internal Bank Accounts fields are verified of data: \"+(i+1));","        }","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ff1b4ebd-a760-489b-900f-bdb73ab5e150","exec":[""],"type":"text/javascript"}}],"_postman_id":"043372f3-fa9f-4434-9ed2-19e74e3bf165","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/bankaccounts?count={{minCount}}","host":["{{baseURI}}"],"path":["api","bankaccounts"],"query":[{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get InternalBankAccounts/maxCount","event":[{"listen":"test","script":{"id":"7bcb52a3-a13b-418b-9650-db4646dd9c61","exec":["var interalAccountsFields = [","        \"id\",","        \"alias\",","        \"companyId\",","        \"bankName\",","        \"accountType\",","        \"currencyCode\",","        \"location\",","        \"lqxRegion\",","        \"settlementCalendarCode\",","        \"inboundCutoffTime\",","        \"outboundCutoffTime\",","        \"closeOfBusinessTime\",","        \"transmissionType\",","        \"effectiveDate\",","        \"transferTypes\",","        \"products\",","        \"updatedOn\",","        \"updatedBy\",","        \"contactName\",","        \"contactNumber\",","        \"routingNumber\",","        \"accountNumber\"","    ];","","var transferTypesFields = [","        \"paymentType\",","        \"isActive\"","    ];","","var productsFields = [","        \"productCode\",","        \"isActive\"","    ];","   ","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length <= parseInt(pm.variables.get(\"maxCount\"))).to.equal(true);","    });","    ","    // pm.test(\"Internal Bank Accounts Get Request fields verification: : \"+responseJSONdata.length, function(){","    //     for(var i=0; i < responseJSONdata.length; i++)","    //     {","    //         var interalAccountsArray = Object.entries(responseJSONdata[i]);","    //         for(var j=0; j < interalAccountsArray.length; j++)","    //         {","    //             pm.expect(interalAccountsFields.includes(interalAccountsArray[j][0])).to.equal(true);","    //         }","            ","    //         var transferTypesArray = Object.entries(responseJSONdata[i].transferTypes[0]);","    //         for(var k=0; k < transferTypesArray.length; k++)","    //         {","    //             pm.expect(transferTypesFields.includes(transferTypesArray[k][0])).to.equal(true);","    //         }","            ","    //         var productsArray = Object.entries(responseJSONdata[i].products[0]);","    //         for(var l=0; l < productsArray.length; l++)","    //         {","    //             pm.expect(productsFields.includes(productsArray[l][0])).to.equal(true);","    //         }","    //         console.log(\"Internal Bank Accounts fields are verified of data: \"+(i+1));","    //     }","    // });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a7fd879e-8815-4364-9934-f5fe2b817d44","exec":[""],"type":"text/javascript"}}],"_postman_id":"3ca43c42-675d-4fed-a8ab-dd358971c663","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/bankaccounts?count={{maxCount}}","host":["{{baseURI}}"],"path":["api","bankaccounts"],"query":[{"key":"count","value":"{{maxCount}}"}]}},"response":[]},{"name":"Get InternalBankAccounts/minSkip","event":[{"listen":"test","script":{"id":"df1839ee-697b-46b2-bd1f-e1f404812d36","exec":["var interalAccountsFields = [","        \"id\",","        \"alias\",","        \"companyId\",","        \"bankName\",","        \"accountType\",","        \"currencyCode\",","        \"location\",","        \"lqxRegion\",","        \"inboundCutoffTime\",","        \"outboundCutoffTime\",","        \"closeOfBusinessTime\",","        \"transmissionType\",","        \"effectiveDate\",","        \"transferTypes\",","        \"products\",","        \"updatedOn\",","        \"updatedBy\",","        \"contactName\",","        \"contactNumber\",","        \"routingNumber\",","        \"accountNumber\"","    ];","","var transferTypesFields = [","        \"paymentType\",","        \"isActive\"","    ];","","var productsFields = [","        \"productCode\",","        \"isActive\"","    ];","   ","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    var array_ID_Response = [];","    ","    for(var i = 0; i < responseJSONdata.length; i++)","    {","        array_ID_Response[i] = responseJSONdata[i].id;","    }","    ","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(false);","        }","    });    ","    ","    // pm.test(\"Internal Bank Accounts Get Request fields verification: : \"+responseJSONdata.length, function(){","    //     for(var i=0; i < responseJSONdata.length; i++)","    //     {","    //         var interalAccountsArray = Object.entries(responseJSONdata[i]);","    //         for(var j=0; j < interalAccountsArray.length; j++)","    //         {","    //             pm.expect(interalAccountsFields.includes(interalAccountsArray[j][0])).to.equal(true);","    //         }","            ","    //         var transferTypesArray = Object.entries(responseJSONdata[i].transferTypes[0]);","    //         for(var k=0; k < transferTypesArray.length; k++)","    //         {","    //             pm.expect(transferTypesFields.includes(transferTypesArray[k][0])).to.equal(true);","    //         }","            ","    //         var productsArray = Object.entries(responseJSONdata[i].products[0]);","    //         for(var l=0; l < productsArray.length; l++)","    //         {","    //             pm.expect(productsFields.includes(productsArray[l][0])).to.equal(true);","    //         }","    //         console.log(\"Internal Bank Accounts fields are verified of data: \"+(i+1));","    //     }","    // });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"6892cd76-3ba5-4d72-99eb-1ed03c6579d5","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/bankaccounts',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","","    var array_ID = [];","","    for(var i = 0; i < jsonData.length; i++)","    {","        array_ID[i] = jsonData[i].id;","    }","    pm.variables.set(\"array_ID\", array_ID);","    console.log(array_ID);","});"],"type":"text/javascript"}}],"_postman_id":"ca810e16-1bdf-47bf-9867-8a5f7623bcfc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/bankaccounts?count=10&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","bankaccounts"],"query":[{"key":"count","value":"10"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]}],"_postman_id":"a75c6dbd-6636-4906-9014-6dee433a90d3","_postman_isSubFolder":true},{"name":"Lookups","item":[{"name":"Get BankAccountAlias","event":[{"listen":"test","script":{"id":"471f5c21-b0c8-404d-9d28-11292d9e5a22","exec":["pm.test(\"Status code is 200\", function()","{","    var jsonData = pm.response.json();","    pm.response.to.have.status(200);","});","console.log(\"First test - 200 OK\");","","","var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.below(100);","    });","}","console.log(\"Second test - 200 OK\");","",""],"type":"text/javascript"}}],"_postman_id":"efc38400-e3c6-4289-ad71-529ae93aec2d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/bankaccountaliases","host":["{{baseURI}}"],"path":["api","bankaccountaliases"]}},"response":[]},{"name":"Get AssetStates","event":[{"listen":"test","script":{"id":"ca7cc891-f59b-4a48-b49b-d2ae367e2f81","exec":["pm.test(\"Status code is 200\", function()","{","    var jsonData = pm.response.json();","    pm.response.to.have.status(200);","});","console.log(\"First test - 200 OK\");","","","var responseJSONdata = JSON.parse(responseBody);","var states = [","        \"A/D Accepted\",","        \"Accepted\",","        \"Available\",","        \"Confirmed\",","        \"Corrected\",","        \"Correction Requested\",","        \"Completed\",","        \"Declined\",","        \"Unsold\",","        \"Funding Requested\",","        \"FundsReceived\",","        \"Paid\",","        \"Unfunded\",","        \"Not for Funding\",","        \"Outstanding\",","        \"Overpaid\",","        \"Partial Paid\",","        \"Partial Past Due\",","        \"Past Due\",","        \"Pending Settlement\",","        \"Transferred\",","        \"Payment Received\"","        ];","","if(pm.response.code == 200 & responseBody !== '' & responseJSONdata.length == states.length)","{","    for(var i=0; i < states.length; i++)","    {","        pm.test(\"Verifying returned Asset state: \"+states[i], function(){","        pm.expect(responseJSONdata.includes(states[i])).to.equal(true);","         });","    }","    ","}","else if(responseJSONdata.length <= states.length)","{","    console.log(\"Less number of Asset states are avilable than anticipated one. Please check.\");    ","}","else","{","    console.log(\"More number of Asset states are added. Please check.\");    ","}","console.log(\"Second test - 200 OK\");","",""],"type":"text/javascript"}}],"_postman_id":"b43d38dd-538f-4b39-a96a-a3ea68f5ba9b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/assetstates","host":["{{baseURI}}"],"path":["api","assetstates"]}},"response":[]},{"name":"Get Participants","event":[{"listen":"test","script":{"id":"50420fbd-c0c2-4c61-a08e-609b91fb469c","exec":["var roleName = [","            \"SCF Admin\",","            \"SCF Supplier\",","            \"SCF Buyer\",","            \"SCF Funder\",","            \"SCF Debtor\",","            \"SCF Investor\",","            \"AR Supplier\",","            \"AR Funder\",","            \"AR Buyer\",","            \"PTS Administrator\",","            \"AR Administrator\",","            \"SCF Administrator\"","        ];","","var productCode = [","            \"SCF\",","            \"AR\",","            \"PTS\"","        ];        ","","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","","    pm.test(\"Verifying Participants with correct Role Name: \", function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {    ","            console.log(responseJSONdata[i]);","            pm.expect(roleName.includes(responseJSONdata[i].roleName)).to.equal(true);","        }","    });","     pm.test(\"Verifying Participants with correct Product Code: \", function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {    ","            console.log(responseJSONdata[i]);","            pm.expect(responseJSONdata[i].productCode).to.be.oneOf(productCode);","        }","    });","}",""],"type":"text/javascript"}}],"_postman_id":"fd0e5dea-dafc-4ef8-9096-ac3b2802da77","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/participants","host":["{{baseURI}}"],"path":["api","participants"]}},"response":[]},{"name":"Get bankPaymentTypes","event":[{"listen":"test","script":{"id":"6ab3659a-654c-4f92-9e19-1139d6cbe054","exec":["// var name = [","//             \"ACH\",","//             \"Check\",","//             \"Check\"","//         ];        ","","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","","    pm.test(\"Verifying bankPaymentTypes: \"+responseJSONdata.length, function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {    ","            pm.expect(responseJSONdata[i].body).to.not.eql(null);","            // pm.expect(name.includes(responseJSONdata[i].name)).to.equal(true);","        }","    });","}",""],"type":"text/javascript"}}],"_postman_id":"1bded76c-fd0b-4b51-b08a-566afef1bb8c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/bankPaymentTypes","host":["{{baseURI}}"],"path":["api","bankPaymentTypes"]}},"response":[]},{"name":"Get fundSourceTypes","event":[{"listen":"test","script":{"id":"4ded8f59-4af8-4df7-a8e9-06e2d85999c4","exec":["// var name = [","//             \"Cure\",","//             \"Funding\",","//             \"Remittance\",","//             \"Repurchase\"","//         ];        ","","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","","    pm.test(\"Verifying fundSourceTypes: \"+responseJSONdata.length, function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {    ","            pm.expect(responseJSONdata[i].body).to.not.eql(null);","            // pm.expect(name.includes(responseJSONdata[i].name)).to.equal(true);","        }","    });","}",""],"type":"text/javascript"}}],"_postman_id":"021cc6e9-c092-4712-9177-1dc529ef363d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/fundSourceTypes","host":["{{baseURI}}"],"path":["api","fundSourceTypes"]}},"response":[]},{"name":"Get  ​settlementCalendars","event":[{"listen":"test","script":{"id":"e8abd94b-c5f0-42b4-a633-b81d930a342b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","","    pm.test(\"Verifying settlementCalendars: \"+responseJSONdata.length, function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {    ","            pm.expect(responseJSONdata[i].body).to.not.eql(null);","        }","    });","}",""],"type":"text/javascript"}}],"_postman_id":"274fa29b-0c6d-494f-be74-d6a8f87c8415","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/settlementCalendars","host":["{{baseURI}}"],"path":["api","settlementCalendars"]}},"response":[]},{"name":"Get  ​platformBankRegions","event":[{"listen":"test","script":{"id":"5bc5acb2-6755-44af-aa12-84313414a2a7","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","","    pm.test(\"Verifying platformBankRegions: \"+responseJSONdata.length, function(){","        for(var i=0; i < responseJSONdata.length; i++)","        {    ","            pm.expect(responseJSONdata[i].body).to.not.eql(null);","        }","    });","}",""],"type":"text/javascript"}}],"_postman_id":"683052f7-8fed-436e-9b8e-2d7a0647528b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/platformBankRegions","host":["{{baseURI}}"],"path":["api","platformBankRegions"]}},"response":[]},{"name":"Get  ​productcodes","event":[{"listen":"test","script":{"id":"415b49aa-1057-4f81-b7c6-82496ce4fbc6","exec":["pm.test(\"Status code is 200\", function()","{","    var jsonData = pm.response.json();","    pm.response.to.have.status(200);","});","console.log(\"First test - 200 OK\");","","","var responseJSONdata = JSON.parse(responseBody);","","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length).to.be.above(300);","    });","}","console.log(\"Second test - 200 OK\");","",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e09f9bd0-f2e2-41d0-b468-3ddbaee2e241","exec":["pm.variables.set(\"productCode\",\"AR\");"],"type":"text/javascript"}}],"_postman_id":"0a54e9ea-5822-4383-949f-fa2909d3e9f7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/productcodes/{{productCode}}/suppliers","host":["{{baseURI}}"],"path":["api","productcodes","{{productCode}}","suppliers"]}},"response":[]}],"_postman_id":"3eb99957-1d33-45c6-8213-6dd6333be057","_postman_isSubFolder":true},{"name":"OutgoingWires","item":[{"name":"Get OutgoingWires/states","event":[{"listen":"prerequest","script":{"id":"6444d95a-206b-4dfb-8e0e-a74f8f712281","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"07ef0aba-d77c-4752-a308-833c74e990a0","exec":["if(pm.response.code == 200 & responseBody !== '')\r","{ \r","    pm.test(\"To check OutgoingWires states: \", function () {\r","        var jsonData = pm.response.json();\r","        var states = [\"Funds Sent\", \"Queued\",\"Completed\"];\r","        for(var i = 0; i < jsonData.outgoingWires.length; i++)\r","        {\r","            console.log(jsonData.outgoingWires[i]);\r","           // pm.expect(jsonData.outgoingWires[i].state).to.be.oneOf(states);\r","           if(jsonData.outgoingWires[i].state === \"Funds Sent\")\r","              pm.expect(jsonData.outgoingWires[i].state).to.be.equal(\"Funds Sent\");\r","\r","        }    \r","    }); \r","}"],"type":"text/javascript"}}],"_postman_id":"a5861ef9-a5e4-4900-a2d6-38f15370945d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/OutgoingWires?states=Funds Sent","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"states","value":"Funds Sent"}]}},"response":[]},{"name":"Get OutgoingWires/minCount","event":[{"listen":"test","script":{"id":"5de19c24-1fdb-49eb-acdb-b5386605dc16","exec":["var responseJSONdata = JSON.parse(responseBody);","if (pm.response.code == 200 & responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.outgoingWires.length, function () {","        pm.expect(responseJSONdata.outgoingWires.length).to.equal(parseInt(pm.variables.get(\"minCount\")));","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c185799c-6662-48bd-9054-da605cc116b5","exec":[""],"type":"text/javascript"}}],"_postman_id":"429302dd-8f84-4df0-b4be-4e414913179c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/OutgoingWires?count={{minCount}}","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"skip","value":"20","disabled":true},{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get OutgoingWires/maxCount","event":[{"listen":"test","script":{"id":"0e212137-cb9a-4f65-ab9b-dbc479229b90","exec":["var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.outgoingWires.length, function(){","        pm.expect(responseJSONdata.outgoingWires.length <= parseInt(pm.variables.get(\"maxCount\"))).to.equal(true);","    });","}"],"type":"text/javascript"}}],"_postman_id":"4e604dcd-bfa1-452e-a521-9725207e7f1d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/OutgoingWires?count={{maxCount}}","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"count","value":"{{maxCount}}"}]}},"response":[]},{"name":"Get OutgoingWires/minSkip","event":[{"listen":"test","script":{"id":"0b5b7614-e1d7-4714-bbaf-0c8c63916540","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    var array_ID_Response = [];","    console.log(responseJSONdata);","    console.log(\"Records: \"+responseJSONdata.outgoingWires.length);","    ","    for(var i = 0; i < responseJSONdata.outgoingWires.length; i++)","    {","        array_ID_Response[i] = responseJSONdata.outgoingWires[i].id;","    }","    console.log(array_ID_Response);","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(true);","        }","    });    ","}    "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"fac415d2-29c9-4b39-904b-8137b13072c4","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/OutgoingWires?count=5',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","    }","","}, function (err, res) {","    var jsonData = res.json();","    var array_ID = [];","","    for (var i = 0; i < jsonData.outgoingWires.length; i++) {","        array_ID[i] = jsonData.outgoingWires[i].id;","    }","    pm.variables.set(\"array_ID\", array_ID);","    console.log(array_ID);","});"],"type":"text/javascript"}}],"_postman_id":"1ef7db29-b7fa-4da0-8dca-f941c1f8e962","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/OutgoingWires?count=100&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"count","value":"100"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]},{"name":"Get  OutgoingWires/{id}","event":[{"listen":"prerequest","script":{"id":"cc516d90-d7c8-4369-8f09-ed643be139bd","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/OutgoingWires?count=5',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","    }","","}, function (err, res) {","    var jsonData = res.json();","    var outgoingWiresID ;","","    for (var i = 0; i < jsonData.outgoingWires.length; i++) {","        outgoingWiresID = jsonData.outgoingWires[i].id;","    }","    pm.variables.set(\"outgoingWiresID\", outgoingWiresID);","    console.log(outgoingWiresID);","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"9fdae6d1-ba23-413d-a42a-9e54042dd0ac","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"1d5f7e85-3bcc-42f0-bdbe-b0bcf0f8da03","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/{{outgoingWiresID}}","host":["{{baseURI}}"],"path":["api","OutgoingWires","{{outgoingWiresID}}"]}},"response":[]},{"name":"Get  OutgoingWires/{{id}}note-attachments","event":[{"listen":"prerequest","script":{"id":"161c25f9-3fc5-426e-9a6b-9bf055eaf2a3","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/OutgoingWires?count=5',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","    }","","}, function (err, res) {","    var jsonData = res.json();","    var outgoingWiresID ;","","    for (var i = 0; i < jsonData.outgoingWires.length; i++) {","        outgoingWiresID = jsonData.outgoingWires[i].id;","    }","    pm.variables.set(\"outgoingWiresID\", outgoingWiresID);","    console.log(outgoingWiresID);","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"cecf213e-a361-4d19-9632-3fe4fe29eb42","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"_postman_id":"09b1c172-1b3c-4953-9688-6d49b5398088","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/{{outgoingWiresID}}/note-attachments","host":["{{baseURI}}"],"path":["api","OutgoingWires","{{outgoingWiresID}}","note-attachments"]}},"response":[]}],"_postman_id":"b3137bc4-4697-4fd8-813d-747749b37281","_postman_isSubFolder":true},{"name":"Currencies","item":[{"name":"Get Currencies","event":[{"listen":"test","script":{"id":"f78b2a10-b5ae-46e4-8bb5-d12d824c3830","exec":["pm.test(\"Status code is 200\", function() {","    pm.response.to.have.status(200);","});","","var responseJSONdata = JSON.parse(responseBody);","pm.test(\"To check product details: \" + responseJSONdata.length, function() ","{","    for (i = 0; i < responseJSONdata.length; i++) ","    {","        pm.expect(responseJSONdata[i].code).to.not.eql(null);","    }","});","    ","","","","// var responseJSONdata = JSON.parse(responseBody);","// var currencyCodes = [","//         \"SGD\",","//         \"USD\"];","","// if(pm.response.code == 200 & responseBody !== '')","// {","    // for (i = 0; i < responseJSONdata.length; i++) {","    // pm.test(\"Verifying returned currency: \" + currencyCodes[i], function() {","    //     pm.expect(responseJSONdata.includes(currencyCodes[i])).to.equal(true);","    // });","    // }","// }"],"type":"text/javascript"}}],"_postman_id":"a24fc3a8-6088-48c8-bff0-cf6bc89d5861","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Currencies","host":["{{baseURI}}"],"path":["api","Currencies"]}},"response":[]},{"name":"Get Currencies/roundingtypes","event":[{"listen":"test","script":{"id":"20fcc3fc-ebaa-40ef-a19d-8090af7e373f","exec":["pm.test(\"Status code is 200\", function() {","    pm.response.to.have.status(200);","});","","var responseJSONdata = JSON.parse(responseBody);","pm.test(\"To check product details: \" + responseJSONdata.length, function() ","{","    for (i = 0; i < responseJSONdata.length; i++) ","    {","        pm.expect(responseJSONdata[i].name).to.not.eql(null);","    }","});",""],"type":"text/javascript"}}],"_postman_id":"46aed0cc-fdcf-4b71-a9d2-39c1661c9dbb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Currencies/roundingtypes","host":["{{baseURI}}"],"path":["api","Currencies","roundingtypes"]}},"response":[]}],"_postman_id":"e00dea30-ff12-45d9-8bfe-ad3322001e39","_postman_isSubFolder":true},{"name":"InternalBankAccountDepositHolds","item":[{"name":"Get InternalBankAccountDepositHolds/maxCount","event":[{"listen":"test","script":{"id":"03c4d43b-79a1-43b3-8cdc-c71e20828a59","exec":["pm.test(\"Status code is 200\", function() {","    pm.response.to.have.status(200);","});","","var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length <= parseInt(pm.variables.get(\"maxCount\"))).to.equal(true);","    });","    ","    pm.expect(responseJSONdata.body).to.not.eql(null);","","}"],"type":"text/javascript"}}],"_postman_id":"f1d2697d-2900-4ed6-a05e-6ce2baba695d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/depositholds?count={{maxCount}}","host":["{{baseURI}}"],"path":["api","depositholds"],"query":[{"key":"count","value":"{{maxCount}}"}]}},"response":[]},{"name":"Get InternalBankAccountDepositHolds/minCount","event":[{"listen":"test","script":{"id":"01fd0761-5b96-4c66-ab00-e0a20aebf7b2","exec":["pm.test(\"Status code is 200\", function() {","    pm.response.to.have.status(200);","});","","var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length <= parseInt(pm.variables.get(\"minCount\"))).to.equal(true);","    });","    ","    pm.expect(responseJSONdata.body).to.not.eql(null);","","}"],"type":"text/javascript"}}],"_postman_id":"ce167a35-bdfd-44cd-84c1-042126c555c3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/depositholds?count={{minCount}}","host":["{{baseURI}}"],"path":["api","depositholds"],"query":[{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get InternalBankAccountDepositHolds/minSkip","event":[{"listen":"test","script":{"id":"9932da98-4169-4026-8ef8-d5ab648c41a6","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    var array_ID_Response = [];","    ","    for(var i = 0; i < responseJSONdata.length; i++)","    {","        array_ID_Response[i] = responseJSONdata[i].id;","    }","    ","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(false);","        }","    });    ","}    "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"0004182b-fe06-43b4-b42c-ddd5b779c2cd","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/depositholds?count=10',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","      }","      ","}, function (err, res) {","    var jsonData = res.json();","    var array_ID = [];","","    for(var i = 0; i < jsonData.length; i++)","    {","        array_ID[i] = jsonData[i].id;","    }","    pm.variables.set(\"array_ID\", array_ID);","    console.log(array_ID);","});"],"type":"text/javascript"}}],"_postman_id":"6c4db3c0-176e-487d-86af-266bb1228fcc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/depositholds?count=10&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","depositholds"],"query":[{"key":"count","value":"10"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]}],"_postman_id":"fd9d9dbe-7fa5-4bc0-8dd2-34475ac41f12","_postman_isSubFolder":true},{"name":"RemittanceReports","item":[{"name":"Get RemittanceReports/payeeId","event":[{"listen":"prerequest","script":{"id":"3c888ab9-805e-405e-87ad-84e1c6ae9e96","exec":["var scurl = pm.variables.get(\"SCBaseURI\");","","scurl = scurl.concat(\"/api/Invoices/\"+pm.variables.get(\"facilityId\")+\"/available?afee=\"+pm.variables.get(\"afee\")+\"&disc=\"+pm.variables.get(\"disc\")+\"&sdid=\"+pm.variables.get(\"sdid\"))+\"&count=500\";","","pm.sendRequest({","    url: scurl,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_SC\")","      }","      ","}, function (err, res) {","","    var  invoiceId=[];invoicesObj=[];invoiceId;","    var iter = 0; minInvoiceCnt=1; cnt=0; supplierId=1;","    ","    var jsonData = res.json();  ","    console.log(\"Total Invoices :  \"+ jsonData.length);","    ","    if (jsonData.length >=  minInvoiceCnt )","        iter = minInvoiceCnt;","    else","        iter = jsonData.length;","    ","    // console.log(\"Data Lenghth:\"+jsonData.length);","    // console.log(jsonData);","    if(jsonData.length > 0){","        for (var i = jsonData.length-1; i >= 0; i--){ ","            // console.log(\"State ID\"+jsonData[i].stateId);","             if(jsonData[i].stateId==1  && jsonData[i].tenor >1){","                //  console.log(jsonData);","                 invoicesObj.push(jsonData[i].id);","                 invoiceId = jsonData[i].id;","                 supplierId= jsonData[i].supplierId;","                 cnt++;","             } ","             if (cnt >= iter)","             break;","        }","        pm.variables.set(\"invoiceId\", invoiceId);","        pm.variables.set(\"supplierId\", supplierId );","        console.log(\"Supplier Id: \"+ supplierId);","        console.log(\"invoiceId : \"+ invoiceId);","        console.log(\"payeeId : \"+supplierId);","                ","        pm.variables.set(\"payeeId\", supplierId);","     ","    } else {","        console.log(\"Zero invoices are in Transferred state. Next flow will not continue\");","        postman.setNextRequest(null);","        pm.expect(jsonData.length).to.be.above(0);  ","    } ","    ","    // var baseURI = pm.environment.get(\"baseURI\");","    // var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    ","    // pm.sendRequest({","    //         url: baseURI +'/api/assets?count=50000',","    //         method: 'GET',","    //         header: {","    //             'Accept': 'application/json',","    //             'Content-Type': 'application/json',","    //             'Authorization': 'bearer '+ accessToken","    //         },","    // }, function (err, res) {","    //      if (err) { console.log(err); }","    //         pm.expect(res).to.have.property('code', 200);","    //         var jsonData = res.json();","    //         var assetId ;","    //         console.log(\"assetId length :\" + jsonData.length);","    //         for (var i=jsonData.length-1; i>= 0; i--)","    //         {","    //             if (jsonData[i].sourceAssetId  ==  pm.variables.get(\"invoiceId\"))","    //             {","    //                 assetId = jsonData[i].id;","    //                 console.log(\"Asset ID in Assets request: \"+ assetId);","    //                 var outstandingAmount = jsonData[i].outstandingAmount;","    //                 pm.variables.set(\"assetId\", assetId);","    //                 pm.variables.set(\"outstandingAmount\", outstandingAmount);","    //                 break;","    //             }","    //         }","            ","    //         var url=  baseURI +'/api/assets/'+ pm.variables.get(\"assetId\");","             ","    //         pm.sendRequest({","    //             url: url,","    //             method: 'GET',","    //             header: {","    //                 'Accept': 'application/json',","    //                 'Content-Type': 'application/json',","    //                 'Authorization': 'bearer '+ accessToken","    //               }","                  ","    //         }, function (err, res2) {","    //             var jsonData2 = res2.json();","    //             // console.log(jsonData2);","      ","    //             console.log(\"payeeId : \"+jsonData2[0].payeeId);","                ","    //             pm.variables.set(\"payeeId\", jsonData2[0].payeeId);","                ","    //         });","    // });","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"6e2e7c51-e6af-4a56-94ee-3a94d829e066","exec":["pm.test(\"To check Status code is 200\", function () {","        pm.response.to.have.status(200);","        // var responseJSONdata = JSON.parse(responseBody); ","        // console.log(responseJSONdata);","});"],"type":"text/javascript"}}],"_postman_id":"225a42ee-38ee-431d-bdbf-a2247413f362","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/RemittanceReports/payees/{{payeeId}}","host":["{{baseURI}}"],"path":["api","RemittanceReports","payees","{{payeeId}}"]}},"response":[]},{"name":"Get RemittanceReports/minCount","event":[{"listen":"prerequest","script":{"id":"ff90c620-8768-42b7-a503-4431878d21cd","exec":["// var scurl = pm.variables.get(\"SCBaseURI\");","","// scurl = scurl.concat(\"/api/Invoices/\"+pm.variables.get(\"facilityId\")+\"/available?afee=\"+pm.variables.get(\"afee\")+\"&disc=\"+pm.variables.get(\"disc\")+\"&sdid=\"+pm.variables.get(\"sdid\"))+\"&count=500\";","","// pm.sendRequest({","//     url: scurl,","//     method: 'GET',","//     header: {","//         'Accept': 'application/json',","//         'Content-Type': 'application/json',","//         'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","//       }","      ","// }, function (err, res) {","","//     var  invoiceId=[];invoicesObj=[];invoiceId;","//     var iter = 0; minInvoiceCnt=1; cnt=0; supplierId=1;","    ","//     var jsonData = res.json();  ","//     console.log(\"Total Invoices :  \"+ jsonData.length);","    ","//     if (jsonData.length >=  minInvoiceCnt )","//         iter = minInvoiceCnt;","//     else","//         iter = jsonData.length;","    ","//     // console.log(\"Data Lenghth:\"+jsonData.length);","//     // console.log(jsonData);","//     if(jsonData.length > 0){","//         for (var i = jsonData.length-1; i >= 0; i--){ ","//             // console.log(\"State ID\"+jsonData[i].stateId);","//              if(jsonData[i].stateId==1  && jsonData[i].tenor >1){","//                 //  console.log(jsonData);","//                  invoicesObj.push(jsonData[i].id);","//                  invoiceId = jsonData[i].id;","//                  supplierId= jsonData[i].supplierId;","//                  cnt++;","//              } ","//              if (cnt >= iter)","//              break;","//         }","//         pm.variables.set(\"invoiceId\", invoiceId);","//         pm.variables.set(\"supplierId\", supplierId );","//         console.log(\"Supplier Id: \"+ supplierId);","//         console.log(\"invoiceId : \"+ invoiceId);","     ","//     } else {","//         console.log(\"Zero invoices are in Transferred state. Next flow will not continue\");","//         postman.setNextRequest(null);","//         pm.expect(jsonData.length).to.be.above(0);  ","//     } ","    ","//     var baseURI = pm.environment.get(\"baseURI\");","//     var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    ","//     pm.sendRequest({","//             url: baseURI +'/api/assets?count=50000',","//             method: 'GET',","//             header: {","//                 'Accept': 'application/json',","//                 'Content-Type': 'application/json',","//                 'Authorization': 'bearer '+ accessToken","//             },","//     }, function (err, res) {","//          if (err) { console.log(err); }","//             pm.expect(res).to.have.property('code', 200);","//             var jsonData = res.json();","//             var assetId ;","//             console.log(\"assetId length :\" + jsonData.length);","//             for (var i=jsonData.length-1; i>= 0; i--)","//             {","//                 if (jsonData[i].sourceAssetId  ==  pm.variables.get(\"invoiceId\"))","//                 {","//                     assetId = jsonData[i].id;","//                     console.log(\"Asset ID in Assets request: \"+ assetId);","//                     var outstandingAmount = jsonData[i].outstandingAmount;","//                     pm.variables.set(\"assetId\", assetId);","//                     pm.variables.set(\"outstandingAmount\", outstandingAmount);","//                     break;","//                 }","//             }","            ","//             var url=  baseURI +'/api/assets/'+ pm.variables.get(\"assetId\");","             ","//             pm.sendRequest({","//                 url: url,","//                 method: 'GET',","//                 header: {","//                     'Accept': 'application/json',","//                     'Content-Type': 'application/json',","//                     'Authorization': 'bearer '+ accessToken","//                   }","                  ","//             }, function (err, res2) {","//                 var jsonData2 = res2.json();","//                 // console.log(jsonData2);","      ","//                 console.log(\"payeeId : \"+jsonData2[0].payeeId);","                ","//                 pm.variables.set(\"payeeId\", jsonData2[0].payeeId);","                ","//             });","//     });","// });",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"5a715265-beac-4c55-84fc-63d209fc2569","exec":["var responseJSONdata = JSON.parse(responseBody);","if (pm.response.code == 200 & responseBody !== '') {","    pm.test(\"Matching data items returned: \" + responseJSONdata.length, function () {","        pm.expect(responseJSONdata.length).to.equal(parseInt(pm.variables.get(\"minCount\")));","    });","}"],"type":"text/javascript"}}],"_postman_id":"fe6d59ef-a35b-4bcb-abdb-4ded85b08b10","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/RemittanceReports/payees/223?count={{minCount}}","host":["{{baseURI}}"],"path":["api","RemittanceReports","payees","223"],"query":[{"key":"count","value":"{{minCount}}"}]}},"response":[]},{"name":"Get RemittanceReports/maxCount","event":[{"listen":"prerequest","script":{"id":"058938e4-bff6-4c8d-b889-6e2f0460ff66","exec":["// var scurl = pm.variables.get(\"SCBaseURI\");","","// scurl = scurl.concat(\"/api/Invoices/\"+pm.variables.get(\"facilityId\")+\"/available?afee=\"+pm.variables.get(\"afee\")+\"&disc=\"+pm.variables.get(\"disc\")+\"&sdid=\"+pm.variables.get(\"sdid\"))+\"&count=500\";","","// pm.sendRequest({","//     url: scurl,","//     method: 'GET',","//     header: {","//         'Accept': 'application/json',","//         'Content-Type': 'application/json',","//         'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","//       }","      ","// }, function (err, res) {","","//     var  invoiceId=[];invoicesObj=[];invoiceId;","//     var iter = 0; minInvoiceCnt=1; cnt=0; supplierId=1;","    ","//     var jsonData = res.json();  ","//     console.log(\"Total Invoices :  \"+ jsonData.length);","    ","//     if (jsonData.length >=  minInvoiceCnt )","//         iter = minInvoiceCnt;","//     else","//         iter = jsonData.length;","    ","//     // console.log(\"Data Lenghth:\"+jsonData.length);","//     // console.log(jsonData);","//     if(jsonData.length > 0){","//         for (var i = jsonData.length-1; i >= 0; i--){ ","//             // console.log(\"State ID\"+jsonData[i].stateId);","//              if(jsonData[i].stateId==1  && jsonData[i].tenor >1){","//                 //  console.log(jsonData);","//                  invoicesObj.push(jsonData[i].id);","//                  invoiceId = jsonData[i].id;","//                  supplierId= jsonData[i].supplierId;","//                  cnt++;","//              } ","//              if (cnt >= iter)","//              break;","//         }","//         pm.variables.set(\"invoiceId\", invoiceId);","//         pm.variables.set(\"supplierId\", supplierId );","//         console.log(\"Supplier Id: \"+ supplierId);","//         console.log(\"invoiceId : \"+ invoiceId);","     ","//     } else {","//         console.log(\"Zero invoices are in Transferred state. Next flow will not continue\");","//         postman.setNextRequest(null);","//         pm.expect(jsonData.length).to.be.above(0);  ","//     } ","    ","//     var baseURI = pm.environment.get(\"baseURI\");","//     var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    ","//     pm.sendRequest({","//             url: baseURI +'/api/assets?count=50000',","//             method: 'GET',","//             header: {","//                 'Accept': 'application/json',","//                 'Content-Type': 'application/json',","//                 'Authorization': 'bearer '+ accessToken","//             },","//     }, function (err, res) {","//          if (err) { console.log(err); }","//             pm.expect(res).to.have.property('code', 200);","//             var jsonData = res.json();","//             var assetId ;","//             console.log(\"assetId length :\" + jsonData.length);","//             for (var i=jsonData.length-1; i>= 0; i--)","//             {","//                 if (jsonData[i].sourceAssetId  ==  pm.variables.get(\"invoiceId\"))","//                 {","//                     assetId = jsonData[i].id;","//                     console.log(\"Asset ID in Assets request: \"+ assetId);","//                     var outstandingAmount = jsonData[i].outstandingAmount;","//                     pm.variables.set(\"assetId\", assetId);","//                     pm.variables.set(\"outstandingAmount\", outstandingAmount);","//                     break;","//                 }","//             }","            ","//             var url=  baseURI +'/api/assets/'+ pm.variables.get(\"assetId\");","             ","//             pm.sendRequest({","//                 url: url,","//                 method: 'GET',","//                 header: {","//                     'Accept': 'application/json',","//                     'Content-Type': 'application/json',","//                     'Authorization': 'bearer '+ accessToken","//                   }","                  ","//             }, function (err, res2) {","//                 var jsonData2 = res2.json();","//                 // console.log(jsonData2);","      ","//                 console.log(\"payeeId : \"+jsonData2[0].payeeId);","                ","//                 pm.variables.set(\"payeeId\", jsonData2[0].payeeId);","                ","//             });","//     });","// });",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"24167ce8-df06-4a7a-8744-7c9cac71fcf5","exec":["var responseJSONdata = JSON.parse(responseBody); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \"+ responseJSONdata.length, function(){","        pm.expect(responseJSONdata.length <= parseInt(20)).to.equal(true);","    });","}"],"type":"text/javascript"}}],"_postman_id":"e34a4164-bb0c-47e7-b095-00368785cf36","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/RemittanceReports/payees/223?count=20","host":["{{baseURI}}"],"path":["api","RemittanceReports","payees","223"],"query":[{"key":"count","value":"20"}]}},"response":[]},{"name":"Get RemittanceReports/minSkip","event":[{"listen":"prerequest","script":{"id":"0f071181-bca8-46b0-b38c-fb047614647e","exec":["// var scurl = pm.variables.get(\"SCBaseURI\");","","// scurl = scurl.concat(\"/api/Invoices/\"+pm.variables.get(\"facilityId\")+\"/available?afee=\"+pm.variables.get(\"afee\")+\"&disc=\"+pm.variables.get(\"disc\")+\"&sdid=\"+pm.variables.get(\"sdid\"))+\"&count=500\";","","// pm.sendRequest({","//     url: scurl,","//     method: 'GET',","//     header: {","//         'Accept': 'application/json',","//         'Content-Type': 'application/json',","//         'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","//       }","      ","// }, function (err, res) {","","//     var  invoiceId=[];invoicesObj=[];invoiceId;","//     var iter = 0; minInvoiceCnt=1; cnt=0; supplierId=1;","    ","//     var jsonData = res.json();  ","//     console.log(\"Total Invoices :  \"+ jsonData.length);","    ","//     if (jsonData.length >=  minInvoiceCnt )","//         iter = minInvoiceCnt;","//     else","//         iter = jsonData.length;","    ","//     // console.log(\"Data Lenghth:\"+jsonData.length);","//     // console.log(jsonData);","//     if(jsonData.length > 0){","//         for (var i = jsonData.length-1; i >= 0; i--){ ","//             // console.log(\"State ID\"+jsonData[i].stateId);","//              if(jsonData[i].stateId==1  && jsonData[i].tenor >1){","//                 //  console.log(jsonData);","//                  invoicesObj.push(jsonData[i].id);","//                  invoiceId = jsonData[i].id;","//                  supplierId= jsonData[i].supplierId;","//                  cnt++;","//              } ","//              if (cnt >= iter)","//              break;","//         }","//         pm.variables.set(\"invoiceId\", invoiceId);","//         pm.variables.set(\"supplierId\", supplierId );","//         console.log(\"Supplier Id: \"+ supplierId);","//         console.log(\"invoiceId : \"+ invoiceId);","     ","//     } else {","//         console.log(\"Zero invoices are in Transferred state. Next flow will not continue\");","//         postman.setNextRequest(null);","//         pm.expect(jsonData.length).to.be.above(0);  ","//     } ","    ","//     var baseURI = pm.environment.get(\"baseURI\");","//     var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    ","//     pm.sendRequest({","//             url: baseURI +'/api/assets?count=50000',","//             method: 'GET',","//             header: {","//                 'Accept': 'application/json',","//                 'Content-Type': 'application/json',","//                 'Authorization': 'bearer '+ accessToken","//             },","//     }, function (err, res) {","//          if (err) { console.log(err); }","//             pm.expect(res).to.have.property('code', 200);","//             var jsonData = res.json();","//             var assetId ;","//             console.log(\"assetId length :\" + jsonData.length);","//             for (var i=jsonData.length-1; i>= 0; i--)","//             {","//                 if (jsonData[i].sourceAssetId  ==  pm.variables.get(\"invoiceId\"))","//                 {","//                     assetId = jsonData[i].id;","//                     console.log(\"Asset ID in Assets request: \"+ assetId);","//                     var outstandingAmount = jsonData[i].outstandingAmount;","//                     pm.variables.set(\"assetId\", assetId);","//                     pm.variables.set(\"outstandingAmount\", outstandingAmount);","//                     break;","//                 }","//             }","            ","//             var url=  baseURI +'/api/assets/'+ pm.variables.get(\"assetId\");","             ","//             pm.sendRequest({","//                 url: url,","//                 method: 'GET',","//                 header: {","//                     'Accept': 'application/json',","//                     'Content-Type': 'application/json',","//                     'Authorization': 'bearer '+ accessToken","//                   }","                  ","//             }, function (err, res2) {","//                 var jsonData2 = res2.json();","//                 // console.log(jsonData2);","      ","//                 console.log(\"payeeId : \"+jsonData2[0].payeeId);","                ","//                 pm.variables.set(\"payeeId\", jsonData2[0].payeeId);","                ","//             });","//     });","    ","    pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/RemittanceReports/payees/'+pm.variables.get(\"payeeId\")+'?count=10',","   ///url: pm.variables.get(\"baseURI\") + '/api/RemittanceReports/payees/2963?count=100',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","      }","      ","    }, function (err, res) {","        var jsonData = res.json();","        console.log(\"Pre-req cnt------->\"+jsonData.length);","         var totalCnt = jsonData.length;","        console.log(\"Total length: \"+totalCnt);","        pm.variables.set(\"totalCnt\", jsonData.length);","       /* var array_ID = [];","    ","        for(var i = 0; i < jsonData.length; i++)","        {","            array_ID[i] = jsonData[i].transferId;","        }","        pm.variables.set(\"array_ID\", array_ID);","        console.log(array_ID);*/","    });","// });",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"fd6a10ef-c3a6-459c-895c-b9c83c054fc1","exec":["var responseJSONdata = JSON.parse(responseBody);","/*","var maxCount = responseJSONdata.length;","console.log(\"Max count: \"+maxCount);","var tCnt = pm.variables.get(\"totalCnt\"); ","if(tCnt > 10 )","{","    pm.test(\"Matching data items returned 1: \"+ responseJSONdata.length, function()","    {","        if(maxCount < 10)","        {","            var newCnt = tCnt - 1;","            pm.expect(responseJSONdata.length).to.be.equal(newCnt);","        }","        else","        {","            pm.expect(responseJSONdata.length).to.be.equal(10);","","        }","    });","}","else{","    ","    pm.test(\"Matching data items returned 2: \"+ responseJSONdata.length, function()","    {","        var newCnt = tCnt - 1;","        pm.expect(newCnt).to.be.equal(responseJSONdata.length);","        console.log(\"Total length: \"+newCnt);","","    });","}","*/","//////////////////////////////////////////////////////////////////////","// if(pm.response.code == 200 & responseBody !== '')","// {","//     var responseJSONdata = JSON.parse(responseBody);","//     pm.test(\"Matching data items returned after skip: \"+ responseJSONdata.length, function(){","//         pm.expect(responseJSONdata.length).to.be.equal(10);","//     });","//  }","///////////////////////////////////////////////////////////////////////","  /*  var array_ID_Response = [];","    ","    for(var i = 0; i < responseJSONdata.length; i++)","    {","        array_ID_Response[i] = responseJSONdata[i].transferId;","    }","    ","    console.log(array_ID_Response);","    var array_ID = pm.variables.get(\"array_ID\");","    ","    pm.test(\"Verifying data items returned: \", function(){","            ","        for(var i = 0; i < pm.variables.get(\"minSkip\"); i++)","        {","            pm.expect(array_ID_Response.includes(array_ID[i])).to.equal(false);","        }","    });  */  ","    "],"type":"text/javascript"}}],"_postman_id":"e45a6f1d-1106-4557-acb9-0601531589d8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/RemittanceReports/payees/{{payeeId}}?count=10&skip={{minSkip}}","host":["{{baseURI}}"],"path":["api","RemittanceReports","payees","{{payeeId}}"],"query":[{"key":"count","value":"10"},{"key":"skip","value":"{{minSkip}}"}]}},"response":[]},{"name":"Get RemittanceReports/states","event":[{"listen":"prerequest","script":{"id":"25fbcc25-6a94-4b92-b40f-d9cf4328842c","exec":["// var scurl = pm.variables.get(\"SCBaseURI\");","","// scurl = scurl.concat(\"/api/Invoices/\"+pm.variables.get(\"facilityId\")+\"/available?afee=\"+pm.variables.get(\"afee\")+\"&disc=\"+pm.variables.get(\"disc\")+\"&sdid=\"+pm.variables.get(\"sdid\"))+\"&count=500\";","","// pm.sendRequest({","//     url: scurl,","//     method: 'GET',","//     header: {","//         'Accept': 'application/json',","//         'Content-Type': 'application/json',","//         'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","//       }","      ","// }, function (err, res) {","","//     var  invoiceId=[];invoicesObj=[];invoiceId;","//     var iter = 0; minInvoiceCnt=1; cnt=0; supplierId=1;","    ","//     var jsonData = res.json();  ","//     console.log(\"Total Invoices :  \"+ jsonData.length);","    ","//     if (jsonData.length >=  minInvoiceCnt )","//         iter = minInvoiceCnt;","//     else","//         iter = jsonData.length;","    ","//     // console.log(\"Data Lenghth:\"+jsonData.length);","//     // console.log(jsonData);","//     if(jsonData.length > 0){","//         for (var i = jsonData.length-1; i >= 0; i--){ ","//             // console.log(\"State ID\"+jsonData[i].stateId);","//              if(jsonData[i].stateId==1  && jsonData[i].tenor >1){","//                 //  console.log(jsonData);","//                  invoicesObj.push(jsonData[i].id);","//                  invoiceId = jsonData[i].id;","//                  supplierId= jsonData[i].supplierId;","//                  cnt++;","//              } ","//              if (cnt >= iter)","//              break;","//         }","//         pm.variables.set(\"invoiceId\", invoiceId);","//         pm.variables.set(\"supplierId\", supplierId );","//         console.log(\"Supplier Id: \"+ supplierId);","//         console.log(\"invoiceId : \"+ invoiceId);","     ","//     } else {","//         console.log(\"Zero invoices are in Transferred state. Next flow will not continue\");","//         postman.setNextRequest(null);","//         pm.expect(jsonData.length).to.be.above(0);  ","//     } ","    ","//     var baseURI = pm.environment.get(\"baseURI\");","//     var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    ","//     pm.sendRequest({","//             url: baseURI +'/api/assets?count=50000',","//             method: 'GET',","//             header: {","//                 'Accept': 'application/json',","//                 'Content-Type': 'application/json',","//                 'Authorization': 'bearer '+ accessToken","//             },","//     }, function (err, res) {","//          if (err) { console.log(err); }","//             pm.expect(res).to.have.property('code', 200);","//             var jsonData = res.json();","//             var assetId ;","//             console.log(\"assetId length :\" + jsonData.length);","//             for (var i=jsonData.length-1; i>= 0; i--)","//             {","//                 if (jsonData[i].sourceAssetId  ==  pm.variables.get(\"invoiceId\"))","//                 {","//                     assetId = jsonData[i].id;","//                     console.log(\"Asset ID in Assets request: \"+ assetId);","//                     var outstandingAmount = jsonData[i].outstandingAmount;","//                     pm.variables.set(\"assetId\", assetId);","//                     pm.variables.set(\"outstandingAmount\", outstandingAmount);","//                     break;","//                 }","//             }","            ","//             var url=  baseURI +'/api/assets/'+ pm.variables.get(\"assetId\");","             ","//             pm.sendRequest({","//                 url: url,","//                 method: 'GET',","//                 header: {","//                     'Accept': 'application/json',","//                     'Content-Type': 'application/json',","//                     'Authorization': 'bearer '+ accessToken","//                   }","                  ","//             }, function (err, res2) {","//                 var jsonData2 = res2.json();","//                 // console.log(jsonData2);","      ","//                 console.log(\"payeeId : \"+jsonData2[0].payeeId);","                ","//                 pm.variables.set(\"payeeId\", jsonData2[0].payeeId);","                ","//             });","//     });","// });",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"e97de900-061b-4528-8331-a3f17abd66d0","exec":["if(pm.response.code == 200 & responseBody !== '')\r","{ \r","    pm.test(\"To check RemittanceReports states: \", function () {\r","        var jsonData = pm.response.json();\r","        var states = [\"Ready\"];\r","        for(var i = 0; i < jsonData.length; i++)\r","        {\r","            pm.expect(jsonData[i].state).to.be.oneOf(states);\r","        }    \r","    }); \r","}"],"type":"text/javascript"}}],"_postman_id":"ababaa70-271b-455f-8a5f-93e0848f8b5b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/RemittanceReports/payees/{{payeeId}}?states=Ready","host":["{{baseURI}}"],"path":["api","RemittanceReports","payees","{{payeeId}}"],"query":[{"key":"states","value":"Ready"}]}},"response":[]}],"_postman_id":"99c33bb1-09ab-4784-a0cf-6a10616e68cf","_postman_isSubFolder":true},{"name":"Get Version","event":[{"listen":"test","script":{"id":"8411ac51-589b-40b9-9f03-4dc2cfd4f886","exec":["if(pm.response.code == 200 & responseBody !== '')","{","    var jsonData = pm.response.json();","    pm.test(\"Body is correct\", function () {","        pm.expect(jsonData).to.have.all.keys('version');","    });","    ","}"],"type":"text/javascript"}}],"_postman_id":"56110433-73e5-4807-8606-38b6a96c8a28","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Versions","host":["{{baseURI}}"],"path":["api","Versions"]}},"response":[]}],"_postman_id":"78edbfd9-ad96-46d8-83fa-5ef42a21402e","description":"Contains GET APIs for testing - Happy flow","event":[{"listen":"prerequest","script":{"id":"c2ee226d-86e9-4a7b-992d-9441a695515c","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"5512994b-4305-45ad-b850-9342777f6aad","type":"text/javascript","exec":["pm.test(\"Status code is 200\", function()","{ ","    pm.response.to.have.status(200);","});"," ",""]}}],"_postman_isSubFolder":true}],"_postman_id":"69352ae1-2c87-4f95-9a28-e08b6c984a76","description":"Contains GET APIs for testing","event":[{"listen":"prerequest","script":{"id":"447dd334-4415-480e-bc97-90a1292f208e","type":"text/javascript","exec":["jwt = pm.environment.get('accessToken_SC');","if (jwt) {","    jwt_payload_base64 = jwt.split('.')[1];","    jwt_decode = JSON.parse(atob(jwt_payload_base64));","}","// pm.environment.set('audience', 'b2d493ef-50e1-4cbf-86b9-42b25a29ad63');","//Check if token you already have expired","if (!jwt || (jwt_decode && Date.now() >= jwt_decode['exp'] * 1000)) {","    let audience = pm.environment.get('audience');","    let getTokenRequest = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: pm.environment.get('SCF_Admin') },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid ' + audience + ' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest, (err, response) => {","        let jsonResponse = response.json(),","            accessToken = jsonResponse.access_token;","        console.log(\"Top Level\", { err, jsonResponse, accessToken })","        pm.environment.set('accessToken_SC', accessToken);","    });","}",""]}},{"listen":"test","script":{"id":"34b1fd65-2d48-4c75-b514-75dd82237d4f","type":"text/javascript","exec":[""]}}]},{"name":"PUT","item":[{"name":"Values","item":[{"name":"Put Values","event":[{"listen":"test","script":{"id":"50c5ab1e-09d4-4aec-b9b0-e8731f398c59","exec":["pm.test(\"Verifying response code \", function(){","        pm.expect(pm.response.code).to.equal(200);","    });","","if(pm.response.code == 200)","{","pm.test(\"Value updated sucessfully!\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"7f6c537d-9266-4fb8-acb0-71082aca82ea","exec":["// var url = pm.variables.get(\"baseURI\");","// url = url.concat(\"/api/Values/\");","","// pm.sendRequest({","//     url: url,","//     method: 'GET',","//     header: {","//         'Accept': 'application/json',","//         'Content-Type': 'application/json',","//         'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","//       }","      ","// }, function (err, res) {","//     var jsonData = res.json();","//     // console.log(jsonData);","//     console.log(jsonData.length);","//     var randomNumber = Math.floor((Math.random() * jsonData.length));","//     // console.log(randomNumber);","//     pm.variables.set(\"ClientAccountID\", jsonData[randomNumber].id);","//     console.log(pm.variables.get(\"ClientAccountID\"));","// });",""],"type":"text/javascript"}}],"_postman_id":"21e445c1-8da4-482e-bf22-19adf860ba8a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\"Test\"\n","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Values/5","host":["{{baseURI}}"],"path":["api","Values","5"]}},"response":[]}],"_postman_id":"91666143-c908-4fe3-baac-76d5845c4fc5","_postman_isSubFolder":true},{"name":"OutgoingWires","item":[{"name":"Put OutgoingWires/{id}?command=extract","event":[{"listen":"prerequest","script":{"id":"52b678a0-964d-4665-b646-98311da270ca","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/OutgoingWires?states=Queued\");","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","    }","","}, function (err, res) {","    var jsonData = res.json();","    console.log(jsonData);","    console.log(jsonData.outgoingWires.length);","    var randomNumber = Math.floor((Math.random() * jsonData.outgoingWires.length));","    console.log(randomNumber);","    pm.variables.set(\"OutgoingWiresID\", jsonData.outgoingWires[randomNumber].id);","","    console.log(pm.variables.get(\"OutgoingWiresID\"));","    // pm.variables.set(\"alias\",\"SCF-OP-00004-SGD\");","    // pm.variables.set(\"currencyCode\",\"SGD\");","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"972d2886-2efd-498f-9f40-be30f4226bae","exec":["pm.test(\"Status code is 204\", function () {","    pm.response.to.have.status(204);","});"],"type":"text/javascript"}}],"_postman_id":"36f519e9-bd39-4acc-8d5a-a4a23cba03fb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\r\n  \"{{OutgoingWiresID}}\"\r\n]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/{{OutgoingWiresID}}?command=extract","host":["{{baseURI}}"],"path":["api","OutgoingWires","{{OutgoingWiresID}}"],"query":[{"key":"command","value":"extract"}]}},"response":[]},{"name":"Put OutgoingWires/{id}?command=retract","event":[{"listen":"prerequest","script":{"id":"c48e99ef-5766-4b0f-85ca-78c757e16181","exec":["","var url = pm.variables.get(\"baseURI\");","url = url.concat(\"/api/OutgoingWires?states=Queued\");","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","    }","","}, function (err, res) {","    var jsonData = res.json();","    console.log(jsonData);","    console.log(jsonData.outgoingWires.length);","    var randomNumber = Math.floor((Math.random() * jsonData.outgoingWires.length));","    console.log(randomNumber);","    pm.variables.set(\"OutgoingWiresID\", jsonData.outgoingWires[randomNumber].id);","","    console.log(pm.variables.get(\"OutgoingWiresID\"));","    // pm.variables.set(\"alias\",\"SCF-OP-00004-SGD\");","    // pm.variables.set(\"currencyCode\",\"SGD\");","","});",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"8d8dc155-7661-4fa0-8b3a-ce5362cdb05a","exec":["pm.test(\"Status code is 204\", function () {","    pm.response.to.have.status(204);","});"],"type":"text/javascript"}}],"_postman_id":"8dfae72e-e2b6-4032-b081-ea46c79e76c7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\r\n  \"{{OutgoingWiresID}}\"\r\n]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/{{OutgoingWiresID}}?command=retract","host":["{{baseURI}}"],"path":["api","OutgoingWires","{{OutgoingWiresID}}"],"query":[{"key":"command","value":"retract"}]}},"response":[]},{"name":"Put   ​OutgoingWires​/{id}​/note-attachments","event":[{"listen":"prerequest","script":{"id":"bed7dd91-c951-4d29-94c0-8bcb7a54e838","exec":["pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/OutgoingWires?count=5',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","    }","","}, function (err, res) {","    var jsonData = res.json();","    var outgoingWiresID ;","","    for (var i = 0; i < jsonData.outgoingWires.length; i++) {","        outgoingWiresID = jsonData.outgoingWires[i].id;","    }","    pm.variables.set(\"outgoingWiresID\", outgoingWiresID);","    console.log(outgoingWiresID);","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"68c29ad6-0196-4dd2-ba4d-049db6ca7b4b","exec":["pm.test(\"Status code is 200 \", function () {","    pm.response.to.have.status(200);","});","if(pm.response.status.code==200)","{","","pm.sendRequest({","    url: pm.variables.get(\"baseURI\") + '/api/OutgoingWires/'+ pm.variables.get(\"outgoingWiresID\")+'/note-attachments',","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","    }","","}, function (err, res) {","    var responseJson = res.json();","    var list = (responseJson).length;","    console.log(list);","   for (var i = 0; i < list; i++) ","    {","    var counter = responseJson[i];","    note=counter.note","    outgoingwireType=counter.type","    }","    pm.variables.set(\"note\", note);","    pm.variables.set(\"type\", outgoingwireType);","    console.log(outgoingwireType);","    console.log(note);","","});","}","",""],"type":"text/javascript"}}],"_postman_id":"1aff75cc-a508-4f3f-88d3-894146449a92","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"formdata","formdata":[{"key":"note","value":"API_TEST","type":"text"}],"options":{"formdata":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/{{outgoingWiresID}}/note-attachments","host":["{{baseURI}}"],"path":["api","OutgoingWires","{{outgoingWiresID}}","note-attachments"]}},"response":[]}],"_postman_id":"b71a69f7-5804-4e22-b04c-ba6b2e65bc99","_postman_isSubFolder":true},{"name":"Clientbankaccount","item":[{"name":"PUT  /api/bankaccounts/client/{id}/approve","event":[{"listen":"prerequest","script":{"id":"a0500344-ba3f-4168-8df5-f76fce4e2cad","exec":["pm.variables.set(\"currencyCode\", \"USD\");\r","var companyName = pm.environment.get(\"companyName\");\r","//pm.variables.set(\"command\", \"approve\");\r","\r","var moment = require('moment');\r","var timeT = moment.utc().format();\r","console.log(\"Current time: \" + timeT)\r","pm.variables.set(\"currentTime\", timeT);\r","\r","//Get Participant Id from pts \r","var url = pm.environment.get(\"baseURI\") + \"/api/participants\" ;\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer ' + pm.environment.get(\"accessToken_LiquidxUser3\")\r","    }\r","}, function (err, res) {\r","    if (err) { console.log(url + err); }\r","            \r","    pm.test(\"To check /api/participants response is 200\", function () {\r","        pm.expect(res.code).to.eql(200);      \r","    });\r","    var jsonData = res.json();\r","    var flag= false;\r","    for (var i = 0; i < jsonData.length; i++) {\r","        if (jsonData[i].name === companyName ) {\r","            pm.variables.set(\"participantId\", jsonData[i].id);\r","            pm.variables.set(\"roleName\", jsonData[i].roleName);\r","            pm.variables.set(\"productCode\", jsonData[i].productCode);\r","            pm.variables.set(\"accountName\", jsonData[i].name);\r","            console.log(\"participantId\", jsonData[i].id);\r","            flag= true;\r","            break;\r","        }\r","    } \r","    pm.test(\"To check /api/participants returns the \"+ companyName, function () {\r","        pm.expect(flag).to.eql(true, \"Verify that \"+ companyName + \" exists in participants\");      \r","    }); \r","    \r","});\r","\r","\r","pm.sendRequest({\r","    url: pm.variables.get(\"baseURI\") + '/api/bankaccounts/client?count=500',\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","}, function (err, res) {\r","    var jsonData = res.json();\r","\r","    for(var i = 0; i < jsonData.length; i++)\r","    {\r","            if (jsonData[i].accountName === companyName )\r","            {\r","    \r","            pm.variables.set(\"bankaccountid\", jsonData[i].id);\r","            }\r","    }\r","   \r","});\r","\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"5980a901-ab62-4e0b-8c95-0296b32c15c6","exec":["\r","pm.test(\"To check Clientbank account approve is Successful \", function () {\r","    pm.expect(pm.response.code).to.be.eql(204);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"e8fe69be-cc4e-4893-a942-3a030c57ff55","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\r\n \"id\": \"{{bankaccountid}}\",\r\n \"accountName\": \"{{accountName}}\",\r\n \"productCode\": \"{{productCode}}\",\r\n \"roleName\": \"{{roleName}}\",\r\n \"participantId\": {{participantId}},\r\n \"currencyCode\": \"{{currencyCode}}\",\r\n\"alias\": \"QA-Alias{{participantId}}_{{currencyCode}}\",\r\n\"bankAlias\": \"QA-Alias{{participantId}}_{{currencyCode}}\",\r\n\"isUsHeld\": true,\r\n\"isDefaultAccount\": true,\r\n\"nickname\": \"QA-Alias{{participantId}}_{{currencyCode}}\",\r\n\"effectiveDate\": \"{{currentTime}}\",\r\n\"timezone\": \"America/New_York\",\r\n\"isApproved\": true,\r\n\"isEnabled\": true,\r\n\"isActive\": true,\r\n \"isUnrelatedToLegalEntity\": false,\r\n \"SettlementAlias\" : \"QA-Settlement-Alias{{participantId}}_{{currencyCode}}\",\r\n \"regionCode\" : \"NY\",\r\n  \"modifiedOn\": \"2020-07-28T08:09:44.037Z\"\r\n  \r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/bankaccounts/client/{{bankaccountid}}/approve","host":["{{baseURI}}"],"path":["api","bankaccounts","client","{{bankaccountid}}","approve"]}},"response":[]},{"name":"PUT  /api/bankaccounts/client/{id}/deny","event":[{"listen":"prerequest","script":{"id":"862485f0-bb3f-439c-8a38-5dce20785c19","exec":["pm.variables.set(\"currencyCode\", \"USD\");\r","var companyName = pm.environment.get(\"companyName\");\r","\r","\r","var moment = require('moment');\r","var timeT = moment.utc().format();\r","console.log(\"Current time: \" + timeT)\r","pm.variables.set(\"currentTime\", timeT);\r","\r","//Get Participant Id from pts \r","var url = pm.variables.get(\"baseURI\");\r","var url = pm.environment.get(\"baseURI\") + \"/api/participants\" ;\r","pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer ' + pm.environment.get(\"accessToken_LiquidxUser3\")\r","    }\r","}, function (err, res) {\r","    if (err) { console.log(url + err); }\r","            \r","    pm.test(\"To check /api/participants response is 200\", function () {\r","        pm.expect(res.code).to.eql(200);      \r","    });\r","    var jsonData = res.json();\r","    var flag= false;\r","    for (var i = 0; i < jsonData.length; i++) {\r","        if (jsonData[i].name === companyName ) {\r","            pm.variables.set(\"participantId\", jsonData[i].id);\r","            pm.variables.set(\"roleName\", jsonData[i].roleName);\r","            pm.variables.set(\"productCode\", jsonData[i].productCode);\r","            pm.variables.set(\"accountName\", jsonData[i].name);\r","            console.log(\"participantId\", jsonData[i].id);\r","            flag= true;\r","            break;\r","        }\r","    } \r","    pm.test(\"To check /api/participants returns the \"+ companyName, function () {\r","        pm.expect(flag).to.eql(true, \"Verify that \"+ companyName + \" exists in participants\");      \r","    }); \r","    \r","});\r","\r","\r","pm.sendRequest({\r","    url: pm.variables.get(\"baseURI\") + '/api/bankaccounts/client?count=500',\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","}, function (err, res) {\r","    var jsonData = res.json();\r","\r","    for(var i = 0; i < jsonData.length; i++)\r","    {\r","            if (jsonData[i].accountName === companyName ){\r","    \r","            pm.variables.set(\"bankaccountid\", jsonData[i].id);\r","            console.log(\"bankaccountid\", jsonData[i].id);\r","\r","            }\r","    }\r","   \r","});\r","\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"f489cfe1-1e40-41f4-a12f-661c7b824754","exec":["\r","pm.test(\"To check Clientbank account deny is Successful \", function () {\r","    pm.expect(pm.response.code).to.be.eql(204);\r","});\r",""],"type":"text/javascript"}}],"_postman_id":"c85ab6e6-8561-46e5-a9fd-4c206483ee5a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\r\n \"id\": \"{{bankaccountid}}\",\r\n \"accountName\": \"{{accountName}}\",\r\n \"productCode\": \"{{productCode}}\",\r\n \"roleName\": \"{{roleName}}\",\r\n \"participantId\": {{participantId}},\r\n \"currencyCode\": \"{{currencyCode}}\",\r\n\"alias\": \"QA-Alias{{participantId}}_{{currencyCode}}\",\r\n\"bankAlias\": \"QA-Alias{{participantId}}_{{currencyCode}}\",\r\n\"isUsHeld\": true,\r\n\"isDefaultAccount\": true,\r\n\"nickname\": \"QA-Alias{{participantId}}_{{currencyCode}}\",\r\n\"effectiveDate\": \"{{currentTime}}\",\r\n\"timezone\": \"America/New_York\",\r\n\"isApproved\": true,\r\n\"isEnabled\": true,\r\n\"isActive\": true,\r\n \"isUnrelatedToLegalEntity\": false,\r\n \"SettlementAlias\" : \"QA-Settlement-Alias{{participantId}}_{{currencyCode}}\",\r\n \"regionCode\" : \"NY\",\r\n  \"modifiedOn\": \"2020-07-28T08:09:44.037Z\"\r\n \r\n  \r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/bankaccounts/client/{{bankaccountid}}/deny","host":["{{baseURI}}"],"path":["api","bankaccounts","client","{{bankaccountid}}","deny"]}},"response":[]}],"_postman_id":"e0f0b15e-4907-4ca5-b610-756c237d0e66","_postman_isSubFolder":true},{"name":"Bankaccountreceipt ","item":[],"_postman_id":"d5002bb7-83cc-4bf5-b827-fd67d614e2bc","_postman_isSubFolder":true},{"name":"Bankaccountreceipt ","item":[{"name":"BankAccountReceipts/{id}/note-attachments","event":[{"listen":"prerequest","script":{"id":"13688456-4ea1-4ff9-9e1f-3b552ef88837","exec":["var url = pm.environment.get(\"baseURI\") + \"/api/BankAccountReceipts?count=1\";\r","\r","setTimeout(function(){\r","    pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","    }, function (err, res) {\r","    \r","        var jsonData = res.json(); \r","        for (var i=0; i < jsonData.bankReceipts.length; i++)\r","                {\r","                    {\r","                        pm.variables.set(\"id\", jsonData.bankReceipts[i].id);\r","                        console.log(\"id\",+ jsonData.bankReceipts[i].id);\r","                        break;\r","                    }\r","        }\r","    });      \r","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"75df4326-eb49-4e26-a154-96f1363560a1","exec":["\r","\r","pm.test(\"Status code is 200 \", function () {\r","    pm.response.to.have.status(200);\r","});\r","if(pm.response.status.code==200)\r","{\r"," pm.test(\"To check note-attachments is successful! : \", function () {\r","        pm.response.to.have.status(201);\r","\r","pm.sendRequest({\r","    url: pm.variables.get(\"baseURI\") + '/api/BankAccountReceipts/'+ pm.variables.get(\"id\")+'/note-attachments',\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")\r","    }\r","\r","}, function (err, res) {\r","    var responseJson = res.json();\r","    var list = (responseJson).length;\r","    console.log(list);\r","   for (var i = 0; i < list; i++) \r","    {\r","    var counter = responseJson[i];\r","    note=counter.note\r","    type=counter.type\r","    }\r","    pm.variables.set(\"note\", note);\r","    pm.variables.set(\"type\", type);\r","    console.log(type);\r","    console.log(note);\r","});\r","});\r","}\r","\r",""],"type":"text/javascript"}}],"_postman_id":"4f15096e-8e88-4dd7-b6bf-f3e13aa87206","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[],"body":{"mode":"formdata","formdata":[{"key":"note","value":"API_Test_note","type":"text"}],"options":{"formdata":{}}},"url":{"raw":"{{baseURI}}/api/BankAccountReceipts/{{id}}/note-attachments","host":["{{baseURI}}"],"path":["api","BankAccountReceipts","{{id}}","note-attachments"]}},"response":[]}],"_postman_id":"ae798a5c-9ce7-4268-b04b-f42b6a94f93a","_postman_isSubFolder":true}],"_postman_id":"00666eda-ebbc-430b-8d32-096b4f5c2c7c","description":"Contains PUT APIs for testing","event":[{"listen":"prerequest","script":{"id":"4f691e4e-4698-48fa-b315-657af9d673da","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"d87f440f-eb7e-44c2-841a-4e58ce552a10","type":"text/javascript","exec":[""]}}]},{"name":"POST","item":[{"name":"Values","item":[{"name":"Post Values","event":[{"listen":"test","script":{"id":"78db4b7a-f872-4343-a702-e3ac5f8c7c82","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","pm.test(\"Successfully posted value!\", function () {","    ","});",""],"type":"text/javascript"}}],"_postman_id":"733ddc68-f2e9-468c-bee8-7bf239815126","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\"Test\"\n\t\n","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Values","host":["{{baseURI}}"],"path":["api","Values"]}},"response":[]}],"_postman_id":"f538cfaf-c9c7-4ae4-8dab-6fe2cc3b1174","_postman_isSubFolder":true},{"name":"POST/TransferFile","item":[{"name":"Post TransferFile/Download","event":[{"listen":"test","script":{"id":"2c61b3be-b57d-454a-823c-00c7f497f3e7","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"45b04c30-6a26-4397-9387-2442d9dcc734","exec":["var accessToken = pm.variables.get(\"accessToken\");","var baseURI = pm.environment.get(\"baseURI\");","url = baseURI.concat(\"/api/TransferFile/\");","var transferFileName = \"\";","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\") //accessToken_LiquidxUser1","    },","","}, function (err, res) {","    if (err) { console.log(err); }","","    var jsonData = res.json();","","    for (var i = 0; i < jsonData.length; i++) {","        if (jsonData[i].state == \"created\") {","            pm.variables.set(\"transferFileName\", jsonData[i].csvFileName);","            console.log(\"transferFileName:\" + transferFileName);","            break;","        }","    }","    console.log(transferFileName);","});"],"type":"text/javascript"}}],"_postman_id":"6b876bef-1ffc-45fc-bbc3-94d24f8f0371","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\n\t\"{{transferFileName}}\"\n]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/TransferFile/download","host":["{{baseURI}}"],"path":["api","TransferFile","download"]}},"response":[]}],"_postman_id":"6d58c3a6-ab0b-43fa-aa8e-6da22e7d4b1e","_postman_isSubFolder":true}],"_postman_id":"9e11b605-3d20-499f-839b-aa2c8aa0001d","description":"Contains POST APIs for testing"},{"name":"DELETE","item":[{"name":"Values","item":[{"name":"Delete Values","event":[{"listen":"prerequest","script":{"id":"6dd7be02-06a3-4b97-af38-d42cb72a7cc6","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"9ed79702-4601-4ff6-816e-74b15b303a21","exec":["pm.test(\"Verifying response code \", function(){","        pm.expect(pm.response.code).to.equal(200);","    });","postman.setNextRequest(null);"],"type":"text/javascript"}}],"_postman_id":"88ea5fb7-1e5a-49ea-a1f2-8b794ef4de94","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseURI}}/api/Values/9","host":["{{baseURI}}"],"path":["api","Values","9"]}},"response":[]}],"_postman_id":"9ee91e3b-3b2e-478c-9c57-553ccc1de113","_postman_isSubFolder":true}],"_postman_id":"9c6d417f-2f3c-45a3-90a4-17643b992e8d","description":"Contains DELETE APIs for testing"},{"name":"PATCH","item":[{"name":"PATCH   /api/Payments/{id}","event":[{"listen":"prerequest","script":{"id":"90234913-6e8a-4bed-b6da-0ef8abaa2a9c","exec":["pm.sendRequest({\r","    url: pm.variables.get(\"baseURI\") + '/api/Payments?count=10',\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","}, function (err, res) {\r","    var responseJson = res.json();\r","    var list = (responseJson.payments).length;\r","    console.log(list);\r","   for (var i = 0; i < list; i++) \r","    {\r","    var counter = responseJson.payments[i];\r","    ID=counter.id\r","    fundSourceTypeId=counter.fundSourceTypeId\r","    }\r","    pm.environment.set(\"ID\", ID);\r","    pm.environment.set(\"fundSourceTypeId\", fundSourceTypeId);\r","    console.log(fundSourceTypeId);\r","    console.log(ID);\r","});\r","\r",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"229a6c31-5606-4f42-ac7b-c637b15f62fa","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript"}}],"_postman_id":"3ed71851-ae27-4537-ab00-3ca97e31c7b0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PATCH","header":[],"url":{"raw":"{{baseURI}}/api/Payments/{{ID}}?fundSourceTypeId={{fundSourceTypeId}}","host":["{{baseURI}}"],"path":["api","Payments","{{ID}}"],"query":[{"key":"fundSourceTypeId","value":"{{fundSourceTypeId}}"}]}},"response":[]}],"_postman_id":"4eb26e0b-9a4b-4b36-a428-835356b4b773"},{"name":"SCF-PTS-E2E","item":[{"name":"Directfunding Flow","item":[{"name":"Funded: Outstanding - Payment Received - Completed","item":[{"name":"GetAvailableInvoicesForFacility","event":[{"listen":"test","script":{"id":"b5510f56-566b-4df6-808d-20f33d9d8453","exec":["pm.test(\"Get all Transferred invoices \", function () {","    var  invoiceId=[];invoicesObj=[];invoiceId;","    var iter = 0; minInvoiceCnt=1; cnt=0; supplierId=1;","    ","    var jsonData = pm.response.json();  ","    console.log(\"Total Invoices :  \"+ jsonData.length);","    ","    if (jsonData.length >=  minInvoiceCnt )","        iter = minInvoiceCnt;","    else","        iter = jsonData.length;","    ","    if(jsonData.length > 0){","        for (var i = jsonData.length-1; i >= 0; i--){ ","             if(jsonData[i].stateId==1 ){","                 invoicesObj.push(jsonData[i].id);","                 invoiceId = jsonData[i].id;","                 supplierId= jsonData[i].supplierId;","                 cnt++;","             } ","             if (cnt >= iter)","             break;","        }","        pm.variables.set(\"invoiceId\", invoiceId);","        pm.variables.set(\"supplierId\", supplierId );","        console.log(\"Supplier Id: \"+ supplierId);","        console.log(\"invoiceId : \"+ invoiceId);","     ","    } else {","        console.log(\"Zero invoices are in Transferred state. Next flow will not continue\");","        postman.setNextRequest(null);","        pm.expect(jsonData.length).to.be.above(0);  ","    } ","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"f4a94af4-4848-4e05-800f-4b8fc5696ab7","exec":[""],"type":"text/javascript"}}],"_postman_id":"8b1de839-a655-46d5-9deb-ed9558df168a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_SC}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{SCBaseURI}}/api/Invoices/{{facilityId}}/available?afee={{afee}}&disc={{disc}}&sdid={{sdid}}&count=5000","host":["{{SCBaseURI}}"],"path":["api","Invoices","{{facilityId}}","available"],"query":[{"key":"afee","value":"{{afee}}"},{"key":"disc","value":"{{disc}}"},{"key":"sdid","value":"{{sdid}}"},{"key":"count","value":"5000"}]}},"response":[]},{"name":"CommandBySubfacilityId/include","event":[{"listen":"test","script":{"id":"37719b7b-238b-4aaa-9f3b-67e597825219","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","    ","    if (pm.response.code == 200 ){","    ","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url=  baseURI +'/api/assets/'+ assetId;","        ","        var invoiceId = pm.variables.get(\"invoiceId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","        ","        //SCF-Admin Invoice","        url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","        helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 7,'Available', 'SCF Admin');","        ","        //SCF-Investor Invoice","        helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 7,'', 'Investor');","    ","    }","}); ","",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"8c109ad7-59d1-4dd0-bb8f-5e432f2c5e4b","exec":["const helper = eval(pm.globals.get(\"PTShelper\"));","","var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","var baseURI = pm.environment.get(\"baseURI\");","helper.getAssetID(baseURI, accessToken);"],"type":"text/javascript"}}],"_postman_id":"0251fa81-ae6f-4960-864d-f481ca82c761","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{SCBaseURI}}/api/Invoices/{{invoiceId}}/subfacilities/{{subfacilityid}}?command=include","host":["{{SCBaseURI}}"],"path":["api","Invoices","{{invoiceId}}","subfacilities","{{subfacilityid}}"],"query":[{"key":"command","value":"include"}]},"description":"Include invoice in Subfacility"},"response":[]},{"name":"CommandBySupplierId/accept","event":[{"listen":"test","script":{"id":"96bd7322-8b72-4a72-80a2-e62172287489","exec":[" pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","    ","    if (pm.response.code == 200) {","","         var accessToken = pm.variables.get(\"accessToken_SC\");","         var baseURI = pm.environment.get(\"SCBaseURI\");","         var invoiceId = pm.variables.get(\"invoiceId\");","    ","         pm.sendRequest({","             url: baseURI + '/api/Invoices/' + invoiceId,","             method: 'GET',","             header: {","                 'Accept': 'application/json',","                 'Content-Type': 'application/json',","                 'Authorization': 'bearer ' + accessToken","             },","    ","         }, function(err, res) {","             console.log(\"Result:\" + res.json());","             if (err) {","                 console.log(err);","             }","             var jsonData = res.json();","             pm.test(\"Get transactionID for Invoice '\" + jsonData[0].id + \"'\", function() {","                 console.log(\"State : \" + jsonData[0].transactionId);","                 pm.variables.set(\"transactionId\",jsonData[0].transactionId );","             });","         });","    }","    ","    if (pm.response.code == 200 ){","        setTimeout(function(){}, pm.environment.get(\"delay\"));   ","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url=  baseURI +'/api/assets/'+ assetId;","        ","        var invoiceId = pm.variables.get(\"invoiceId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","        ","        //SCF-Admin Invoice","        url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","        helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 3,'Accepted');","        ","        //SCF-Investor Invoice","        helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 3,'Accepted', \"Investor\");","    }","});","  ",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"56c567c7-ce6a-438e-8e1f-25ef3dda48f4","exec":[""],"type":"text/javascript"}}],"_postman_id":"8bdf984e-a275-4ad1-81c5-f3db6709be4e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenSupplier_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{SCBaseURI}}/api/Invoices/{{invoiceId}}/suppliers/{{supplierId}}?command=accept","host":["{{SCBaseURI}}"],"path":["api","Invoices","{{invoiceId}}","suppliers","{{supplierId}}"],"query":[{"key":"command","value":"accept"}]},"description":"Supplier accepts invoices in Available State"},"response":[]},{"name":"CommandOnTransactions/requestfunding","event":[{"listen":"test","script":{"id":"041a8565-9e53-4720-9203-07da3b3285cc","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","    ","    if (pm.response.code == 200 ){","        ","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url=  baseURI +'/api/assets/'+ assetId;","        ","        var invoiceId = pm.variables.get(\"invoiceId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","      ","        //SCF-Admin Invoice","        url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","        helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 6,'Funding Requested', 'SCF Admin');","        ","        //SCF-Investor Invoice","        helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 6,'Funding Requested', 'Investor');","    }","});"," ",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"11cdaf6c-ba9f-4e2d-94e2-2413e9c66023","exec":[""],"type":"text/javascript"}}],"_postman_id":"81748ac9-d74c-48a0-bed8-379bedae3ac6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{SCBaseURI}}/api/Transactions/{{transactionId}}?command=requestfunding","host":["{{SCBaseURI}}"],"path":["api","Transactions","{{transactionId}}"],"query":[{"key":"command","value":"requestfunding"}]},"description":"SCF Admin requests funding"},"response":[]},{"name":"CommandByInvestorId/accept","event":[{"listen":"test","script":{"id":"eeb782fe-31fb-40ff-839b-8bd1f439ea4e","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    setTimeout(function(){","        ","        if (pm.response.code == 200 ){","    ","            var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","            var baseURI = pm.environment.get(\"baseURI\");","            var assetId = pm.variables.get(\"assetId\");","            var url=  baseURI +'/api/assets/'+ assetId;","            ","            var invoiceId = pm.variables.get(\"invoiceId\");","            const helper = eval(pm.globals.get(\"PTShelper\"));","            ","            //PTS-Asset Verification","            var state = [\"Confirmed\", \"Pending Settlement\"];","            var stateID = [2, 5];","            ","            //SCF-Admin Invoice","            url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","            helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', stateID, state, 'SCF Admin');","            ","            //SCF-Investor Invoice","            helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', stateID, state, 'Investor');","        }","    }, pm.variables.get(\"stateChangeDelay\"));","    ","});"," ",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"10b8c468-1aa0-40da-8897-a259224a1b9e","exec":[""],"type":"text/javascript"}}],"_postman_id":"6d7d8de8-eae6-42b7-8d48-a62136018bb0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenInvestor_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"url":{"raw":"{{SCBaseURI}}/api/Transactions/{{transactionId}}/investors/{{investorId}}?command=accept","host":["{{SCBaseURI}}"],"path":["api","Transactions","{{transactionId}}","investors","{{investorId}}"],"query":[{"key":"command","value":"accept"}]},"description":"Investor accepts the Transaction"},"response":[]},{"name":"Pending Settlement -> funds received","event":[{"listen":"prerequest","script":{"id":"a499a488-a74e-44c1-bc89-cf43b48b04a1","exec":["var moment = require('moment');\r","    var local = moment();\r","    console.log(\"localTime\", local);\r","    pm.environment.set(\"localTime\", local);"],"type":"text/javascript"}},{"listen":"test","script":{"id":"5474c4c2-0ba7-4e40-acee-f4eb595c0f0b","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","","    setTimeout(function(){","        ","        if (pm.response.code == 204 ){","    ","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url=  baseURI +'/api/assets/'+ assetId;","        ","        var invoiceId = pm.variables.get(\"invoiceId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","        ","        //PTS-Asset Verification","        helper.verifyState('GET', url, accessToken, 'Asset',20,'FundsReceived');","        ","        //SCF-Admin Invoice","        url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","        helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice',20,'FundsReceived', 'SCF Admin');","        ","        //SCF-Investor Invoice","        helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice',20,'Processing', 'Investor');","        ","        }","    }, pm.variables.get(\"stateChangeDelay\"));","    ","});"],"type":"text/javascript"}}],"_postman_id":"7261d390-1435-45eb-b460-a146a1a6e482","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[{\r\n\t \"id\": {{assetId}},\r\n\t \"OutstandingAmount\" : {{outstandingAmount}},\r\n\t \"productCode\": \"SCF\",\r\n\t \"amountAppliedDelta\": 0,\r\n     \"directFundingAsOfDate\": \"{{localTime}}\"\r\n\t\r\n}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/assets/directfund?command=fundsreceived","host":["{{baseURI}}"],"path":["api","assets","directfund"],"query":[{"key":"command","value":"fundsreceived"}]}},"response":[]},{"name":"funds received -> outstanding","event":[{"listen":"prerequest","script":{"id":"0cc8fa0d-3429-463e-83c6-eecca45f0d13","exec":["var moment = require('moment');\r","    var local = moment();\r","    console.log(\"localTime\", local);\r","    pm.environment.set(\"localTime\", local);"],"type":"text/javascript"}},{"listen":"test","script":{"id":"ab7b80d8-f6dd-4c40-8a2d-fffd4a887023","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","    ","    setTimeout(function(){","        ","        if (pm.response.code == 204 ){","    ","            var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","            var baseURI = pm.environment.get(\"baseURI\");","            var assetId = pm.variables.get(\"assetId\");","            var url=  baseURI +'/api/assets/'+ assetId;","            ","            var invoiceId = pm.variables.get(\"invoiceId\");","            const helper = eval(pm.globals.get(\"PTShelper\"));","            ","            //PTS-Asset Verification","            helper.verifyState('GET', url, accessToken, 'Asset', 15,'Outstanding');","            ","            //SCF-Admin Invoice","            url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","            helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice',15,'Outstanding', 'SCF Admin');","            ","            //SCF-Investor Invoice","            helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 15,'Outstanding', 'Investor');","        }","    }, pm.variables.get(\"stateChangeDelay\"));","  ","});"," ",""],"type":"text/javascript"}}],"_postman_id":"05900bcf-4a9f-4ba4-a955-c9633467bf43","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{\r\n\t \"id\": {{assetId}},\r\n\t \"OutstandingAmount\" : {{outstandingAmount}},\r\n\t \"productCode\": \"SCF\",\r\n\t \"amountAppliedDelta\": 0,\r\n     \"directFundingAsOfDate\": \"{{localTime}}\"\r\n\t\r\n}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/assets/directfund?command=outstanding","host":["{{baseURI}}"],"path":["api","assets","directfund"],"query":[{"key":"command","value":"outstanding"}]}},"response":[]},{"name":"Outstanding -> paymentReceived","event":[{"listen":"prerequest","script":{"id":"4ca22c35-1e3c-4cb2-aa1b-460efc30fa07","exec":["var moment = require('moment');\r","    var local = moment();\r","    console.log(\"localTime\", local);\r","    pm.environment.set(\"localTime\", local);"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b58c823d-df62-4ea9-b90e-2365691bc697","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","","    setTimeout(function(){","        ","        if (pm.response.code == 204 ){","    ","            var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","            var baseURI = pm.environment.get(\"baseURI\");","            var assetId = pm.variables.get(\"assetId\");","            var url=  baseURI +'/api/assets/'+ assetId;","            ","            var invoiceId = pm.variables.get(\"invoiceId\");","            const helper = eval(pm.globals.get(\"PTShelper\"));","            ","            //PTS-Asset Verification","            helper.verifyState('GET', url, accessToken, 'Asset', 12,'ReceivedPayment' );","            ","            //SCF-Admin Invoice","            url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","            helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 12,'Payment Received', 'SCF Admin');","            ","            //SCF-Investor Invoice","            helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 12,'Outstanding', 'Investor');","            ","        }","    }, pm.variables.get(\"stateChangeDelay\"));","});"],"type":"text/javascript"}}],"_postman_id":"8deef0a8-d0af-432a-ace0-d090dc704c61","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{\r\n\t \"id\": {{assetId}},\r\n\t \"OutstandingAmount\" : {{outstandingAmount}},\r\n\t \"productCode\": \"SCF\",\r\n\t \"amountAppliedDelta\": 0,\r\n     \"directFundingAsOfDate\": \"{{localTime}}\"\r\n\t\r\n}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/assets/directfund?command=paymentreceived","host":["{{baseURI}}"],"path":["api","assets","directfund"],"query":[{"key":"command","value":"paymentreceived"}]}},"response":[]},{"name":"Payment Received -> Completed","event":[{"listen":"prerequest","script":{"id":"773651f1-087c-4452-9873-04030fd69cf8","exec":["var moment = require('moment');\r","    var local = moment();\r","    console.log(\"localTime\", local);\r","    pm.environment.set(\"localTime\", local);"],"type":"text/javascript"}},{"listen":"test","script":{"id":"9e56cbfa-5c3e-44c1-8ded-14ee31c12155","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","","    setTimeout(function(){","        if (pm.response.code == 204 ){","    ","            var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","            var baseURI = pm.environment.get(\"baseURI\");","            var assetId = pm.variables.get(\"assetId\");","            var url=  baseURI +'/api/assets/'+ assetId;","            ","            var invoiceId = pm.variables.get(\"invoiceId\");","            const helper = eval(pm.globals.get(\"PTShelper\"));","            ","            //PTS-Asset Verification","            helper.verifyState('GET', url, accessToken, 'Asset', 16, 'Completed');","            ","            //SCF-Admin Invoice","            url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","            helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 16,'Completed', 'SCF Admin');","            ","            //SCF-Investor Invoice","            helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 16,'Completed', 'Investor');","        }","    }, pm.variables.get(\"stateChangeDelay\"));","    ","});"],"type":"text/javascript"}}],"_postman_id":"944310b1-ce99-47f5-a7de-f11ef7457f6d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[{\r\n\t \"id\": {{assetId}},\r\n\t \"OutstandingAmount\" : {{outstandingAmount}},\r\n\t \"productCode\": \"SCF\",\r\n\t \"amountAppliedDelta\": 0,\r\n     \"directFundingAsOfDate\": \"{{localTime}}\"\r\n\t\r\n}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/assets/directfund?command=completed","host":["{{baseURI}}"],"path":["api","assets","directfund"],"query":[{"key":"command","value":"completed"}]}},"response":[]}],"_postman_id":"e2a533ac-6240-452b-b455-8a6ce9742ff1","_postman_isSubFolder":true}],"_postman_id":"acd00fec-2e2b-4b81-bdcf-2b91d56ee12d","_postman_isSubFolder":true},{"name":"Payment Flow","item":[{"name":"Payment Flow - Complete (PTS-872 -TS_1 - TS_2 - TS_7 and TS_8)","item":[{"name":"GetAvailableInvoicesForFacility","event":[{"listen":"test","script":{"id":"a454f467-ec8d-4bcb-80cd-1d66f2f31835","exec":["var jsonData = pm.response.json();  ","","pm.test(\"Get all Transferred invoices: \"+jsonData.length, function () {","    var  invoiceId=[];invoicesObj=[];//invoiceId;","    var iter = 0; minInvoiceCnt=1; cnt=0; supplierId=1;","    ","    console.log(\"Total Invoices :  \"+ jsonData.length);","    ","    if (jsonData.length >=  minInvoiceCnt )","        iter = minInvoiceCnt;","    else","        iter = jsonData.length;","    ","    if(jsonData.length > 0){","        for (var i = jsonData.length-1; i >= 0; i--){ ","             if(jsonData[i].stateId==1  && jsonData[i].tenor >1){","                 if(pm.variables.get(\"invoicePrefix\") == '')","                 {","                     invoicesObj.push(jsonData[i].id);","                     invoiceId = jsonData[i].id;","                     supplierId= jsonData[i].supplierId;","                    //  console.log(\"invoiceId : \"+ jsonData[i].number);","                     cnt++;","                 } ","                 else ","                 {","                     if (jsonData[i].number.includes(pm.variables.get(\"invoicePrefix\")))","                     {","                         invoicesObj.push(jsonData[i].id);","                         invoiceId = jsonData[i].id;","                         supplierId= jsonData[i].supplierId;","                        //  console.log(\"invoiceId : \"+ jsonData[i].number);","                         cnt++;","                     }","                 }","             } ","             if (cnt >= iter)","             break;","        }","        pm.variables.set(\"invoiceId\", invoiceId);","        pm.variables.set(\"supplierId\", supplierId );","        console.log(\"Supplier Id: \"+ supplierId);","        console.log(\"invoiceId : \"+ invoiceId);","     ","    } else {","        console.log(\"Zero invoices are in Transferred state. Next flow will not continue\");","        postman.setNextRequest(null);","        pm.expect(jsonData.length).to.be.above(0);  ","    } "," ","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c8999f36-ae0d-4c1f-848d-c81c062e2ad0","exec":[""],"type":"text/javascript"}}],"_postman_id":"c7df7e8d-3b0d-499d-ae8a-bf86342a2515","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_SC}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{SCBaseURI}}/api/Invoices/{{facilityId}}/available?afee={{afee}}&disc={{disc}}&sdid={{sdid}}&count=5000","host":["{{SCBaseURI}}"],"path":["api","Invoices","{{facilityId}}","available"],"query":[{"key":"afee","value":"{{afee}}"},{"key":"disc","value":"{{disc}}"},{"key":"sdid","value":"{{sdid}}"},{"key":"count","value":"5000"}]}},"response":[]},{"name":"CommandBySubfacilityId/include","event":[{"listen":"test","script":{"id":"2b33aec9-4460-448b-80a1-f45d60106e33","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","    var invoiceId = pm.variables.get(\"invoiceId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    //SCF-Admin Invoice","    url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","    helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 7, 'Available', 'SCF Admin');","","    //SCF-Investor Invoice","    helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 7, '', 'Investor');","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"32544643-e8b5-41e2-954c-b4ad618ec2b1","exec":["var baseURI = pm.environment.get(\"baseURI\");","var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","","pm.sendRequest({","        url: baseURI + '/api/assets?said=' + pm.variables.get(\"invoiceId\"),","        method: 'GET',","        header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","        },","}, function (err, res) {","        if (err) { console.log(err); }","        pm.expect(res).to.have.property('code', 200);","        var jsonData = res.json();","        var assetId = jsonData[0].id;","        console.log(\"Asset ID in Assets request: \" + assetId);","        var outstandingAmount = jsonData[0].outstandingAmount;","        pm.variables.set(\"assetId\", assetId);","        pm.variables.set(\"outstandingAmount\", outstandingAmount);","","});"],"type":"text/javascript"}}],"_postman_id":"e360e434-e36e-4f7a-805e-04276c32dfcb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{SCBaseURI}}/api/Invoices/{{invoiceId}}/subfacilities/{{subfacilityid}}?command=include","host":["{{SCBaseURI}}"],"path":["api","Invoices","{{invoiceId}}","subfacilities","{{subfacilityid}}"],"query":[{"key":"command","value":"include"}]},"description":"Include invoice in Subfacility"},"response":[]},{"name":"CommandBySupplierId/accept","event":[{"listen":"test","script":{"id":"0bece903-d218-4f43-9bbf-079c4276472f","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","if (pm.response.code == 200) {","","     var accessToken = pm.variables.get(\"accessToken_SC\");","     var baseURI = pm.environment.get(\"SCBaseURI\");","     var invoiceId = pm.variables.get(\"invoiceId\");","    ","     pm.sendRequest({","         url: baseURI + '/api/Invoices/' + invoiceId,","         method: 'GET',","         header: {","             'Accept': 'application/json',","             'Content-Type': 'application/json',","             'Authorization': 'bearer ' + accessToken","         },","    ","     }, function(err, res) {","        //  console.log(\"Result:\" + res.json());","         if (err) {","             console.log(err);","         }","         var jsonData = res.json();","         console.log(\"Supplier Accepted: \"+jsonData[0]);","         pm.test(\"Get transactionID for Invoice '\" + jsonData[0].id + \"'\", function() {","             console.log(\"transactionId : \" + jsonData[0].transactionId);","             pm.variables.set(\"transactionId\",jsonData[0].transactionId );","         });","    ","         //  postman.setNextRequest('CommandBySupplierId/accept');","     });","}","","if (pm.response.code == 200 ){","    setTimeout(function(){}, pm.environment.get(\"delay\"));   ","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url=  baseURI +'/api/assets/'+ assetId;","    ","    var invoiceId = pm.variables.get(\"invoiceId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","    ","    //SCF-Admin Invoice","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","    helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 3,'Accepted');","    ","    ","    //SCF-Investor Invoice","    helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 3,'Accepted', \"Investor\");","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b7654362-c198-48a5-8bb2-bffd12cf70a7","exec":[""],"type":"text/javascript"}}],"_postman_id":"4d42a7f0-3bb4-4384-a17a-6c2dfce87142","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenSupplier_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"url":{"raw":"{{SCBaseURI}}/api/Invoices/{{invoiceId}}/suppliers/{{supplierId}}?command=accept","host":["{{SCBaseURI}}"],"path":["api","Invoices","{{invoiceId}}","suppliers","{{supplierId}}"],"query":[{"key":"command","value":"accept"}]},"description":"Supplier accepts invoices in Available State"},"response":[]},{"name":"CommandOnTransactions/requestfunding","event":[{"listen":"test","script":{"id":"5b3bd233-0e9d-4c9a-8416-65312d481ee7","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    var accessToken = pm.variables.get(\"accessToken_SC\");","    var baseURI = pm.environment.get(\"SCBaseURI\");","    ","    pm.sendRequest({","        url: baseURI +'/api/Transactions/'+ pm.variables.get(\"transactionId\") ,","        method: 'GET',","         header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer '+ accessToken","          },","    ","    }, function (err, res) {","        console.log(\"Result:\" + res.json());","         if (err) { console.log(err); }","           pm.expect(res).to.have.property('code', 200);","           var jsonData = res.json();","           pm.variables.set(\"investorName\", jsonData[0].investorAllocations[0].investorName);","        ","    }); ","","    var invoiceId = pm.variables.get(\"invoiceId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    //SCF-Admin Invoice","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","    helper.verifyState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', 6,'Funding Requested', 'SCF Admin');","    ","    //SCF-Investor Invoice","    helper.verifyState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', 6,'Funding Requested', 'Investor');","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"db75770d-ee74-4c18-8cb0-18c0c785393a","exec":[""],"type":"text/javascript"}}],"_postman_id":"e2fa076d-06c1-4227-994c-94ad26cc8bc5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{SCBaseURI}}/api/Transactions/{{transactionId}}?command=requestfunding","host":["{{SCBaseURI}}"],"path":["api","Transactions","{{transactionId}}"],"query":[{"key":"command","value":"requestfunding"}]},"description":"SCF Admin requests funding"},"response":[]},{"name":"CommandByInvestorId/accept","event":[{"listen":"test","script":{"id":"c959d98c-b441-4316-a605-8ab94a5385dc","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","setTimeout(function () {","    if (pm.response.code == 200) {","","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        console.log(\"assetId\", +assetId);","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","        pm.sendRequest({","            url: url,","            method: 'GET',","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser3\")","            }","","        }, function (err, res) {","","            var jsonData = res.json();","            console.log(jsonData[0]);","            pm.test(\"To check 'Outstanding' amount with 'transactionAssetInvestors-Outstanding' amount\", function () {","                console.log(\"outstandingAmount: \" + pm.variables.get(\"outstandingAmount\"));","                console.log(\"outstandingAmount2: \" + jsonData[0].transactionAssetInvestors[0].outstandingAmount);","                pm.expect(parseFloat(jsonData[0].transactionAssetInvestors[0].outstandingAmount)).to.eql(parseFloat(pm.variables.get(\"outstandingAmount\")));","            });","        });","","        //PTS-Asset Verification","        var state = [\"Confirmed\", \"Pending Settlement\"];","        var stateID = [2, 5];","","        //SCF-Admin Invoice","        url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'Invoice', stateID, state, 'SCF Admin');","","        //SCF-Investor Invoice","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'Invoice', stateID, state, 'Investor');","    }","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"f622d371-3c35-4afd-b64b-95af730b91d6","exec":[""],"type":"text/javascript"}}],"_postman_id":"7fd6bbd2-881d-4faa-bd7a-54a9b8e23278","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessTokenInvestor_SC}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"url":{"raw":"{{SCBaseURI}}/api/Transactions/{{transactionId}}/investors/{{investorId}}?command=accept","host":["{{SCBaseURI}}"],"path":["api","Transactions","{{transactionId}}","investors","{{investorId}}"],"query":[{"key":"command","value":"accept"}]},"description":"Investor accepts the Transaction"},"response":[]},{"name":"Post BankAccountReceipts (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"9bc1f4a4-1209-467c-aa9c-603896968e8e","exec":["if (pm.response.code == 201 || pm.response.code == 202 & responseBody !== '') {","    var responseJSONdata = JSON.parse(responseBody);","","    pm.test(\"To check Status : \", function () {","        pm.response.to.have.status(201);","","        setTimeout(function () {","            pm.variables.set('receiptId', responseJSONdata[0].id);","            pm.variables.set('paymentId', responseJSONdata[0].paymentId);","","            console.log('Receipt ID: ' + pm.variables.get(\"receiptId\"));","            console.log('Payment ID: ' + pm.variables.get(\"paymentId\"));","","            var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","            var baseURI = pm.environment.get(\"baseURI\");","            var assetId = pm.variables.get(\"assetId\");","            var url = baseURI + '/api/assets/' + assetId;","","            var invoiceId = pm.variables.get(\"invoiceId\");","            var TransactionId = pm.variables.get(\"transactionId\");","            const helper = eval(pm.globals.get(\"PTShelper\"));","","            // Asset Status","            helper.verifyState('GET', url, accessToken, 'Asset', 5, 'PendingSettlement', 'PTS-Admin');","","            //Payment Status","            helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 3, 'Processing', 'PTS-Admin');","","            //PTS-Asset Verification","            var state = [\"Pending Settlement\"];","            var stateID = [5];","","            url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","            helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","            helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","            url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","            helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","","            helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","","        }, pm.variables.get(\"stateChangeDelay\"));","","    });","","    pm.test(\"To check 'Face Value Spread' : \", function () {","","        console.log('faceValueSpread: ' + parseFloat(pm.variables.get(\"faceValueSpread\")));","","        function roundToTwo(num) {","            return +(Math.round(num + \"e+2\") + \"e-2\");","        }","","        var calValue = parseFloat(pm.variables.get(\"supplierDiscountAmount\")) - parseFloat(pm.variables.get(\"investorDiscountAmount\"));","","        calValue = roundToTwo(calValue);","","        console.log('supplierDiscountAmount - investorDiscountAmount : ' + calValue);","","        pm.expect(parseFloat(calValue)).to.equal(parseFloat(pm.variables.get(\"faceValueSpread\")));","    });","","     ","","    ","","        ","}","// else","// {","//     postman.setNextRequest(null);","// }*/"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"0fc88730-fa73-41a6-bf01-ea537a6a862c","exec":["setTimeout(function () {","    function getRandomInt(max) {","        return Math.floor(Math.random() * Math.floor(max));","    }","    var refId = getRandomInt(9999);","    pm.variables.set(\"refId\", refId);","    console.log('refID: ' + pm.variables.get(\"refId\"));","","    var moment = require('moment');","    var local = moment();","    console.log(\"localTime\", local);","    pm.environment.set(\"localTime\", local);","","    var baseURI = pm.environment.get(\"baseURI\");","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","","    var url = baseURI + '/api/assets/' + pm.variables.get(\"assetId\");","","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer ' + accessToken","        }","","    }, function (err, res) {","        var jsonData = res.json();","","        // Post ReceiptAdjustents data \\\\","        // id","        pm.variables.set(\"assetId\", jsonData[0].id);","        pm.variables.set(\"number\", jsonData[0].number);","        // sourceAssetId = invoiceId","        pm.variables.set(\"typeId\", jsonData[0].typeId);","        pm.variables.set(\"type\", jsonData[0].type);","        pm.variables.set(\"productCode\", jsonData[0].productCode);","        // transactionId","","        pm.variables.set(\"payorId\", jsonData[0].transactionAssetInvestors[0].payorId);","        pm.variables.set(\"payor\", jsonData[0].transactionAssetInvestors[0].payor);","        pm.variables.set(\"payeeId\", jsonData[0].payeeId);","        pm.variables.set(\"payee\", jsonData[0].payee);","        pm.variables.set(\"faceValue\", jsonData[0].faceValue);","        // pm.variables.set(\"currencyCode\", jsonData[0].currencyCode);","        pm.variables.set(\"netFaceValue\", jsonData[0].netFaceValue);","        pm.variables.set(\"outstandingAmount\", jsonData[0].outstandingAmount);","        pm.variables.set(\"totalDiscountAmount\", jsonData[0].totalDiscountAmount);","        pm.variables.set(\"issueDate\", jsonData[0].issueDate);","        pm.variables.set(\"paymentDate\", jsonData[0].paymentDate);","        pm.variables.set(\"fundingDate\", jsonData[0].fundingDate);","        pm.variables.set(\"assetStateId\", jsonData[0].stateId);","        pm.variables.set(\"assetState\", jsonData[0].state);","        pm.variables.set(\"settlementStateId\", jsonData[0].settlementStateId);","        pm.variables.set(\"settlementState\", jsonData[0].settlementState);","        pm.variables.set(\"sourceId\", jsonData[0].sourceId);","        pm.variables.set(\"createdBy\", jsonData[0].createdBy);","        pm.variables.set(\"updatedBy\", jsonData[0].updatedBy);","        pm.variables.set(\"createdOn\", jsonData[0].createdOn);","        pm.variables.set(\"updatedOn\", jsonData[0].updatedOn);","        pm.variables.set(\"allcoatedNetProceeds\", jsonData[0].allcoatedNetProceeds);","        pm.variables.set(\"totalFee\", jsonData[0].transactionAssetInvestors[0].totalFee);","        pm.variables.set(\"paymentAmount\", jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding);","","        var currency = jsonData[0].currencyCode;","","        console.log(\"Asset ID in Assets request: \" + pm.variables.get(\"assetId\"));","        console.log('outstandingAmount: ' + pm.variables.get(\"outstandingAmount\"));","        console.log(\"payor: \" + jsonData[0].transactionAssetInvestors[0].payor);","        console.log(\"payorId: \" + jsonData[0].transactionAssetInvestors[0].payorId);","        console.log(\"payee: \" + jsonData[0].payee);","        console.log(\"allocatedNetProceeds: \" + jsonData[0].transactionAssetInvestors[0].allocatedNetProceeds);","        console.log(\"totalFee: \" + jsonData[0].transactionAssetInvestors[0].totalFee);","        console.log(\"paymentAmount: \" + jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding);","","        pm.sendRequest({","            url: baseURI + '/api/bankaccounts',","            method: 'GET',","","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","","        }, function (err, res) {","","            var jsonData = res.json();","            for (var i = 0; i < jsonData.length; i++) {","                if (jsonData[i].currencyCode === currency && jsonData[i].accountType == 'Funding') {","                   pm.variables.set(\"bankAccount\", jsonData[i].alias);","                    pm.variables.set(\"currencyCode\", jsonData[i].currencyCode);","                   console.log(\"bankAccount\", jsonData[i].alias);","                    console.log(\"currencyCode\", jsonData[i].currencyCode);","                   break;","               }","         }",""," pm.sendRequest({","            url: baseURI + '/api/depositholds',","            method: 'GET',","","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","","        }, function (err, res) {","","            var jsonData = res.json();","            for (var i = 0; i < jsonData.length; i++) {","                if (jsonData[i].bankAccount === pm.variables.get(\"bankAccount\") && jsonData[i].transferType == 'Wire') {","                   pm.variables.set(\"depositHoldDays\", jsonData[i].depositHoldDays);","                   console.log(\"depositHoldDays\", jsonData[i].depositHoldDays);","                   var depositHoldDays= pm.variables.get(\"depositHoldDays\");","                   const moment = require('moment');","                   var receiptEntryDate = moment().add('days').format(\"YYYY-MM-DD\");","                   var goodFundDate = moment().add(depositHoldDays ,'days').format(\"YYYY-MM-DD\");","                   console.log(\"receiptEntryDate\", receiptEntryDate);","                   console.log(\"goodFundDate\", goodFundDate);","                   pm.environment.set(\"receiptEntryDate\", receiptEntryDate);","                   pm.environment.set(\"goodFundDate\",goodFundDate);","","               }","            }","            });","","","//console.log(\"receiptEntryDate\", receiptEntryDate);","","","pm.sendRequest({","url: baseURI + '/api/BankAccountReceipts/goodFundsDate?' +\"bankAccountAlias=\"+pm.variables.get(\"bankAccount\")+\"&receiptBankEntryDate=\"+pm.environment.get(\"receiptEntryDate\")+\"&fundType=Wire\" ,","             method: 'GET',","             header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","       , function (err, response) {","           var jsonData = response.json();","          console.log(response.json());","       }","});","            // {{SCBaseURI}}96476","            var url2 = pm.variables.get(\"SCBaseURI\") + '/api/Invoices/' + pm.variables.get(\"invoiceId\");","            pm.sendRequest({","                url: url2,","                method: 'GET',","                header: {","                    'Accept': 'application/json',","                    'Content-Type': 'application/json',","                    'Authorization': 'bearer ' + pm.variables.get(\"accessToken_SC\")","                }","","            }, function (err, res) {","","                var jsonData = res.json();","","                pm.variables.set(\"supplierDiscountAmount\", jsonData[0].supplierDiscountAmount);","                pm.variables.set(\"investorDiscountAmount\", jsonData[0].investorDiscountAmount);","                pm.variables.set(\"faceValueSpread\", jsonData[0].faceValueSpread);","                pm.variables.set(\"investorAdjustedFaceValue\", jsonData[0].investorAdjustedFaceValue);","                pm.variables.set(\"supplierAdjustedFaceValue\", jsonData[0].supplierAdjustedFaceValue);","                console.log(\"supplierDiscountAmount\", jsonData[0].supplierDiscountAmount);","                console.log(\"investorDiscountAmount\", jsonData[0].investorDiscountAmount);","                console.log(\"faceValueSpread\", jsonData[0].faceValueSpread);","                console.log(\"supplierAdjustedFaceValue\", jsonData[0].supplierAdjustedFaceValue);","                console.log(\"investorAdjustedFaceValue\", jsonData[0].investorAdjustedFaceValue);","","","","            });","        });","    });","","","","","}, pm.variables.get(\"stateChangeDelay\"));","// postman.end();"],"type":"text/javascript"}}],"_postman_id":"128cd022-67d0-448e-b04f-0b0630b724bc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[\n\t{\n\t    \"bankAccountAlias\": \"{{bankAccount}}\",\n\t\t\"goodFundDate\": \"{{goodFundDate}}\",\n        \"receiptEntryDate\": \"{{localTime}}\",\n\t    \"bankReferenceId\": \"API_Auto_{{refId}}\",\n\t    \"payor\": \"{{payor}}\",\n\t    \"payee\": \"{{payee}}\",\n\t    \"fundType\": \"Wire\",\n\t    \"paymentAmount\": {{paymentAmount}},\n\t    \"currencyCode\": \"{{currencyCode}}\",\n\t    \"note\": \"\",\n\t    \"productCode\": \"SCF\",\n\t    \"stateId\": 0,\n\t    \"processedDate\": \"{{localTime}}\",\n\t    \"payorId\": {{payorId}}\n\t}\n]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/BankAccountReceipts","host":["{{baseURI}}"],"path":["api","BankAccountReceipts"]}},"response":[]},{"name":"Checkout (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"a41a93d7-3b3b-4f59-a1ca-cc131188f9cb","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","    ","    setTimeout(function(){","        var responseJSONdata = JSON.parse(responseBody); ","        pm.test(\"Verify Asset is Checked-out\", function () {","            var jsonData = pm.response.json();","            pm.expect(jsonData.checkout).to.be.true;","        });","         ","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url=  baseURI +'/api/assets/'+ assetId;","        ","        var invoiceId = pm.variables.get(\"invoiceId\");","        var TransactionId = pm.variables.get(\"transactionId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","        ","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 5,'PendingSettlement', 'PTS-Admin');","        ","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 3,'Processing', 'PTS-Admin');","        ","              //PTS-Asset Verification","              var state = [\"Pending Settlement\"];","              var stateID = [5];","            ","              url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","              helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","            ","              helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","               ","              url=  pm.environment.get(\"SCBaseURI\") +'/api/Transactions/'+ TransactionId ;","              helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","               ","              helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","","    }, pm.variables.get(\"stateChangeDelay\"));","    ","});"],"type":"text/javascript"}}],"_postman_id":"52be6c67-8794-41c3-9478-0e3da4303278","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[],"url":{"raw":"{{baseURI}}/api/Payments/{{receiptId}}?command=checkout","host":["{{baseURI}}"],"path":["api","Payments","{{receiptId}}"],"query":[{"key":"command","value":"checkout"}]}},"response":[]},{"name":"Match (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"311b54c6-156a-47ea-97aa-932735b55dbb","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url = baseURI + '/api/assets/' + assetId;","","    // var invoiceId = pm.variables.get(\"invoiceId\");","    // var url1=  baseURI +'/api/assets/'+ pm.variables.get(\"assetId\");","","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer ' + accessToken","        }","","    }, function (err, res) {","        var jsonData = res.json();","","        // Post ReceiptAdjustents data \\\\","        // id","        // console.log(\"Data: \"+jsonData[0]);","        // console.log(\"Outstaning Amt: \"+jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding);","        // console.log(\"Diff : \"+(parseFloat(pm.variables.get(\"paymentAmount\")) - parseFloat(pm.variables.get(\"faceValueSpread\"))));","        pm.variables.set(\"allocatedNetProceeds\", jsonData[0].transactionAssetInvestors[0].allocatedNetProceeds);","","        function roundToTwo(num) {","            return +(Math.round(num + \"e+2\") + \"e-2\");","        }","","        var calValue = parseFloat(pm.variables.get(\"paymentAmount\")) - parseFloat(pm.variables.get(\"faceValueSpread\"));","","        calValue = roundToTwo(calValue);","","        console.log(\"Diff : \" + calValue);","","        pm.test(\"To check allocatedNetProceeds amount: \", function () {","            pm.expect(parseFloat(calValue)).to.equal(parseFloat(pm.variables.get(\"allocatedNetProceeds\")));","        });","    });","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 5, 'PendingSettlement', 'PTS-Admin');","","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 4, 'Matched', 'PTS-Admin');","","    //PTS-Asset Verification","    var state = [\"Pending Settlement\"];","    var stateID = [5];","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","    helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","","    helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","","}); "],"type":"text/javascript"}}],"_postman_id":"515280ca-2a4a-4baa-980a-754f4f610c70","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"assetDetails\": [\n        {\n            \"assetId\": {{assetId}},\n            \"paymentAmount\":{{paymentAmount}},\n            \"note\": \"Test\",\n            \"isFee\": false\n        }\n    ],\n    \"shouldReturnOverpayment\": false,\n    \"productCode\":\"SCF\",\n    \"fundSourceTypeId\":1,\n    \"fundSourceType\":\"Funding\"\n\n\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/payments/{{paymentId}}","host":["{{baseURI}}"],"path":["api","payments","{{paymentId}}"]}},"response":[]},{"name":"Get Asset/matched (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"e4a87a0b-53c9-4784-b09f-9afb3c75228d","exec":["var responseJSONdata =pm.response.json(); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \", function(){","        pm.expect(responseJSONdata[0].state).to.equal(\"PendingSettlement\");","        pm.expect(responseJSONdata[0].transactionAssetInvestors[0].payorId).to.equal(pm.variables.get(\"payorId\"));","        pm.expect(responseJSONdata[0].transactionAssetInvestors[0].payor).to.equal(pm.variables.get(\"payor\"));","        pm.expect(responseJSONdata[0].payee).to.equal(pm.variables.get(\"payee\"));","        pm.expect(responseJSONdata[0].transactionAssetInvestors[0].purchasePriceOutstanding).to.equal(pm.variables.get(\"paymentAmount\"));","        ","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"52d740b4-9a89-4ac7-86ae-64d9888093a6","exec":[""],"type":"text/javascript"}}],"_postman_id":"eb97258f-61da-4e9d-bab3-71e592f90b60","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Assets/matched/{{receiptId}}","host":["{{baseURI}}"],"path":["api","Assets","matched","{{receiptId}}"]},"description":"/api/Assets/matched/{bankReceiptId}"},"response":[]},{"name":"Checkin (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"4f29a94c-2df2-4c1f-81a8-710dbb25f442","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","    ","    var responseJSONdata = JSON.parse(responseBody); ","    pm.test(\"Verify Asset is Checked-in\", function () {","        var jsonData = pm.response.json();","        pm.expect(jsonData.checkout).to.be.false;","    });","    ","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url=  baseURI +'/api/assets/'+ assetId;","    ","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","    ","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 5,'PendingSettlement', 'PTS-Admin');","    ","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 4,'Matched', 'PTS-Admin');","    ","    ","        //PTS-Asset Verification","        var state = [\"Pending Settlement\"];","        var stateID = [5];","            ","        url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","            ","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","               ","        url=  pm.environment.get(\"SCBaseURI\") +'/api/Transactions/'+ TransactionId ;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","               ","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","    }); "],"type":"text/javascript"}}],"_postman_id":"471ce0ea-2581-444d-872b-1d67add49bc0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[],"url":{"raw":"{{baseURI}}/api/Payments/{{receiptId}}?command=checkin","host":["{{baseURI}}"],"path":["api","Payments","{{receiptId}}"],"query":[{"key":"command","value":"checkin"}]}},"response":[]},{"name":"Asset Search by transaction (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"e356871a-2e86-47b9-b1b1-e561f7f672b4","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","   ","  /* var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var receiptId = pm.variables.get(\"receiptId\");","    var url = baseURI + '/api/payments/' + receiptId;","","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer ' + accessToken","        }","","    }, function (err, res) {","        var jsonData = res.json();","       // for (var i = 0; i < jsonData.payments.length; i++)","       { ","            for( var j= 0 ;j< jsonData.payments[i].paymenttotals.length; j++)","","       {","        pm.variables.set(\"paymentAmount\", jsonData[0].payments[0].paymentAmount);","        pm.variables.set(\"matchedAmount\", jsonData[0].matchedAmount);","        pm.variables.set(\"remainingAmount\", jsonData[0].payments[0].remainingAmount);","        pm.variables.set(\"OPAY\", jsonData[0].payments[0].isOverpaymentProcessed);","        console.log(\"paymentAmount : \" + pm.variables.get(\"paymentAmount\"));","        console.log(\"matchedAmount : \" + pm.variables.get(\"matchedAmount\"));","        console.log(\"remainingAmount : \" + pm.variables.get(\"remainingAmount\"));","        console.log(\"OPAY : \" + pm.variables.get(\"OPAY\"));","       }","      // }","    });*/","","    ","    setTimeout(function(){","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url=  baseURI +'/api/assets/'+ assetId;","        ","        var invoiceId = pm.variables.get(\"invoiceId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","        ","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 5,'PendingSettlement', 'PTS-Admin');","        ","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 4,'Matched', 'PTS-Admin');","    }, pm.variables.get(\"stateChangeDelay\"));","    ","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"543c4063-c44a-491e-9675-f55b2d054ede","exec":["console.log(\"transactionId: \"+pm.variables.get(\"transactionId\"));"],"type":"text/javascript"}}],"_postman_id":"3fc95ea0-6cd2-44ee-a10b-4704d23e8395","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"number\": null,\n    \"issueDateOperator\": null,\n    \"issueDate\": null,\n    \"anticipatedPaymentDateOperator\": null,\n    \"anticipatedPaymentDate\": null,\n    \"fundingDateOperator\": null,\n    \"fundingDate\": null,\n    \"transactionClosingOperator\": null,\n    \"transactionClosingDate\": null,\n    \"buyer\": null,\n    \"supplier\": null,\n    \"funder\": null,\n    \"currencyCode\": null,\n    \"stateNames\": null,\n    \"productCode\": \"SCF\",\n     \"sourceTransactionId\": {{transactionId}}\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/AssetSearch?count=100&skip=0","host":["{{baseURI}}"],"path":["api","AssetSearch"],"query":[{"key":"count","value":"100"},{"key":"skip","value":"0"}]}},"response":[]},{"name":"Payment Process (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"490acdcb-bd2f-454b-9ce8-e6f9153843c0","exec":["// if(pm.response.code !== 200)","// {","//     postman.setNextRequest(null);","// }","// else","// {","pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url = baseURI + '/api/assets/' + assetId;","","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer ' + accessToken","        }","","    }, function (err, res) {","        var jsonData = res.json();","","        pm.variables.set(\"outstandingPurchasePrice\", jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding);","","        // function roundToTwo(num) {    ","        //     return +(Math.round(num + \"e+2\")  + \"e-2\");","        // }","","        // var calValue = parseFloat(pm.variables.get(\"paymentAmount\")) - parseFloat(pm.variables.get(\"faceValueSpread\"));","","        // calValue = roundToTwo(calValue);","","        console.log(\"outstandingPurchasePrice : \" + pm.variables.get(\"outstandingPurchasePrice\"));","","        pm.test(\"To check outstandingPurchasePrice amount: \", function () {","            pm.expect(parseFloat(pm.variables.get(\"outstandingPurchasePrice\"))).to.equal(0.0);","        });","    });","","    setTimeout(function () {","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        var TransactionId = pm.variables.get(\"transactionId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 5, 'PendingSettlement', 'PTS-Admin');","","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 6, 'Processed', 'PTS-Admin');","","        //PTS-Asset Verification","        var state = [\"Pending Settlement\"];","        var stateID = [5];","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","","    }, pm.variables.get(\"stateChangeDelay\"));","});","    // postman.setNextRequest(null);","// }    "],"type":"text/javascript"}}],"_postman_id":"e76e2277-2ba8-4782-a58a-228c4f002025","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments/process","host":["{{baseURI}}"],"path":["api","Payments","process"]}},"response":[]},{"name":"Asset Search by transaction to verify amounts (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"810a2504-af8d-49c2-9e7d-8b977491d8fa","exec":["pm.test(\"To check Status code is 200\", function () {","  pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();","///////////////////////////////////////////////////////////////////////////////////////","pm.variables.set(\"totalCashAmountApplied\", jsonData.assets[0].totalCashAppliedAmount);","","console.log(\"totalCashAmountApplied : \" + pm.variables.get(\"totalCashAmountApplied\"));","","pm.test(\"To check totalCashAmountApplied amount: \", function () {","  //  pm.expect(parseFloat(pm.variables.get(\"totalCashAmountApplied\"))).to.equal(0.0);","});","","//////////////////////////////////////////////////////////////////////////////////////","","pm.variables.set(\"totalNonCashAmountApplied\", jsonData.assets[0].totalNonCashAppliedAmount);","","console.log(\"totalNonCashAmountApplied : \" + pm.variables.get(\"totalNonCashAmountApplied\"));","","pm.test(\"To check totalNonCashAmountApplied amount: \", function () {","  pm.expect(parseFloat(pm.variables.get(\"totalNonCashAmountApplied\"))).to.equal(0.0);","});","","//////////////////////////////////////////////////////////////////////////////////////","","//pm.variables.set(\"outstandingPurchasePrice\", jsonData.assets[0].purchasePriceOutstanding);","pm.variables.set(\"outstandingPurchasePrice\", jsonData.totals[0].totalPurchasePriceOutstanding);","","console.log(\"outstandingPurchasePrice : \" + pm.variables.get(\"outstandingPurchasePrice\"));","","","var assert = require('assert');","","","pm.test(\"To check outstandingPurchasePrice amount: \", function () {","  assert(parseFloat(pm.variables.get(\"outstandingPurchasePrice\")) >= 0.0); //  pm.expect(parseFloat(pm.variables.get(\"outstandingPurchasePrice\"))).to.equal(0.0);","});","","pm.test(\"To check totalCashAmountApplied amount: \", function () {","  assert(parseFloat(pm.variables.get(\"totalCashAmountApplied\")) >= 0.0);","});","","pm.test(\"To check totalNonCashAmountApplied amount: \", function () {","  assert(parseFloat(pm.variables.get(\"totalNonCashAmountApplied\")) >= 0.0);","});","","pm.test(\"To check faceValue is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].faceValue) >= 0.0);","});","","pm.test(\"To check netFaceValue is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].netFaceValue) >= 0.0);//pm.expect(parseFloat(jsonData.totals[0].netFaceValue)).to.be.above(0.0);","});","pm.test(\"To check outstandingAmount is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].outstandingAmount) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].outstandingAmount)).to.be.above(0.0);","});","//pm.test(\"To check totalCashAmountApplied is not negative amount: \", function () {","  //assert(parseFloat(jsonData.totals[0].totalCashAmountApplied) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].totalCashAmountApplied)).to.be.above(0.0);","//});","//pm.test(\"To check totalNonCashAmountApplied is not negative amount: \", function () {","  //assert(parseFloat(jsonData.totals[0].totalNonCashAmountApplied) >= 0.0);///pm.expect(parseFloat(jsonData.totals[0].totalNonCashAmountApplied)).to.be.above(0.0);","//});","pm.test(\"To check totalFundingBalance is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].totalFundingBalance) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].totalFundingBalance)).to.be.above(0.0);","});","pm.test(\"To check totalPurchasePriceOutstanding is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].totalPurchasePriceOutstanding) >= 0.0); // pm.expect(parseFloat(jsonData.totals[0].totalPurchasePriceOutstanding)).to.be.above(0.0);","});","pm.test(\"To check totalAdvanceRateAmount is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].totalAdvanceRateAmount) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].totalAdvanceRateAmount)).to.be.above(0.0);","});","// setTimeout(function(){}, 300000);"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b6459bca-1b05-462b-8ce8-c256a1d50347","exec":["console.log(\"transactionId: \"+pm.variables.get(\"transactionId\"));"],"type":"text/javascript"}}],"_postman_id":"ca8842cb-f5f9-41ec-a95b-846a8b7f1c40","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"number\": null,\n    \"issueDateOperator\": null,\n    \"issueDate\": null,\n    \"anticipatedPaymentDateOperator\": null,\n    \"anticipatedPaymentDate\": null,\n    \"fundingDateOperator\": null,\n    \"fundingDate\": null,\n    \"transactionClosingOperator\": null,\n    \"transactionClosingDate\": null,\n    \"buyer\": null,\n    \"supplier\": null,\n    \"funder\": null,\n    \"currencyCode\": null,\n    \"stateNames\": null,\n    \"sourceTransactionId\": {{transactionId}}\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/AssetSearch?count=100&skip=0","host":["{{baseURI}}"],"path":["api","AssetSearch"],"query":[{"key":"count","value":"100"},{"key":"skip","value":"0"}]}},"response":[]},{"name":"OutgoingWire/Confirm (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"34cd12fa-2d08-43df-9707-8efa299bdaa3","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","    ","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url=  baseURI +'/api/assets/'+ assetId;","    ","    var invoiceId = pm.variables.get(\"invoiceId\");","     var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","    ","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 20,'FundsReceived', 'PTS-Admin');","    ","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 6,'Processed', 'PTS-Admin');","","    ","    //OutgoingWires Status","    helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId\"), 'OutgoingWires', 1,'pending approval', 'PTS-Admin');","    ","    ","    //PTS-Asset Verification","    var state = [\"FundsReceived\",\"Processing\"];","    var stateID = [20,20];","    ","    // var state = [\"Pending Settlement\"];","    // var stateID = [5];","            ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","            ","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","               ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Transactions/'+ TransactionId ;","    helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","               ","    helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"1f4d57d6-3ec7-4164-ba76-d67786becae2","exec":["setTimeout(function(){","    var assetId = pm.variables.get(\"assetId\");","    var url = pm.environment.get(\"baseURI\") + '/api/OutgoingWires?brid='+pm.variables.get('receiptId');","    ","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser2\")","        }","    }, function(err, res) {","        var jsonData = res.json();","        for( var i= 0 ;i< jsonData.outgoingWires.length; i++)","        {","            for( var j= 0 ;j< jsonData.outgoingWires[i].outgoingWireDetails.length; j++)","            {","                if (jsonData.outgoingWires[i].outgoingWireDetails[j].bankReceiptId == pm.variables.get('receiptId'))","                {","                    pm.variables.set(\"outgoingWireId\", jsonData.outgoingWires[i].outgoingWireDetails[j].outgoingWireId);","                    break;","                }","            }    ","        }","      console.log(\"receiptId: \"+pm.variables.get(\"receiptId\"));","      console.log(\"outgoingWireId: \"+pm.variables.get(\"outgoingWireId\"));","    });","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"bb834e2d-15fc-4a19-a337-758e56e2c33c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[{{outgoingWireId}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires?command=confirm","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"command","value":"confirm"}]}},"response":[]},{"name":"OutgoingWire/selecttopay (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"a3faa7ec-50cb-46ba-9553-17f8aa56fe6c","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","    ","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url=  baseURI +'/api/assets/'+ assetId;","    ","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","    ","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 20,'FundsReceived', 'PTS-Admin');","    ","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 6,'Processed', 'PTS-Admin');","    ","    //OutgoingWires Status","    helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId\"), 'OutgoingWires', 3,'Ready', 'PTS-Admin');","    ","    //PTS-Asset Verification","    var state = [\"FundsReceived\",\"Processing\"];","    var stateID = [20,20];","            ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","            ","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","               ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Transactions/'+ TransactionId ;","    helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","               ","    helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"149f23bd-079e-487f-b5a9-3b64d3257bbd","exec":["console.log(\"outgoingWireId: \"+pm.variables.get(\"outgoingWireId\"));"],"type":"text/javascript"}}],"_postman_id":"7e29606f-e712-4ad4-847e-2b4b95d46b8d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{{outgoingWireId}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires?command=selecttopay","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"command","value":"selecttopay"}]}},"response":[]},{"name":"OutgoingWire/fees(Funder -> Supplier)","event":[{"listen":"test","script":{"id":"d82823f7-d035-41c4-b3cd-53e5424c3f2c","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","});  ","   /* var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url=  baseURI +'/api/assets/'+ assetId;","    ","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","    ","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 20,'FundsReceived', 'PTS-Admin');","    ","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 6,'Processed', 'PTS-Admin');","    ","    //OutgoingWires Status","    helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId\"), 'OutgoingWires', 3,'Ready', 'PTS-Admin');","    ","    //PTS-Asset Verification","    var state = [\"FundsReceived\",\"Processing\"];","    var stateID = [20,20];","            ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","            ","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","               ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Transactions/'+ TransactionId ;","    helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","               ","    helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","}); */"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e7baf64d-4fd3-4308-b446-f8abed083566","exec":["\r","setTimeout(function(){\r","    var url = pm.environment.get(\"baseURI\") + '/api/OutgoingWires/'+pm.variables.get(\"outgoingWireId\");\r","    \r","    pm.sendRequest({\r","        url: url,\r","        method: 'GET',\r","        header: {\r","            'Accept': 'application/json',\r","            'Content-Type': 'application/json',\r","            'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser2\")\r","        }\r","    }, function(err, res) {\r","        var jsonData = res.json();\r","        for( var i= 0 ;i< jsonData.outgoingWires.length; i++)\r","        {\r","\r","            for( var j= 0 ;j< jsonData.outgoingWires[i].outgoingWireDetails.length; j++)\r","            {\r","                if (jsonData.outgoingWires[i].outgoingWireDetails[j].bankReceiptId == pm.variables.get('receiptId'))\r","                {\r","                    pm.variables.set(\"outgoingWireId\", jsonData.outgoingWires[i].outgoingWireDetails[j].outgoingWireId);\r","                    break;\r","                }\r","            }    \r","        }\r","      console.log(\"outgoingWireId: \"+pm.variables.get(\"outgoingWireId\"));\r","\r","    });\r","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"79a2fffa-1107-4ce6-823f-dbaa0dc42e25","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"fee\": 10,\r\n  \"feeNote\": \"Added fees API_Auto_Test\"\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/{{outgoingWireId}}/fees","host":["{{baseURI}}"],"path":["api","OutgoingWires","{{outgoingWireId}}","fees"]}},"response":[]},{"name":"OutgoingWire/createPayment (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"e2a80736-9578-4f7b-9f09-aa6e04a42fc1","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","    ","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url=  baseURI +'/api/assets/'+ assetId;","    ","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","    ","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 20,'FundsReceived', 'PTS-Admin');","    ","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 6,'Processed', 'PTS-Admin');","    ","    //OutgoingWires Status","    helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId\"), 'OutgoingWires', 4,'Transmitted', 'PTS-Admin');   ","    ","    //PTS-Asset Verification","    var state = [\"FundsReceived\",\"Processing\"];","    var stateID = [20,20];","            ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Invoices/'+ invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","            ","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","               ","    url=  pm.environment.get(\"SCBaseURI\") +'/api/Transactions/'+ TransactionId ;","    helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'SCF Admin');","               ","    helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 6, 'Pending Settlement', 'Investor');","}); "],"type":"text/javascript"}}],"_postman_id":"73cf0d61-91f6-4356-8d60-af4fa3a21345","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{{outgoingWireId}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/createPayment","host":["{{baseURI}}"],"path":["api","OutgoingWires","createPayment"]}},"response":[]},{"name":"OutgoingWire/updatebankreference (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"31d1869d-b3c9-44e1-8585-3d2b65f8d8ff","exec":["pm.test(\"To check Status code is 204\", function () {","","    pm.response.to.have.status(204);","});","","if (pm.response.code == 204) {","    setTimeout(function () {","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        var TransactionId = pm.variables.get(\"transactionId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","         ","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 15, 'Outstanding', 'PTS-Admin');","        ","","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId\"), 'BankAccountReceipts', 6, 'Processed', 'PTS-Admin');","","        //OutgoingWires Status","        helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId\"), 'OutgoingWires', 5, 'FundsSent', 'PTS-Admin');","        ","    ","        ","        //PTS-Asset Verification","        var state = [\"Outstanding\"];","        var stateID = [15];","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","    ","pm.globals.set(\"variable_key\", \"variable_value\");","","    }, 30000);","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"ef7ca621-ade1-42f9-8445-b238ebe408ea","exec":["function getRandomInt(max) {","  return Math.floor(Math.random() * Math.floor(max));","}","var refId = getRandomInt(9999);","pm.variables.set(\"id\", refId);"],"type":"text/javascript"}}],"_postman_id":"d37c1fad-a544-4017-8008-27407394bdf7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{{outgoingWireId}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires?command=updatebankreference&bankreferenceid=ref_{{id}}","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"command","value":"updatebankreference"},{"key":"bankreferenceid","value":"ref_{{id}}"}]}},"response":[]},{"name":"OutgoingWire/updatebankreference (Funder -> Supplier)  to verify amounts","event":[{"listen":"test","script":{"id":"b4483153-cf1f-46f7-8965-03ef482fe2df","exec":["pm.test(\"To check Status code is 200\", function () {","","    pm.response.to.have.status(200);","});","","if (pm.response.code == 200) {","    setTimeout(function () {","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","     pm.sendRequest({","            url: url,","            method: 'GET',","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","","        }, function (err, res) {","            var jsonData = res.json();","            pm.variables.set(\"outstandingPurchasePrice\", jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding);","            pm.variables.set(\"outstandingAmount\", jsonData[0].transactionAssetInvestors[0].outstandingAmount);","            console.log(\"outstandingAmount\");","            pm.test(\"To check Funding balance is reduced by applied payment\", function () {","            pm.expect(jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding).to.equal(parseFloat(pm.variables.get(\"paymentAmount\")) - parseFloat(pm.variables.get(\"paymentAmount\")));","            });","        ","        });","        ","    }, 30000);","    }"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"d5e3d8c5-c141-404f-b8f9-1467e5e9aabe","exec":["function getRandomInt(max) {","  return Math.floor(Math.random() * Math.floor(max));","}","var refId = getRandomInt(9999);","pm.variables.set(\"id\", refId);"],"type":"text/javascript"}}],"_postman_id":"44860799-df4a-4346-916a-f6f2ff9b8375","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{{outgoingWireId}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires?command=updatebankreference&bankreferenceid=ref_{{id}}","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"command","value":"updatebankreference"},{"key":"bankreferenceid","value":"ref_{{id}}"}]}},"response":[]},{"name":"OutgoingWires/remittance-history (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"81988097-5a2f-412b-930e-cdc119c4c90e","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();","for( var i= 0 ;i< jsonData.outgoingWires.length; i++)","  {","     pm.variables.set(\"paymentAmount\", jsonData.outgoingWires[i].paymentAmount);","     pm.variables.set(\"fee\", jsonData.outgoingWires[i].fee);","     pm.variables.set(\"totalDiscountPaid\", jsonData.outgoingWires[i].totalDiscountPaid);","pm.variables.set(\"totalNetPurchasePriceOutstanding\", jsonData.outgoingWires[i].totalNetPurchasePriceOutstanding);","    console.log(\"paymentAmount : \" + pm.variables.get(\"paymentAmount\"));","    console.log(\"fee : \" + pm.variables.get(\"fee\"));","    console.log(\"totalDiscountPaid : \" + pm.variables.get(\"totalDiscountPaid\"));","    console.log(\"totalNetPurchasePriceOutstanding : \" + pm.variables.get(\"totalNetPurchasePriceOutstanding\"));","","","for( var j= 0 ;j< jsonData.outgoingWires[i].outgoingWireDetails.length; j++)"," {","    pm.variables.set(\"amount\", jsonData.outgoingWires[i].outgoingWireDetails[j].amount);","    pm.variables.set(\"netPurchasePriceOutstanding\", jsonData.outgoingWires[i].outgoingWireDetails[j].netPurchasePriceOutstanding);","    pm.variables.set(\"discountPaid\", jsonData.outgoingWires[i].outgoingWireDetails[j].discountPaid);","    console.log(\"amount : \" + pm.variables.get(\"amount\"));","    console.log(\"netPurchasePriceOutstanding : \" + pm.variables.get(\"netPurchasePriceOutstanding\"));","    console.log(\"discountPaid : \" + pm.variables.get(\"discountPaid\"));","","","","    pm.test(\"To check payment amount is reduced by applied fees\", function () {","    pm.expect(jsonData.outgoingWires[i].paymentAmount).to.equal(parseFloat(pm.variables.get(\"amount\")) - parseFloat(pm.variables.get(\"fee\")));","","        });","   pm.test(\"To check NetPurchasePriceOutstanding amount  of outgoingwire \", function () {","    pm.expect(jsonData.outgoingWires[i].outgoingWireDetails[j].netPurchasePriceOutstanding).to.equal(pm.variables.get(\"totalNetPurchasePriceOutstanding\"));","","        });","   pm.test(\"To check DiscountPaid amount of outgoingwire \", function () {","    pm.expect(jsonData.outgoingWires[i].outgoingWireDetails[j].discountPaid).to.equal(pm.variables.get(\"totalDiscountPaid\"));","","        });     ",""," }"," }    ","           "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"45754a6f-53f4-4e5a-845c-84366c12d466","exec":["var moment = require('moment');\r","var beginDate = moment().add('days').format(\"YYYY-MM-DD\");\r","var endDate = moment().add('days').format(\"YYYY-MM-DD\");\r","console.log(\"beginDate\", beginDate);\r","pm.environment.set(\"beginDate\", beginDate);\r","console.log(\"endDate\", endDate);\r","pm.environment.set(\"endDate\", endDate);\r","\r","setTimeout(function(){\r","    var url = pm.environment.get(\"baseURI\") + '/api/OutgoingWires/'+pm.variables.get(\"outgoingWireId\");\r","    \r","    pm.sendRequest({\r","        url: url,\r","        method: 'GET',\r","        header: {\r","            'Accept': 'application/json',\r","            'Content-Type': 'application/json',\r","            'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser2\")\r","        }\r","    }, function(err, res) {\r","        var jsonData = res.json();\r","        for( var i= 0 ;i< jsonData.outgoingWires.length; i++)\r","        {\r","            pm.variables.set(\"transferId\", jsonData.outgoingWires[i].transferId);\r","\r","            for( var j= 0 ;j< jsonData.outgoingWires[i].outgoingWireDetails.length; j++)\r","            {\r","                if (jsonData.outgoingWires[i].outgoingWireDetails[j].bankReceiptId == pm.variables.get('receiptId'))\r","                {\r","                    pm.variables.set(\"outgoingWireId\", jsonData.outgoingWires[i].outgoingWireDetails[j].outgoingWireId);\r","                    break;\r","                }\r","            }    \r","        }\r","      console.log(\"transferId: \"+pm.variables.get(\"transferId\"));\r","      console.log(\"outgoingWireId: \"+pm.variables.get(\"outgoingWireId\"));\r","\r","    });\r","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"f1d6ed3c-e823-475b-a048-d23fd786e9a0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"transferId\": \"{{transferId}}\",\r\n  \"beginDate\": \"{{beginDate}}\",\r\n  \"endDate\": \"{{endDate}}\"\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/remittance-history?skip=0&count=100","host":["{{baseURI}}"],"path":["api","OutgoingWires","remittance-history"],"query":[{"key":"skip","value":"0"},{"key":"count","value":"100"}]}},"response":[]},{"name":"OutgoingWires/RemittanceReports (Funder -> Supplier)","event":[{"listen":"test","script":{"id":"b8042397-c2aa-4da6-ba1c-7b8688e199dc","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","           "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"a5b74293-4abd-4c88-bb5b-8c2cd633b75c","exec":["var moment = require('moment');\r","var bd = moment().add('days').format(\"YYYY-MM-DD\");\r","var ed = moment().add('days').format(\"YYYY-MM-DD\");\r","console.log(\"bd\", bd);\r","pm.environment.set(\"bd\", bd);\r","console.log(\"ed\", ed);\r","pm.environment.set(\"ed\", ed);\r","pm.variables.set( \"states\",\"Funds%20Sent\");\r",""],"type":"text/javascript"}}],"_postman_id":"eb460ec8-0c9b-433f-bfcb-2af545dd62c9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/RemittanceReports/payees/{{supplierId}}?count=100&skip=0&states={{states}}&tid={{transferId}}&bd={{bd}}&ed={{ed}}","host":["{{baseURI}}"],"path":["api","RemittanceReports","payees","{{supplierId}}"],"query":[{"key":"count","value":"100"},{"key":"skip","value":"0"},{"key":"states","value":"{{states}}"},{"key":"tid","value":"{{transferId}}"},{"key":"bd","value":"{{bd}}"},{"key":"ed","value":"{{ed}}"}]}},"response":[]},{"name":"Post BankAccountReceipts (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"824669dd-4a6b-4afd-920c-f23f846a37e3","exec":["if (pm.response.code == 201 || pm.response.code == 202 & responseBody !== '') {","","    var responseJSONdata = JSON.parse(responseBody);","","    pm.test(\"To check Status code is 201\", function () {","        pm.response.to.have.status(201);","    });","","    pm.variables.set('receiptId2', responseJSONdata[0].id);","    pm.variables.set('paymentId2', responseJSONdata[0].paymentId);","","    console.log('Receipt ID: ' + pm.variables.get(\"receiptId2\"));","    console.log('Payment ID: ' + pm.variables.get(\"paymentId2\"));","","    setTimeout(function () {","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        var TransactionId = pm.variables.get(\"transactionId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 15, 'Outstanding', 'PTS-Admin');","","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 3, 'Processing', 'PTS-Admin');","","        //PTS-Asset Verification","        var state = [\"Outstanding\"];","        var stateID = [15];","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","","    }, pm.variables.get(\"stateChangeDelay\"));","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"dd880285-6809-4add-8db6-c2fbf186595b","exec":["setTimeout(function () {\r","  function getRandomInt(max) {\r","    return Math.floor(Math.random() * Math.floor(max));\r","  }\r","\r","  var refId = getRandomInt(9999);\r","  pm.variables.set(\"refId\", refId);\r","  console.log('refID: ' + pm.variables.get(\"refId\"));\r","\r","  var moment = require('moment');\r","  var local = moment();\r","  console.log(\"localTime\", local);\r","  pm.environment.set(\"localTime\", local);\r","\r","  var baseURI = pm.environment.get(\"baseURI\");\r","  var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");\r","\r","  var url = baseURI + '/api/assets/' + pm.variables.get(\"assetId\");\r","\r","  pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","      'Accept': 'application/json',\r","      'Content-Type': 'application/json',\r","      'Authorization': 'bearer ' + accessToken\r","    }\r","\r","  }, function (err, res) {\r","    var jsonData = res.json();\r","    var paymentAmount = jsonData[0].transactionAssetInvestors[0].outstandingAmount;\r","    var allocatedNetProceeds =jsonData[0].transactionAssetInvestors[0].allocatedNetProceeds;\r","    var totalFee=jsonData[0].transactionAssetInvestors[0].totalFee;\r","    var purchasePriceOutstanding=jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding;\r","    pm.variables.set(\"payer\", jsonData[0].payor);\r","    pm.variables.set(\"payerId\", jsonData[0].payorId);\r","    pm.variables.set(\"payee\", jsonData[0].payee);\r","    pm.variables.set(\"paymentAmount\", paymentAmount);\r","    pm.variables.set(\"purchasePriceOutstanding\",purchasePriceOutstanding);\r","    var currency = jsonData[0].currencyCode;\r","\r","    console.log(\"payor: \" + jsonData[0].payor);\r","    console.log(\"payorId: \" + jsonData[0].payorId);\r","    console.log(\"payee: \" + jsonData[0].payee);\r","    console.log(\"paymentAmount: \" + paymentAmount);\r","    console.log(\"paymentAmount: \" + purchasePriceOutstanding);\r","\r","  });\r","}, pm.variables.get(\"stateChangeDelay\"));\r",""],"type":"text/javascript"}}],"_postman_id":"8a2ab26b-4c95-4658-b99b-6025eba70f7d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[\n\t{\n\t    \"bankAccountAlias\": \"{{bankAccount}}\",\n\t    \"receiptEntryDate\": \"{{localTime}}\",\n\t    \"bankReferenceId\": \"API_Auto_{{refId}}\",\n\t    \"payor\": \"{{payer}}\",\n\t    \"payee\": \"{{investorName}}\",\n\t    \"fundType\": \"Wire\",\n\t    \"paymentAmount\": {{paymentAmount}},\n\t    \"currencyCode\": \"{{currencyCode}}\",\n\t    \"note\": \"\",\n\t    \"productCode\": \"SCF\",\n\t    \"stateId\": 0,\n\t    \"processedDate\": \"{{localTime}}\",\n\t    \"payorId\": {{payerId}}\n\t}\n]\t","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/BankAccountReceipts","host":["{{baseURI}}"],"path":["api","BankAccountReceipts"]}},"response":[]},{"name":"Checkout (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"354e20d5-ad07-445c-8f30-e1cf1af8fc13","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    setTimeout(function () {","        var responseJSONdata = JSON.parse(responseBody);","        pm.test(\"Verify Asset is Checked-out\", function () {","            var jsonData = pm.response.json();","            pm.expect(jsonData.checkout).to.be.true;","        });","","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        var TransactionId = pm.variables.get(\"transactionId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 15, 'Outstanding', 'PTS-Admin');","","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 3, 'Processing', 'PTS-Admin');","","        //PTS-Asset Verification","        var state = [\"Outstanding\"];","        var stateID = [15];","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","","    }, pm.variables.get(\"stateChangeDelay\"));","","});"],"type":"text/javascript"}}],"_postman_id":"17ee2792-8438-4407-bbcb-d5c608e68143","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[],"url":{"raw":"{{baseURI}}/api/Payments/{{receiptId2}}?command=checkout","host":["{{baseURI}}"],"path":["api","Payments","{{receiptId2}}"],"query":[{"key":"command","value":"checkout"}]}},"response":[]},{"name":"Match (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"cedd13ab-7567-4851-bef7-3389638f2828","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url = baseURI + '/api/assets/' + assetId;","","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 15, 'Outstanding', 'PTS-Admin');","","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 4, 'Matched', 'PTS-Admin');","","    //PTS-Asset Verification","    var state = [\"Outstanding\"];","    var stateID = [15];","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","}); "],"type":"text/javascript"}}],"_postman_id":"945dc62b-aeb8-4ee0-88bb-46f074a0736e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"assetDetails\": [\n        {\n            \"assetId\": {{assetId}},\n            \"paymentAmount\":{{paymentAmount}},\n            \"note\": \"Test\",\n            \"isFee\": false\n        }\n    ],\n    \"shouldReturnOverpayment\": false,\n    \"productCode\":\"SCF\",\n    \"fundSourceTypeId\":2,\n    \"fundSourceType\":\"Remittance\"\n\n    \n\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/payments/{{paymentId2}}","host":["{{baseURI}}"],"path":["api","payments","{{paymentId2}}"]}},"response":[]},{"name":"Get Asset/matched (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"b824f0ef-75fb-43d7-aa4b-218136b6b7e8","exec":["var responseJSONdata =pm.response.json(); ","if(pm.response.code == 200 & responseBody !== '')","{","    pm.test(\"Matching data items returned: \", function(){","        pm.expect(responseJSONdata[0].state).to.equal(\"Outstanding\");","        pm.expect(responseJSONdata[0].payorId).to.equal(pm.variables.get(\"payerId\"));","        pm.expect(responseJSONdata[0].payor).to.equal(pm.variables.get(\"payer\"));","        pm.expect(responseJSONdata[0].payee).to.equal(pm.variables.get(\"payee\"));","        pm.expect(responseJSONdata[0].transactionAssetInvestors[0].outstandingAmount).to.equal(pm.variables.get(\"paymentAmount\"));","    });","}"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"bea2de0c-306d-42d0-b91a-0a4e14e78f7c","exec":[""],"type":"text/javascript"}}],"_postman_id":"204d8491-3009-48fd-a5b6-604fe1d6f2e5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{baseURI}}/api/Assets/matched/{{receiptId}}","host":["{{baseURI}}"],"path":["api","Assets","matched","{{receiptId}}"]},"description":"/api/Assets/matched/{bankReceiptId}"},"response":[]},{"name":"Checkin (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"9f64c47d-93e7-4f92-bea8-037ac5f00c49","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    var responseJSONdata = JSON.parse(responseBody);","    pm.test(\"Verify Asset is Checked-in\", function () {","        var jsonData = pm.response.json();","        pm.expect(jsonData.checkout).to.be.false;","    });","","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url = baseURI + '/api/assets/' + assetId;","","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 15, 'Outstanding', 'PTS-Admin');","","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 4, 'Matched', 'PTS-Admin');","","    //PTS-Asset Verification","    var state = [\"Outstanding\"];","    var stateID = [15];","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","","}); "],"type":"text/javascript"}}],"_postman_id":"3d4bdf94-d026-43e9-b351-cc7b4cc2384a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"PUT","header":[],"url":{"raw":"{{baseURI}}/api/Payments/{{receiptId2}}?command=checkin","host":["{{baseURI}}"],"path":["api","Payments","{{receiptId2}}"],"query":[{"key":"command","value":"checkin"}]}},"response":[]},{"name":"Asset Search by transaction (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"e717c3c9-b796-429e-820d-5a54c4c166d1","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    setTimeout(function () {","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 15, 'Outstanding', 'PTS-Admin');","","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 4, 'Matched', 'PTS-Admin');","    }, pm.variables.get(\"stateChangeDelay\"));","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"43ea1825-96aa-4eee-a41b-012dc874a6ee","exec":["console.log(\"transactionId: \"+pm.variables.get(\"transactionId\"));"],"type":"text/javascript"}}],"_postman_id":"712a48fa-ee49-4e0f-b298-fa04ec959c08","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"number\": null,\n    \"issueDateOperator\": null,\n    \"issueDate\": null,\n    \"anticipatedPaymentDateOperator\": null,\n    \"anticipatedPaymentDate\": null,\n    \"fundingDateOperator\": null,\n    \"fundingDate\": null,\n    \"transactionClosingOperator\": null,\n    \"transactionClosingDate\": null,\n    \"buyer\": null,\n    \"supplier\": null,\n    \"funder\": null,\n    \"currencyCode\": null,\n    \"stateNames\": null,\n    \"productCode\": \"SCF\",\n     \"sourceTransactionId\": {{transactionId}}\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/AssetSearch?count=100&skip=0","host":["{{baseURI}}"],"path":["api","AssetSearch"],"query":[{"key":"count","value":"100"},{"key":"skip","value":"0"}]}},"response":[]},{"name":"Payment Process (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"4412d5ab-530b-45ad-aa4e-70489882fcb5","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url = baseURI + '/api/assets/' + assetId;","","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer ' + accessToken","        }","","    }, function (err, res) {","        var jsonData = res.json();","","        pm.variables.set(\"outstandingPurchasePrice\", jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding);","","        console.log(\"outstandingPurchasePrice : \" + pm.variables.get(\"outstandingPurchasePrice\"));","","        pm.test(\"To check outstandingPurchasePrice amount: \", function () {","            pm.expect(parseFloat(pm.variables.get(\"outstandingPurchasePrice\"))).to.equal(0.0);","        });","","        pm.variables.set(\"outstandingAmount1\", jsonData[0].outstandingAmount);","        pm.variables.set(\"outstandingAmount2\", jsonData[0].transactionAssetInvestors[0].outstandingAmount);","","        console.log(\"outstandingAmount : \" + pm.variables.get(\"outstandingAmount1\"));","","        pm.test(\"To check outstandingAmount amount: \", function () {","            pm.expect(parseFloat(pm.variables.get(\"outstandingAmount1\"))).to.equal(0.0);","            pm.expect(parseFloat(pm.variables.get(\"outstandingAmount2\"))).to.equal(0.0);","        });","    });","","    // var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    // var baseURI = pm.environment.get(\"baseURI\");","    // var assetId = pm.variables.get(\"assetId\");","    // var url=  baseURI +'/api/assets/'+ assetId;","","    // var invoiceId = pm.variables.get(\"invoiceId\");","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 15, 'Outstanding', 'PTS-Admin');","","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 6, 'Processed', 'PTS-Admin');","","    //PTS-Asset Verification","    var state = [\"Outstanding\"];","    var stateID = [15];","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"bd01c0ac-52d8-4bc0-b3be-7bb0c702903a","exec":[""],"type":"text/javascript"}}],"_postman_id":"1c1f40e8-5a7a-454d-a593-eeb8b32dfe11","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/Payments/process","host":["{{baseURI}}"],"path":["api","Payments","process"]}},"response":[]},{"name":"Asset Search by transaction to verify amounts (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"bff54fb8-7c1f-496c-8a62-885cd165a5ae","exec":["pm.test(\"To check Status code is 200\", function () {","  pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();","///////////////////////////////////////////////////////////////////////////////////////","pm.variables.set(\"totalCashAmountApplied\", jsonData.assets[0].totalCashAppliedAmount);","","console.log(\"totalCashAmountApplied : \" + pm.variables.get(\"totalCashAmountApplied\"));","","pm.test(\"To check totalCashAmountApplied amount: \", function () {","  //  pm.expect(parseFloat(pm.variables.get(\"totalCashAmountApplied\"))).to.equal(0.0);","});","","//////////////////////////////////////////////////////////////////////////////////////","","pm.variables.set(\"totalNonCashAmountApplied\", jsonData.assets[0].totalNonCashAppliedAmount);","","console.log(\"totalNonCashAmountApplied : \" + pm.variables.get(\"totalNonCashAmountApplied\"));","","pm.test(\"To check totalNonCashAmountApplied amount: \", function () {","  pm.expect(parseFloat(pm.variables.get(\"totalNonCashAmountApplied\"))).to.equal(0.0);","});","","//////////////////////////////////////////////////////////////////////////////////////","","//pm.variables.set(\"outstandingPurchasePrice\", jsonData.assets[0].purchasePriceOutstanding);","pm.variables.set(\"outstandingPurchasePrice\", jsonData.totals[0].totalPurchasePriceOutstanding);","","console.log(\"outstandingPurchasePrice : \" + pm.variables.get(\"outstandingPurchasePrice\"));","","","var assert = require('assert');","","","pm.test(\"To check outstandingPurchasePrice amount: \", function () {","  assert(parseFloat(pm.variables.get(\"outstandingPurchasePrice\")) >= 0.0); //  pm.expect(parseFloat(pm.variables.get(\"outstandingPurchasePrice\"))).to.equal(0.0);","});","","pm.test(\"To check totalCashAmountApplied amount: \", function () {","  assert(parseFloat(pm.variables.get(\"totalCashAmountApplied\")) >= 0.0);","});","","pm.test(\"To check totalNonCashAmountApplied amount: \", function () {","  assert(parseFloat(pm.variables.get(\"totalNonCashAmountApplied\")) >= 0.0);","});","","pm.test(\"To check faceValue is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].faceValue) >= 0.0);","});","","pm.test(\"To check netFaceValue is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].netFaceValue) >= 0.0);//pm.expect(parseFloat(jsonData.totals[0].netFaceValue)).to.be.above(0.0);","});","pm.test(\"To check outstandingAmount is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].outstandingAmount) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].outstandingAmount)).to.be.above(0.0);","});","//pm.test(\"To check totalCashAmountApplied is not negative amount: \", function () {","  //assert(parseFloat(jsonData.totals[0].totalCashAmountApplied) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].totalCashAmountApplied)).to.be.above(0.0);","//});","//pm.test(\"To check totalNonCashAmountApplied is not negative amount: \", function () {","  //assert(parseFloat(jsonData.totals[0].totalNonCashAmountApplied) >= 0.0);///pm.expect(parseFloat(jsonData.totals[0].totalNonCashAmountApplied)).to.be.above(0.0);","//});","pm.test(\"To check totalFundingBalance is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].totalFundingBalance) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].totalFundingBalance)).to.be.above(0.0);","});","pm.test(\"To check totalPurchasePriceOutstanding is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].totalPurchasePriceOutstanding) >= 0.0); // pm.expect(parseFloat(jsonData.totals[0].totalPurchasePriceOutstanding)).to.be.above(0.0);","});","pm.test(\"To check totalAdvanceRateAmount is not negative amount: \", function () {","  assert(parseFloat(jsonData.totals[0].totalAdvanceRateAmount) >= 0.0); //pm.expect(parseFloat(jsonData.totals[0].totalAdvanceRateAmount)).to.be.above(0.0);","});","// setTimeout(function(){}, 300000);"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"feb82de7-72c8-4e70-9900-98143ac41499","exec":["console.log(\"transactionId: \"+pm.variables.get(\"transactionId\"));"],"type":"text/javascript"}}],"_postman_id":"8b1e9f00-357d-4f8e-8a38-fed2184c0200","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"number\": null,\n    \"issueDateOperator\": null,\n    \"issueDate\": null,\n    \"anticipatedPaymentDateOperator\": null,\n    \"anticipatedPaymentDate\": null,\n    \"fundingDateOperator\": null,\n    \"fundingDate\": null,\n    \"transactionClosingOperator\": null,\n    \"transactionClosingDate\": null,\n    \"buyer\": null,\n    \"supplier\": null,\n    \"funder\": null,\n    \"currencyCode\": null,\n    \"stateNames\": null,\n     \"productCode\": \"SCF\",\n    \"sourceTransactionId\": {{transactionId}}\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/AssetSearch?count=100&skip=0","host":["{{baseURI}}"],"path":["api","AssetSearch"],"query":[{"key":"count","value":"100"},{"key":"skip","value":"0"}]}},"response":[]},{"name":"OutgoingWire/Confirm (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"00f7500b-664f-4a63-b459-176749cd00bd","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","","    setTimeout(function () {","","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        var TransactionId = pm.variables.get(\"transactionId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 12, 'ReceivedPayment', 'PTS-Admin');","","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 6, 'Processed', 'PTS-Admin');","","        //PTS-Asset Verification","        var state = [\"Payment Received\", \"Outstanding\"];","        var stateID = [12, 15];","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","","    }, pm.variables.get(\"stateChangeDelay\"));","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"3a473a09-14f4-4a58-82d9-512fcd6a0d42","exec":["setTimeout(function(){","    var assetId = pm.variables.get(\"assetId\");","    var url = pm.environment.get(\"baseURI\") + '/api/OutgoingWires?brid='+pm.variables.get('receiptId2');","    ","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser2\")","        }","    }, function(err, res) {","        var jsonData = res.json();","        for( var i= 0 ;i< jsonData.outgoingWires.length; i++)","        {","            for( var j= 0 ;j< jsonData.outgoingWires[i].outgoingWireDetails.length; j++)","            {","                if (jsonData.outgoingWires[i].outgoingWireDetails[j].bankReceiptId == pm.variables.get('receiptId2'))","                {","                    pm.variables.set(\"outgoingWireId2\", jsonData.outgoingWires[i].outgoingWireDetails[j].outgoingWireId);","                    break;","                }","            }    ","        }","       console.log(\"receiptId: \"+pm.variables.get(\"receiptId2\"));","       console.log(\"outgoingWireId: \"+pm.variables.get(\"outgoingWireId2\"));","    });","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"a7c6404c-d45b-462a-9ac7-c090a5a558e0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[{{outgoingWireId2}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires?command=confirm","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"command","value":"confirm"}]}},"response":[]},{"name":"OutgoingWire/selecttopay (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"49268e67-9a7d-4098-b2d6-47bf1d9e167d","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url = baseURI + '/api/assets/' + assetId;","","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 12, 'ReceivedPayment', 'PTS-Admin');","","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 6, 'Processed', 'PTS-Admin');","","    //OutgoingWires Status","    helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId2\"), 'OutgoingWires', 3, 'Ready', 'PTS-Admin');","","    //PTS-Asset Verification","    var state = [\"Payment Received\", \"Outstanding\"];","    var stateID = [12, 15];","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","    helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","    helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"c7dea0f2-e9d6-4aba-a0e3-f5e5fd4b04c8","exec":["console.log(\"outgoingWireId: \"+pm.variables.get(\"outgoingWireId2\"));"],"type":"text/javascript"}}],"_postman_id":"97999f0a-a80c-45d4-b574-b727509983a4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{{outgoingWireId2}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires?command=selecttopay","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"command","value":"selecttopay"}]}},"response":[]},{"name":"OutgoingWire/createPayment (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"acca9b57-26c8-458a-9eef-93301085239a","exec":["pm.test(\"To check Status code is 200\", function () {","    pm.response.to.have.status(200);","","    var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","    var baseURI = pm.environment.get(\"baseURI\");","    var assetId = pm.variables.get(\"assetId\");","    var url = baseURI + '/api/assets/' + assetId;","","    var invoiceId = pm.variables.get(\"invoiceId\");","    var TransactionId = pm.variables.get(\"transactionId\");","    const helper = eval(pm.globals.get(\"PTShelper\"));","","    // Asset Status","    helper.verifyState('GET', url, accessToken, 'Asset', 12, 'ReceivedPayment', 'PTS-Admin');","","    //Payment Status","    helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 6, 'Processed', 'PTS-Admin');","","    //OutgoingWires Status","    helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId2\"), 'OutgoingWires', 4, 'Transmitted', 'PTS-Admin');","","    //PTS-Asset Verification","    var state = [\"Payment Received\", \"Outstanding\"];","    var stateID = [12, 15];","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","","    helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","    url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 12, 'Outstanding', 'Investor');","}); "],"type":"text/javascript"}}],"_postman_id":"b68060f7-fc46-45ee-8dd4-08ed749e3016","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{{outgoingWireId2}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/createPayment","host":["{{baseURI}}"],"path":["api","OutgoingWires","createPayment"]}},"response":[]},{"name":"OutgoingWire/updatebankreference (Buyer/AD -> Funder)","event":[{"listen":"test","script":{"id":"7ff90518-999a-4720-b985-148b65065dca","exec":["pm.test(\"To check Status code is 204\", function () {","    pm.response.to.have.status(204);","    setTimeout(function () {","        var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        var baseURI = pm.environment.get(\"baseURI\");","        var assetId = pm.variables.get(\"assetId\");","        var url = baseURI + '/api/assets/' + assetId;","","        var invoiceId = pm.variables.get(\"invoiceId\");","        var TransactionId = pm.variables.get(\"transactionId\");","        const helper = eval(pm.globals.get(\"PTShelper\"));","","        // Asset Status","        helper.verifyState('GET', url, accessToken, 'Asset', 16, 'Completed', 'PTS-Admin');","","        //Payment Status","        helper.verifyBankAccReceiptState(accessToken, pm.variables.get(\"receiptId2\"), 'BankAccountReceipts', 6, 'Processed', 'PTS-Admin');","","        //OutgoingWires Status","        helper.verifyOutgoingWireState(accessToken, pm.variables.get(\"outgoingWireId2\"), 'OutgoingWires', 5, 'FundsSent', 'PTS-Admin');","","        //PTS-Asset Verification","        var state = [\"Completed\"];","        var stateID = [16];","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Invoices/' + invoiceId;","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessToken_SC\"), 'invoice', stateID, state, 'SCF Admin');","        helper.verifyMultipleState('GET', url, pm.variables.get(\"accessTokenInvestor_SC\"), 'invoice', stateID, state, 'Investor');","","        url = pm.environment.get(\"SCBaseURI\") + '/api/Transactions/' + TransactionId;","        helper.verifyTransactionState(pm.variables.get(\"accessToken_SC\"), url, TransactionId, 'Transaction', 13, 'Completed', 'SCF Admin');","","        helper.verifyTransactionState(pm.variables.get(\"accessTokenInvestor_SC\"), url, TransactionId, 'Transaction', 13, 'Completed', 'Investor');","    }, pm.variables.get(\"stateChangeDelay\"));","}); "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"e6ea7197-8c9a-4a77-9be7-163aa7994e6c","exec":["function getRandomInt(max) {","  return Math.floor(Math.random() * Math.floor(max));","}","var refId = getRandomInt(9999);","pm.variables.set(\"id2\", refId);"],"type":"text/javascript"}}],"_postman_id":"fb6d426a-01c4-4321-82a1-c074cd5df6d9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"[{{outgoingWireId2}}]","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires?command=updatebankreference&bankreferenceid=ref_{{id2}}","host":["{{baseURI}}"],"path":["api","OutgoingWires"],"query":[{"key":"command","value":"updatebankreference"},{"key":"bankreferenceid","value":"ref_{{id2}}"}]}},"response":[]},{"name":"OutgoingWires/remittance-history (Buyer -> Funder) ","event":[{"listen":"test","script":{"id":"224bb121-05ff-4345-bcb7-cf388c9b8769","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();","for( var i= 0 ;i< jsonData.outgoingWires.length; i++)","  {","     pm.variables.set(\"paymentAmount\", jsonData.outgoingWires[i].paymentAmount);","     pm.variables.set(\"fee\", jsonData.outgoingWires[i].fee);","     pm.variables.set(\"totalDiscountPaid\", jsonData.outgoingWires[i].totalDiscountPaid);","pm.variables.set(\"totalNetPurchasePriceOutstanding\", jsonData.outgoingWires[i].totalNetPurchasePriceOutstanding);","    console.log(\"paymentAmount : \" + pm.variables.get(\"paymentAmount\"));","    console.log(\"fee : \" + pm.variables.get(\"fee\"));","    console.log(\"totalDiscountPaid : \" + pm.variables.get(\"totalDiscountPaid\"));","    console.log(\"totalNetPurchasePriceOutstanding : \" + pm.variables.get(\"totalNetPurchasePriceOutstanding\"));","","","for( var j= 0 ;j< jsonData.outgoingWires[i].outgoingWireDetails.length; j++)"," {","    pm.variables.set(\"amount\", jsonData.outgoingWires[i].outgoingWireDetails[j].amount);","    pm.variables.set(\"netPurchasePriceOutstanding\", jsonData.outgoingWires[i].outgoingWireDetails[j].netPurchasePriceOutstanding);","    pm.variables.set(\"discountPaid\", jsonData.outgoingWires[i].outgoingWireDetails[j].discountPaid);","    console.log(\"amount : \" + pm.variables.get(\"amount\"));","    console.log(\"netPurchasePriceOutstanding : \" + pm.variables.get(\"netPurchasePriceOutstanding\"));","    console.log(\"discountPaid : \" + pm.variables.get(\"discountPaid\"));","","","","    pm.test(\"To check payment amount is reduced by applied fees\", function () {","    pm.expect(jsonData.outgoingWires[i].paymentAmount).to.equal(parseFloat(pm.variables.get(\"amount\")) - parseFloat(pm.variables.get(\"fee\")));","","        });","   pm.test(\"To check NetPurchasePriceOutstanding amount  of outgoingwire \", function () {","    pm.expect(jsonData.outgoingWires[i].outgoingWireDetails[j].netPurchasePriceOutstanding).to.equal(pm.variables.get(\"totalNetPurchasePriceOutstanding\"));","","        });","   pm.test(\"To check DiscountPaid amount of outgoingwire \", function () {","    pm.expect(jsonData.outgoingWires[i].outgoingWireDetails[j].discountPaid).to.equal(pm.variables.get(\"totalDiscountPaid\"));","","        });     ",""," }"," }    ","           "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"fbbe33b5-711f-4a87-8433-d412e619df75","exec":["var moment = require('moment');\r","var beginDate = moment().add('days').format(\"YYYY-MM-DD\");\r","var endDate = moment().add('days').format(\"YYYY-MM-DD\");\r","console.log(\"beginDate\", beginDate);\r","pm.environment.set(\"beginDate\", beginDate);\r","console.log(\"endDate\", endDate);\r","pm.environment.set(\"endDate\", endDate);\r","\r","setTimeout(function(){\r","    var url = pm.environment.get(\"baseURI\") + '/api/OutgoingWires/'+pm.variables.get(\"outgoingWireId\");\r","    \r","    pm.sendRequest({\r","        url: url,\r","        method: 'GET',\r","        header: {\r","            'Accept': 'application/json',\r","            'Content-Type': 'application/json',\r","            'Authorization': 'bearer ' + pm.variables.get(\"accessToken_LiquidxUser2\")\r","        }\r","    }, function(err, res) {\r","        var jsonData = res.json();\r","        for( var i= 0 ;i< jsonData.outgoingWires.length; i++)\r","        {\r","            pm.variables.set(\"transferId\", jsonData.outgoingWires[i].transferId);\r","\r","            for( var j= 0 ;j< jsonData.outgoingWires[i].outgoingWireDetails.length; j++)\r","            {\r","                if (jsonData.outgoingWires[i].outgoingWireDetails[j].bankReceiptId == pm.variables.get('receiptId'))\r","                {\r","                    pm.variables.set(\"outgoingWireId\", jsonData.outgoingWires[i].outgoingWireDetails[j].outgoingWireId);\r","                    break;\r","                }\r","            }    \r","        }\r","      console.log(\"transferId: \"+pm.variables.get(\"transferId\"));\r","      console.log(\"outgoingWireId: \"+pm.variables.get(\"outgoingWireId\"));\r","\r","    });\r","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}}],"_postman_id":"9a8a8602-5226-4073-919d-b7cc5b0ecd21","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n  \"transferId\": \"{{transferId}}\",\r\n  \"beginDate\": \"{{beginDate}}\",\r\n  \"endDate\": \"{{endDate}}\"\r\n}","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/OutgoingWires/remittance-history?skip=0&count=100","host":["{{baseURI}}"],"path":["api","OutgoingWires","remittance-history"],"query":[{"key":"skip","value":"0"},{"key":"count","value":"100"}]}},"response":[]},{"name":"OutgoingWires/RemittanceReports (Buyer -> Funder) ","event":[{"listen":"test","script":{"id":"7dfe6ec6-af3f-4fbd-8193-56710e224d11","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","           "],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"b00c2145-b8db-4f4d-891d-702435294fcd","exec":["var moment = require('moment');\r","var bd = moment().add('days').format(\"YYYY-MM-DD\");\r","var ed = moment().add('days').format(\"YYYY-MM-DD\");\r","console.log(\"bd\", bd);\r","pm.environment.set(\"bd\", bd);\r","console.log(\"ed\", ed);\r","pm.environment.set(\"ed\", ed);\r","pm.variables.set( \"states\",\"Funds%20Sent\");\r",""],"type":"text/javascript"}}],"_postman_id":"9dec962e-e2aa-4151-b3b7-a75f580294b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser2}}","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/RemittanceReports/payees/{{supplierId}}?count=100&skip=0&states={{states}}&tid={{transferId}}&bd={{bd}}&ed={{ed}}","host":["{{baseURI}}"],"path":["api","RemittanceReports","payees","{{supplierId}}"],"query":[{"key":"count","value":"100"},{"key":"skip","value":"0"},{"key":"states","value":"{{states}}"},{"key":"tid","value":"{{transferId}}"},{"key":"bd","value":"{{bd}}"},{"key":"ed","value":"{{ed}}"}]}},"response":[]}],"_postman_id":"94fa38d9-a532-46b8-bb17-2a5f5bc26ab2","description":"This is End to End completed Payment flow for (Funder to Supplier and Buyer to Funder)\nTS_1 --> Funder make the payment to LQX and LQX transfer the funds to Supplier\nTS_2 --> Buyer make the payment to LQX and LQX transfer the funds to Funder\nTS_7 --> Verify the outgoing wire generation for below condition:\n         1.If Client Bank Account Effective date is set to Past date.\nTS_8 --> Verify the outgoing wire generation for below condition:\n         1.if Client Bank Account has met the following conditions\n           IsEnable =1, IsApproved = 1, IsActive = 1\n","event":[{"listen":"prerequest","script":{"id":"761fbe62-b88a-4bec-82bf-56ebe32b2fee","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"6e3ea532-ed80-4b8e-981b-85157c1e52b5","type":"text/javascript","exec":[""]}}],"_postman_isSubFolder":true}],"_postman_id":"a9747c98-6b52-47af-aebf-ee0770e01477","_postman_isSubFolder":true}],"_postman_id":"77fa0f99-5f37-4621-a653-24c2fa1c67ae","event":[{"listen":"prerequest","script":{"id":"bb7c7e37-841c-4a27-81c8-6c97f9960c49","type":"text/javascript","exec":["jwt = pm.environment.get('accessToken_SC');","if (jwt) {","    jwt_payload_base64 = jwt.split('.')[1];","    jwt_decode = JSON.parse(atob(jwt_payload_base64));","}","// pm.environment.set('audience', 'b2d493ef-50e1-4cbf-86b9-42b25a29ad63');","//Check if token you already have expired","if (!jwt || (jwt_decode && Date.now() >= jwt_decode['exp'] * 1000)) {","    let audience = pm.environment.get('audience');","    let getTokenRequest = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: pm.environment.get('SCF_Admin') },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid ' + audience + ' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest, (err, response) => {","        let jsonResponse = response.json(),","            accessToken = jsonResponse.access_token;","        console.log(\"Top Level\", { err, jsonResponse, accessToken })","        pm.environment.set('accessToken_SC', accessToken);","    });","}","","//----------------------------Investor Token--------------------------------- ","let jwtInvestor = pm.environment.get('accessTokenInvestor_SC');","if (jwtInvestor) {","    jwt_payload_base64_Investor = jwtInvestor.split('.')[1];","    jwt_decode_Investor = JSON.parse(atob(jwt_payload_base64_Investor));","}","//Check if token you already have expired","if (!jwtInvestor || (jwt_decode_Investor && Date.now() >= jwt_decode_Investor['exp'] * 1000)) {","    let audience = pm.environment.get('audience');","    let getTokenRequest_Investor = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: pm.environment.get('SCF_Investor') },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid ' + audience + ' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest_Investor, (err, response) => {","        let jsonResponse_Investor = response.json(),","            accessToken_Investor = jsonResponse_Investor.access_token;","        console.log(\"Top Level\", { err, jsonResponse_Investor, accessToken_Investor })","        pm.environment.set('accessTokenInvestor_SC', accessToken_Investor);","    });","}","","//----------------------------Debtor Token--------------------------------- ","let jwtDebtor = pm.environment.get('accessTokenDebtor_SC');","if (jwtDebtor) {","    jwt_payload_base64_Debtor = jwtDebtor.split('.')[1];","    jwt_decode_Debtor = JSON.parse(atob(jwt_payload_base64_Debtor));","}","//Check if token you already have expired","if (!jwtDebtor || (jwt_decode_Debtor && Date.now() >= jwt_decode_Debtor['exp'] * 1000)) {","    let audience = pm.environment.get('audience');","    let getTokenRequest_Debtor = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: pm.environment.get('SCF_Debtor') },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid ' + audience + ' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest_Debtor, (err, response) => {","        let jsonResponse_Debtor = response.json(),","            accessToken_Debtor = jsonResponse_Debtor.access_token;","        console.log(\"Top Level\", { err, jsonResponse_Debtor, accessToken_Debtor })","        pm.environment.set('accessTokenDebtor_SC', accessToken_Debtor);","    });","}","","","//----------------------------Supplier Token--------------------------------- ","let jwtSupplier = pm.environment.get('accessTokenSupplier_SC');","if (jwtSupplier) {","    jwt_payload_base64_Supplier = jwtSupplier.split('.')[1];","    jwt_decode_Supplier = JSON.parse(atob(jwt_payload_base64_Supplier));","}","//Check if token you already have expired","if (!jwtSupplier || (jwt_decode_Supplier && Date.now() >= jwt_decode_Supplier['exp'] * 1000)) {","","    let audience = pm.environment.get('audience');","    let getTokenRequest_Supplier = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: pm.environment.get('SCF_Supplier') },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid ' + audience + ' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest_Supplier, (err, response) => {","        let jsonResponse_Supplier = response.json(),","            accessToken_Supplier = jsonResponse_Supplier.access_token;","        console.log(\"Top Level\", { err, jsonResponse_Supplier, accessToken_Supplier })","        pm.environment.set('accessTokenSupplier_SC', accessToken_Supplier);","    });","}","","","","","/*let jwt = pm.environment.get('accessToken_SC');","if (jwt){","    var jwt_payload_base64 = jwt.split('.')[1];","    var jwt_decode = JSON.parse(atob(jwt_payload_base64));","}*/","","var SFAdminUser = pm.environment.get(\"SCF_Admin\");","var Password = pm.environment.get(\"Password\");","var SupplierUser = pm.environment.get(\"SCF_Supplier\");","var FunderUser= pm.environment.get(\"SCF_Investor\");","var BuyerUser= pm.environment.get(\"SCF_Debtor\");","//Check if token you already have expired","if (!jwt || (jwt_decode && Date.now() >= jwt_decode['exp']*1000)){","    let audience = pm.environment.get('audience');","    let getTokenRequest = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: SFAdminUser },","                { key: 'password', value: Password },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest, (err, response) => {","        let jsonResponse = response.json(),","        accessToken_SC = jsonResponse.access_token;","        pm.environment.set('accessToken_SC', accessToken_SC);","    });","}","","let jwt1 = pm.environment.get('accessTokenSupplier_SC');","if (jwt1){","    var jwt_payload_base641 = jwt1.split('.')[1];","    var jwt_decode1 = JSON.parse(atob(jwt_payload_base641));","}","","//Check if token you already have expired","if (!jwt1 || (jwt_decode1 && Date.now() >= jwt_decode1['exp']*1000)){","    let audience = pm.environment.get('audience');","    let getTokenRequest = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: SupplierUser },","                { key: 'password', value: Password },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest, (err, response) => {","        let jsonResponse = response.json(),","        accessTokenSupplier_SC = jsonResponse.access_token;","        pm.environment.set('accessTokenSupplier_SC', accessTokenSupplier_SC);","    });","}","","let jwt2 = pm.environment.get('accessTokenInvestor_SC');","if (jwt2) {","    var jwt_payload_base64_2 = jwt2.split('.')[1];","    var jwt_decode2 = JSON.parse(atob(jwt_payload_base64_2));","}","if (!jwt2 || (jwt_decode2 && Date.now() >= jwt_decode2['exp']*1000)){","    let audience = pm.environment.get('audience');","    let getTokenRequest = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: FunderUser },","                { key: 'password', value: Password },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest, (err, response) => {","        let jsonResponse = response.json(),","        accessTokenInvestor_SC = jsonResponse.access_token;","        pm.environment.set('accessTokenInvestor_SC', accessTokenInvestor_SC);","    });","}","","","let jwt4 = pm.environment.get('accessTokenDebtor_SC');","if (jwt4) {","    var jwt_payload_base64_4 = jwt4.split('.')[1];","    var jwt_decode4 = JSON.parse(atob(jwt_payload_base64_4));","}","if (!jwt4 || (jwt_decode4 && Date.now() >= jwt_decode4['exp']*1000)){","    let audience = pm.environment.get('audience');","    let getTokenRequest = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: BuyerUser },","                { key: 'password', value: Password },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest, (err, response) => {","        let jsonResponse = response.json(),","        accessTokenDebtor_SC = jsonResponse.access_token;","        pm.environment.set('accessTokenDebtor_SC', accessTokenDebtor_SC);","    });","}","","",""]}},{"listen":"test","script":{"id":"0c87a10c-cd0a-4578-ab03-4a8d3ed2060d","type":"text/javascript","exec":[""]}}]},{"name":"BankAccountReceipts Flow","item":[{"name":"Post BankAccountReceipts","event":[{"listen":"prerequest","script":{"id":"fe66b727-60e8-42e2-833b-c0fb608b4821","exec":["// var url = pm.environment.get(\"SCBaseURI\") + \"/api/Subfacilities/\"+pm.environment.get(\"subfacilityid\")+\"/invoices?pageState=available\";","","var url = pm.environment.get(\"SCBaseURI\") + \"/api/Invoices/\"+pm.environment.get(\"facilityId\")+\"/available?afee=\"+pm.environment.get(\"afee\")+\"&disc=\"+pm.environment.get(\"disc\")+\"&sdid=\"+pm.environment.get(\"sdid\")+\"&count=500\";","","console.log(pm.variables.get(\"accessToken_SC\"));","","pm.sendRequest({","    url: url,","    method: 'GET',","    header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_SC\")","      }","      ","}, function (err, res) {","    ","      var jsonData = res.json(); ","      pm.variables.set(\"invoiceId\", jsonData[0].id);    ","      console.log(\"invoiceId :\" + jsonData[0].id);","      ","      var baseURI = pm.environment.get(\"baseURI\");","      var accessToken = pm.variables.get(\"accessToken_LiquidxUser3\");","        ","      pm.sendRequest({","            url: baseURI +'/api/assets?said='+pm.variables.get(\"invoiceId\"),","            method: 'GET',","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer '+ accessToken","            },","    }, function (err, res) {","         if (err) { console.log(err); }","            pm.expect(res).to.have.property('code', 200);","            var jsonData = res.json();","            var assetId ;","            assetId = jsonData[0].id;","            console.log(\"Asset ID in Assets request: \"+ assetId);","            var outstandingAmount = jsonData[0].outstandingAmount;","            pm.variables.set(\"assetId\", assetId);","            pm.variables.set(\"outstandingAmount\", outstandingAmount);","    // });","                ","            function getRandomInt(max) {","              return Math.floor(Math.random() * Math.floor(max));","            }","    ","            var refId = getRandomInt(9999);","            pm.variables.set(\"refId\", refId);","            console.log('refID: '+pm.variables.get(\"refId\"));","            ","            var moment = require('moment'); ","            var local = moment();","            console.log(\"localTime\" , local);","            pm.environment.set(\"localTime\", local);","        ","            var url=  baseURI +'/api/assets/'+ pm.variables.get(\"assetId\");","             ","            pm.sendRequest({","                url: url,","                method: 'GET',","                header: {","                    'Accept': 'application/json',","                    'Content-Type': 'application/json',","                    'Authorization': 'bearer '+ accessToken","                  }","                  ","            }, function (err, res2) {","                var jsonData2 = res2.json();","                console.log(jsonData2);","      ","                console.log(jsonData2[0].payorId);","                pm.variables.set(\"payorId\", jsonData2[0].payorId);","                pm.variables.set(\"payor\", jsonData2[0].payor);","                pm.variables.set(\"payeeId\", jsonData2[0].payeeId);","                pm.variables.set(\"payee\", jsonData2[0].payee);","    ","                pm.variables.set(\"outstandingAmount\", jsonData2[0].outstandingAmount);","    ","                pm.variables.set(\"paymentAmount\", jsonData2[0].faceValue);","                ","                var currency =  jsonData2[0].currencyCode;","                ","                console.log(\"Asset ID in Assets request: \"+ pm.variables.get(\"assetId\"));","                console.log('outstandingAmount: '+pm.variables.get(\"outstandingAmount\"));","                console.log(\"payor: \"+jsonData2[0].payor);","                console.log(\"payorId: \"+jsonData2[0].payorId);","                console.log(\"payee: \"+jsonData2[0].payee);","                console.log(\"paymentAmount: \"+jsonData2[0].faceValue);","             ","                pm.sendRequest({","                    url:  baseURI +'/api/bankaccounts',","                    method: 'GET',","                    header: {","                        'Accept': 'application/json',","                        'Content-Type': 'application/json',","                        'Authorization': 'bearer '+ accessToken","                      }","                      ","                }, function (err, res) {","                    ","                    var jsonData = res.json();","                    for ( var i=0; i<jsonData.length;i++)","                    {","                        if (jsonData[i].currencyCode === currency)","                        {","                            pm.variables.set(\"bankAccountAlias\", jsonData[i].alias);","                            pm.variables.set(\"currencyCode\", jsonData[i].currencyCode);","                            console.log(\"bankAccount\", jsonData[i].alias);","                            console.log(\"currencyCode\", jsonData[i].currencyCode);","                            break;","                        }","                    }","                }); ","            }); ","        });","});"],"type":"text/javascript"}},{"listen":"test","script":{"id":"86e652e9-f998-49f1-97ff-377ecf6ea8e4","exec":["if(pm.response.code == 201 || pm.response.code ==202 & responseBody !== '')","{","    var responseJSONdata = JSON.parse(responseBody);","    ","    pm.test(\"To check Status code is 201\", function () {","        pm.response.to.have.status(201);","    }); ","    ","    pm.variables.set('bankAccountReceiptId',responseJSONdata[0].id );","    pm.variables.set('paymentId',responseJSONdata[0].paymentId );","    ","    console.log('Bank Receipt ID: '+pm.variables.get(\"bankAccountReceiptId\"));","    console.log('Payment ID: '+pm.variables.get(\"paymentId\"));","}"],"type":"text/javascript"}}],"_postman_id":"f47d2b87-293b-491f-ad51-ec97c9ad31f0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"[\r\n\t{\r\n\t    \"bankAccountAlias\": \"{{bankAccountAlias}}\",\r\n\t    \"receiptEntryDate\": \"{{localTime}}\",\r\n\t    \"bankReferenceId\": \"API_Auto_{{refId}}\",\r\n\t    \"payor\": \"{{payor}}\",\r\n\t    \"payee\": \"{{payee}}\",\r\n\t    \"fundType\": \"Wire\",\r\n\t    \"paymentAmount\": {{paymentAmount}},\r\n\t    \"currencyCode\": \"{{currencyCode}}\",\r\n\t    \"note\": \"\",\r\n\t    \"productCode\": \"SCF\",\r\n\t    \"stateId\": 0,\r\n\t    \"processedDate\": \"{{localTime}}\",\r\n\t    \"payorId\": {{payorId}}\r\n\t}\r\n]","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseURI}}/api/BankAccountReceipts","host":["{{baseURI}}"],"path":["api","BankAccountReceipts"]}},"response":[]},{"name":"Put BankAccountReceipts","event":[{"listen":"prerequest","script":{"id":"6d361ee9-b4c6-4d08-8341-716ec81c0609","exec":["var url = pm.environment.get(\"baseURI\") + \"/api/BankAccountReceipts?count=50000\";\r","\r","setTimeout(function(){\r","    pm.sendRequest({\r","    url: url,\r","    method: 'GET',\r","    header: {\r","        'Accept': 'application/json',\r","        'Content-Type': 'application/json',\r","        'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")\r","      }\r","      \r","    }, function (err, res) {\r","    \r","        var jsonData = res.json(); \r","        for (var i=0; i < jsonData.bankReceipts.length; i++)\r","                {\r","                    if (parseInt(jsonData.bankReceipts[i].id)  ==  parseInt(pm.variables.get(\"bankAccountReceiptId\")))\r","                    {\r","                        function getRandomInt(max) {\r","                          return Math.floor(Math.random() * Math.floor(max));\r","                        }\r","                        \r","                        var refId = getRandomInt(9999);\r","                        \r","                        pm.variables.set('bankAccountReceiptId',jsonData.bankReceipts[i].id );\r","                        pm.variables.set('paymentId',jsonData.bankReceipts[i].paymentId );\r","                        pm.variables.set(\"productCode\", jsonData.bankReceipts[i].productCode);\r","                        pm.variables.set(\"bankAccountAlias\", jsonData.bankReceipts[i].bankAccountAlias);\r","                        pm.environment.set(\"receiptEntryDate\", jsonData.bankReceipts[i].receiptEntryDate);\r","                        pm.environment.set(\"goodFundDate\", jsonData.bankReceipts[i].goodFundDate);\r","                        pm.variables.set(\"bankReferenceId\", jsonData.bankReceipts[i].bankReferenceId+\"_Update_\"+refId);\r","                        pm.variables.set(\"payor\", jsonData.bankReceipts[i].payor);\r","                        pm.variables.set(\"payorId\", jsonData.bankReceipts[i].payorId);\r","                        pm.variables.set(\"payee\", jsonData.bankReceipts[i].payee);\r","                        pm.variables.set(\"fundType\", jsonData.bankReceipts[i].fundType);\r","                        pm.variables.set(\"paymentAmount\", jsonData.bankReceipts[i].paymentAmount);\r","                        pm.variables.set(\"currencyCode\", jsonData.bankReceipts[i].currencyCode);\r","                        pm.variables.set(\"note\", jsonData.bankReceipts[i].note);\r","                        pm.variables.set(\"createdBy\", jsonData.bankReceipts[i].createdBy);\r","                        pm.variables.set(\"createdOn\", jsonData.bankReceipts[i].createdOn);\r","                        pm.variables.set(\"stateId\", jsonData.bankReceipts[i].stateId);\r","                        pm.variables.set(\"state\", jsonData.bankReceipts[i].state);\r","                        pm.variables.set(\"processedDate\", jsonData.bankReceipts[i].processedDate);\r","                        break;\r","                    }\r","        }\r","    });      \r","}, pm.variables.get(\"stateChangeDelay\"));"],"type":"text/javascript"}},{"listen":"test","script":{"id":"0588b79a-6eae-4991-9d78-015a3ebb8817","exec":["pm.test(\"Verifying response code and alias: \", function(){","    pm.expect(pm.response.code).to.equal(200);","    ","    var url = pm.variables.get(\"baseURI\");","    url = url.concat(\"/api/BankAccountReceipts?count=100\");","    ","    pm.sendRequest({","        url: url,","        method: 'GET',","        header: {","            'Accept': 'application/json',","            'Content-Type': 'application/json',","            'Authorization': 'bearer '+ pm.variables.get(\"accessToken_LiquidxUser3\")","          }","          ","    }, function (err, res) {","        var jsonData = res.json();","        ","        for(var i = 0; i < jsonData.bankReceipts.length; i++)","        {","            if(jsonData.bankReceipts[i].id == pm.variables.get(\"bankAccountReceiptId\"))","            {","                pm.expect(jsonData.bankReceipts[i].bankReferenceId).to.equal(pm.variables.get(\"bankReferenceId\"));","                break;","            }","        }","    });","});"],"type":"text/javascript"}}],"_postman_id":"6138c2a0-784a-4f09-b670-7ebdc42a8e37","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"\n\t{\n\t\t\"id\": {{bankAccountReceiptId}},\n\t\t\"paymentId\": \"{{paymentId}}\",\n\t\t\"productCode\": \"{{productCode}}\",\n\t\t\"bankAccountAlias\": \"{{bankAccountAlias}}\",\n\t\t\"receiptEntryDate\": \"{{receiptEntryDate}}\",\n\t\t\"goodFundDate\": \"{{goodFundDate}}\",\n\t\t\"bankReferenceId\": \"{{bankReferenceId}}\",\n\t\t\"payor\": \"{{payor}}\",\n\t\t\"payorId\": {{payorId}},\n\t\t\"payee\": \"{{payee}}\",\n\t\t\"fundType\": \"{{fundType}}\",\n\t\t\"paymentAmount\": {{paymentAmount}},\n\t\t\"currencyCode\": \"{{currencyCode}}\",\n\t\t\"note\": \"{{note}}\",\n\t\t\"createdBy\": \"{{createdBy}}\",\n\t\t\"createdOn\": \"{{createdOn}}\",\n\t\t\"stateId\": {{stateId}},\n\t\t\"state\": \"{{state}}\",\n\t\t\"processedDate\": \"{{processedDate}}\",\n\t\t\"receiptDetails\": []\n\t}\n","options":{"raw":{}}},"url":{"raw":"{{baseURI}}/api/BankAccountReceipts","host":["{{baseURI}}"],"path":["api","BankAccountReceipts"]}},"response":[]},{"name":"Delete BankAccountReceipts","event":[{"listen":"test","script":{"id":"eea0fa50-1527-4767-8693-e16d0833ee27","exec":["console.log(\"First test - 200 OK\");","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"876c2ba9-27dd-4fdb-9751-69a2dfcea707","exec":[""],"type":"text/javascript"}}],"_postman_id":"3a273428-f317-44a5-b84b-d85a40e0782f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"url":{"raw":"{{baseURI}}/api/BankAccountReceipts/{{bankAccountReceiptId}}","host":["{{baseURI}}"],"path":["api","BankAccountReceipts","{{bankAccountReceiptId}}"]}},"response":[]}],"_postman_id":"9e756e70-f599-4b72-a724-3716955009d1","event":[{"listen":"prerequest","script":{"id":"d1bdc990-4982-4322-9b4a-d096ff765877","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"2c8dc739-03bb-4eb2-86ac-fbe669808d51","type":"text/javascript","exec":[""]}}]}],"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{accessToken_LiquidxUser3}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"747d5f87-c39a-4a58-8486-d7785c7618a0","type":"text/javascript","exec":["var Liquidx_User1 =  pm.environment.get('Liquidx_User1');","var Liquidx_User3 = pm.environment.get('Liquidx_User3');","// console.log(\"aud\", pm.environment.get('audience'));","//----------------------------Liquidx User1 Token--------------------------------- ","let jwtUser1 = pm.environment.get('accessToken_LiquidxUser1');","if(jwtUser1){","    jwt_payload_base64_User1 = jwtUser1.split('.')[1];","    jwt_decode_User1 = JSON.parse(atob(jwt_payload_base64_User1));","}","//Check if token you already have expired","if (!jwtUser1 || (jwt_decode_User1 && Date.now() >= jwt_decode_User1['exp']*1000))","{","    let audience = pm.environment.get('audience');","    let getTokenRequest_User1 = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value:  Liquidx_User1 },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest_User1, (err, response) => {","        let jsonResponse_User1 = response.json(),","        accessToken_User1 = jsonResponse_User1.access_token;","        console.log(\"Top Level\", { err, jsonResponse_User1, accessToken_User1 });","        pm.environment.set('accessToken_LiquidxUser1', accessToken_User1);","    });","}","","//----------------------------Liquidx User2 Token--------------------------------- ","let jwtUser2 = pm.environment.get('accessToken_LiquidxUser2');","if(jwtUser2){","    jwt_payload_base64_User2 = jwtUser2.split('.')[1];","    jwt_decode_User2 = JSON.parse(atob(jwt_payload_base64_User2));","}","//Check if token you already have expired","if (!jwtUser2 || (jwt_decode_User2 && Date.now() >= jwt_decode_User2['exp']*1000))","{","    let audience = pm.environment.get('audience');","    let getTokenRequest_User2 = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: pm.environment.get('Liquidx_User2') },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest_User2, (err, response) => {","        let jsonResponse_User2 = response.json(),","        accessToken_User2 = jsonResponse_User2.access_token;","        console.log(\"Top Level\", { err, jsonResponse_User2, accessToken_User2 });","        pm.environment.set('accessToken_LiquidxUser2', accessToken_User2);","    });","}","","//----------------------------Liquidx User3 Token--------------------------------- ","let jwtUser3 = pm.environment.get('accessToken_LiquidxUser3');","if(jwtUser3){","    jwt_payload_base64_User3 = jwtUser3.split('.')[1];","    jwt_decode_User3 = JSON.parse(atob(jwt_payload_base64_User3));","}","//Check if token you already have expired","if (!jwtUser3 || (jwt_decode_User3 && Date.now() >= jwt_decode_User3['exp']*1000))","{","    let audience = pm.environment.get('audience');","    let getTokenRequest_User3 = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value:  Liquidx_User3 },","                { key: 'password', value:  pm.environment.get('Liquidx_User3_Password') },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest_User3, (err, response) => {","        let jsonResponse_User3 = response.json(),","        accessToken_User3 = jsonResponse_User3.access_token;","        console.log(\"Top Level\", { err, jsonResponse_User3, accessToken_User3 });","        pm.environment.set('accessToken_LiquidxUser3', accessToken_User3);","    });","}","","//----------------------------Liquidx User4 Token--------------------------------- ","let jwtUser4 = pm.environment.get('accessToken_LiquidxUser4');","if(jwtUser4){","    jwt_payload_base64_User4 = jwtUser4.split('.')[1];","    jwt_decode_User4 = JSON.parse(atob(jwt_payload_base64_User4));","}","//Check if token you already have expired","if (!jwtUser4 || (jwt_decode_User4 && Date.now() >= jwt_decode_User4['exp']*1000))","{","    let audience = pm.environment.get('audience');","    let getTokenRequest_User4 = {","        method: 'POST',","        url: 'https://lqxdev.b2clogin.com/lqxdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_sign_in_using_ropc',","        header: \"Content-Type: application/x-www-form-urlencoded\",","        body: {","            mode: 'urlencoded',","            urlencoded: [","                { key: 'grant_type', value: 'password' },","                { key: 'username', value: pm.environment.get('Liquidx_User4') },","                { key: 'password', value: 'Liquidx123' },","                { key: 'scope', value: 'openid '+audience+' offline_access' },","                { key: 'client_id', value: audience }","            ]","        }","    };","    pm.sendRequest(getTokenRequest_User4, (err, response) => {","        let jsonResponse_User4 = response.json(),","        accessToken_User4 = jsonResponse_User4.access_token;","        console.log(\"Top Level\", { err, jsonResponse_User4, accessToken_User4 });","        pm.environment.set('accessToken_LiquidxUser4', accessToken_User4);","    });","}","","","","","","//--------------------------Global Functions----------------------------","","pm.globals.set(\"PTShelper\", function loadPTShelper() {","","    let PTShelper = {};","","    let postRequest;","","    PTShelper.verifyState = (method, apiURL, accessToken, type, expStateId, expStateName, user) => {","        // setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","        if (user === 'undefined' || user === undefined) {","            user = 'Admin';","        }","        postRequest = {","            url: apiURL,","            method: method,","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","        };","","        return pm.sendRequest(postRequest, function (err, res) {","            if (err) { console.log(err); return err; }","            pm.expect(res).to.have.property('code', 200);","            var jsonData = res.json();","            if (jsonData.length > 0) {","                pm.test('To check ' + type + ' \"' + jsonData[0].id + '\" status is \"' + expStateName + '\" for \"' + user + '\".', function () {","                    pm.expect(jsonData[0].stateId).to.eql(expStateId);","                    pm.expect(jsonData[0].state).to.eql(expStateName);","                });","                return res.json();","            }","            else {","                console.log(\"no responsebody\");","                return 1;","            }","        });","","    };","","    PTShelper.verifyMultipleState = (method, apiURL, accessToken, type, expStateId, expStateName, user) => {","        if (user === 'undefined' || user === undefined) {","            user = 'Admin';","        }","        postRequest = {","            url: apiURL,","            method: method,","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","        };","","        return pm.sendRequest(postRequest, function (err, res) {","            if (err) { console.log(err); return err; }","            pm.expect(res).to.have.property('code', 200);","            var jsonData = res.json();","            if (jsonData.length > 0) {","                pm.test('To check ' + type + ' \"' + jsonData[0].id + '\" status is \"' + jsonData[0].state + '\" for \"' + user + '\".', function () {","                    pm.expect(jsonData[0].stateId).to.be.oneOf(expStateId);","                    pm.expect(jsonData[0].state).to.be.oneOf(expStateName);","                });","                return res.json();","            }","            else {","                console.log(\"no responsebody\");","                return 1;","            }","        });","","    };","","    PTShelper.verifyBankAccountReceiptsState = (accessToken, paymentId, type, expStateId, expStateName, user) => {","        // setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","        if (user === 'undefined' || user === undefined) {","            user = 'Admin';","        }","        postRequest = {","            url: pm.environment.get(\"baseURI\") + '/api/BankAccountReceipts?count=50000',","            method: 'GET',","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","        };","","        return pm.sendRequest(postRequest, function (err, res) {","            if (err) { console.log(err); return err; }","            pm.expect(res).to.have.property('code', 200);","            var jsonData = res.json();","            // console.log(jsonData);","            if (jsonData.bankReceipts.length > 0) {","                pm.test('To check ' + type + ' \"' + paymentId + '\" status is \"' + expStateName + '\" for \"' + user + '\".', function () {","                    for (var i = 0; i < jsonData.bankReceipts.length; i++) {","                        // console.log(jsonData.bankReceipts[i]);","                        if (jsonData.bankReceipts[i].paymentId == paymentId) {","                            pm.expect(jsonData.bankReceipts[i].stateId).to.eql(expStateId);","                            pm.expect(jsonData.bankReceipts[i].state).to.eql(expStateName);","                            break;","                        }","                    }","","                });","                return res.json();","            }","            else {","                console.log(\"no responsebody\");","                return 1;","            }","        });","","    };","","    PTShelper.verifyOutgoingWireState = (accessToken, outgoingWireId, type, expStateId, expStateName, user) => {","        // setTimeout(function(){}, pm.variables.get(\"stateChangeDelay\"));","        if (user === 'undefined' || user === undefined) {","            user = 'Admin';","        }","        postRequest = {","            url: pm.environment.get(\"baseURI\") + '/api/OutgoingWires/'+outgoingWireId,","            method: 'GET',","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","        };","","        return pm.sendRequest(postRequest, function (err, res) {","            if (err) { console.log(err); return err; }","            pm.expect(res).to.have.property('code', 200);","            var jsonData = res.json();","            // console.log(jsonData);","            if (jsonData.outgoingWires.length > 0) {","                pm.test('To check ' + type + ' \"' + outgoingWireId + '\" status is \"' + expStateName + '\" for \"' + user + '\".', function () {","                    for (var i = 0; i < jsonData.outgoingWires.length; i++) {","                        // console.log(jsonData.outgoingWires[i]);","                        if (jsonData.outgoingWires[i].outgoingWireId == outgoingWireId) {","                            pm.expect(jsonData.outgoingWires[i].stateId).to.eql(expStateId);","                            pm.expect(jsonData.outgoingWires[i].state).to.eql(expStateName);","                            break;","                        }","                    }","","                });","                return res.json();","            }","            else {","                console.log(\"no responsebody\");","                return 1;","            }","        });","","    };","","    PTShelper.getAssetID = (baseURI, accessToken) => {","        return pm.sendRequest({","                url: baseURI +'/api/assets?said='+pm.variables.get(\"invoiceId\"),","                method: 'GET',","                header: {","                    'Accept': 'application/json',","                    'Content-Type': 'application/json',","                    'Authorization': 'bearer '+ accessToken","                },","            }, function (err, res) {","             if (err) { console.log(err); }","                pm.expect(res).to.have.property('code', 200);","                var jsonData = res.json();","                var assetId = jsonData[0].id;","                console.log(\"Asset ID in Assets request: \"+ assetId);","                var outstandingAmount = jsonData[0].outstandingAmount;","                pm.variables.set(\"assetId\", assetId);","                pm.variables.set(\"outstandingAmount\", outstandingAmount);","            });","    }","","  PTShelper.verifyBankAccReceiptState = (accessToken, receiptId, type, expStateId, expStateName, user) => {","","    if (user === 'undefined' || user === undefined) {","      user = 'Admin';","    }","","    postRequest = {","      url: pm.environment.get(\"baseURI\") + '/api/payments/'+receiptId,","      method: 'GET',","      header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + accessToken","      }","    };","    return pm.sendRequest(postRequest, function (err, res) {","      if (err) { console.log(err); return err; }","      pm.expect(res).to.have.property('code', 200);","      var jsonData = res.json();","      pm.test('To check ' + type + ' \"' + receiptId + '\" status is \"' + expStateName + '\" for \"' + user + '\".', function () {","        pm.expect(jsonData.payments[0].stateId).to.eql(expStateId);","        pm.expect(jsonData.payments[0].state).to.eql(expStateName);","      });","      return res.json();","    });","","  };","  ","  PTShelper.verifyTransactionState = (accessToken, apiURL,TransactionId, type, expStateId, expStateName, user) => {","","    if (user === 'undefined' || user === undefined) {","      user = 'Admin';","    }","","    postRequest = {","      url: apiURL,","      method: 'GET',","      header: {","        'Accept': 'application/json',","        'Content-Type': 'application/json',","        'Authorization': 'bearer ' + accessToken","      }","    };","    return pm.sendRequest(postRequest, function (err, res) {","      if (err) { console.log(err); return err; }","      pm.expect(res).to.have.property('code', 200);","      var jsonData = res.json();","      pm.test('To check ' + type + ' \"' + TransactionId + '\" status is \"' + expStateName + '\" for \"' + user + '\".', function () {","       pm.expect(jsonData[0].transactionStateId).to.eql(expStateId);","       pm.expect(jsonData[0].status).to.eql(expStateName);","      });","      return res.json();","    });","  };","    return PTShelper;","} + '; loadPTShelper();');","","","//--------------------------Global Functions----------------------------","pm.globals.set(\"ARhelper\", function loadARhelper() {","","    let ARhelper = {};","","    let postRequest;","  ARhelper.verifyState = (method, apiURL, accessToken, type, expStateId, expStateName, user) => {","","        if (user === 'undefined' || user === undefined) {","            user = 'Admin';","        }","        postRequest = {","            url: apiURL,","            method: method,","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","        };","","        return pm.sendRequest(postRequest, function (err, res) {","            if (err) { console.log(err); return err; }","            pm.expect(res).to.have.property('code', 200);","            var jsonData = res.json();","           // if (jsonData.length > 0) {","                if (type.toLowerCase() === 'invoice') {","                    // pm.expect(jsonData[0].StateId).to.eql(expStateId);","                    for (i = 0; i < jsonData.length; i++) {","                        pm.test('To check ' + type + ' \"' + jsonData[i].id + '\" status is \"' + expStateName + '\" for \"' + user + '\".', function () {","                             pm.expect(jsonData[i].stateName).to.eql(expStateName, \"StateName\");","                             //pm.expect(jsonData[i].stateId).to.eql(expStateId, \"StateId\");","                        })","                    }","                } else {","                    pm.test('To check ' + type + ' \"' + jsonData.id + '\" status is \"' + expStateName + '\" for \"' + user + '\".', function () {","                        console.log(\"state ID\" +expStateId);","                          pm.expect(jsonData.externalStateName).to.eql(expStateName);","                        pm.expect(jsonData.stateId).to.eql(Number(expStateId));","                      ","                    })","                }","","                return res.json();","           // }","          //  else {","           //     console.log(\"no responsebody\");","           //     return 1;","           // }","        });","","    };","    ARhelper.verifyImportedInvoiceState = (method, apiURL, accessToken, invoiceList, user) => {","","        if (user === 'undefined' || user === undefined) {","            user = 'Supplier';","        }","        postRequest = {","            url: apiURL,","            method: method,","            header: {","                'Accept': 'application/json',","                'Content-Type': 'application/json',","                'Authorization': 'bearer ' + accessToken","            }","        };","","        return pm.sendRequest(postRequest, function (err, res) {","            if (err) { console.log(err); return err; }","            pm.expect(res).to.have.property('code', 200);","            var jsonData = res.json();","            if (jsonData.length > 0) {","                for (var j = 0; j < invoiceList.length; j++) {","                    for (var i = 0; i < jsonData.length; i++) {","                        if (invoiceList[j] === jsonData[i].invoiceNumber) {","                            pm.test('To check imported invoice \"' + invoiceList[j] + '\" status is Unbound for \"' + user + '\".', function () {","                                pm.expect(jsonData[i].stateId).to.eql('Unbound');","                            });","                            break;","                        }","                    }","                }","             ","                return res.json();","            }","            else {","                console.log(\"no responsebody\");","                return 1;","            }","        });","    }","    ARhelper.verifyFundingBalance = (method, apiURL, accessToken, type, expectedAmt, isNonNegative, user) => {","","\tif (user === 'undefined' || user === undefined) {","\t\tuser = 'Admin';","\t}","\tpostRequest = {","\t\turl: apiURL,","\t\tmethod: method,","\t\theader: {","\t\t\t'Accept': 'application/json',","\t\t\t'Content-Type': 'application/json',","\t\t\t'Authorization': 'bearer ' + accessToken","\t\t}","\t};","","\treturn pm.sendRequest(postRequest, function (err, res) {","\t\tif (err) { console.log(err); return err; }","\t\tpm.expect(res).to.have.property('code', 200);","\t\tvar jsonData = res.json();","\t","\t\tpm.test('To check funding balance/outstanding amount for asset \"' + jsonData[0].id + '\" is \"'+ expectedAmt + '\" when payment is applied\".', function () {","            console.log(\"purchase price\", jsonData[0].transactionAssetInvestors[0].purchasePrice);","\t\t\tconsole.log(\"outstanding amount =\", jsonData[0].outstandingAmount);","            console.log(\"Type = \", type)","\t\t\tif (type ==='funding')","            {","      pm.expect(jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding).to.eql(expectedAmt);","     //   pm.expect(jsonData[0].transactionAssetInvestors[0].purchasePriceOutstanding) < (expectedAmt);","            } else {","                pm.expect(jsonData[0].outstandingAmount).to.eql(expectedAmt);","            }","\t\t})","\t});","};","","    return ARhelper;","","} + '; loadARhelper();');","//-------------------------------"]}},{"listen":"test","script":{"id":"45bade98-fbd5-45ae-a2ab-b1559fd5ecbd","type":"text/javascript","exec":[""]}}]}}